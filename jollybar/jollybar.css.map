{"version":3,"sourceRoot":"","sources":["../../src/_framework.scss","../../src/harmony/_base.scss","../../src/_variables.scss","../../src/mixins/_breakpoints.scss","../../src/config/_theme.scss","../../src/thirdparty/_animate.scss","../../jollybar/debugger.scss"],"names":[],"mappings":";AA+EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AC7DA;EACE;EACA;;;AAGF;AAAA;EAEE;EACA;;;AAGF;EACE;EACA;;AAEA;EACE;EAEA;;AAGF;EACE;EACA;EACA,WA1BG;EA2BH,aCgTa;ED/Sb;;;AEmBF;EF7CF;IACE;IACA;;EAGF;AAAA;IAEE;IACA;;EAGF;IACE;IACA;;EAEA;IACE;IAEA;;EAGF;IACE;IACA;IACA,WA1BG;IA2BH,aCgTa;ID/Sb;;;AEmBF;EF7CF;IACE;IACA;;EAGF;AAAA;IAEE;IACA;;EAGF;IACE;IACA;;EAEA;IACE;IAEA;;EAGF;IACE;IACA;IACA,WA1BG;IA2BH,aCgTa;ID/Sb;;;AEmBF;EF7CF;IACE;IACA;;EAGF;AAAA;IAEE;IACA;;EAGF;IACE;IACA;;EAEA;IACE;IAEA;;EAGF;IACE;IACA;IACA,WA1BG;IA2BH,aCgTa;ID/Sb;;;AEmBF;EF7CF;IACE;IACA;;EAGF;AAAA;IAEE;IACA;;EAGF;IACE;IACA;;EAEA;IACE;IAEA;;EAGF;IACE;IACA;IACA,WA1BG;IA2BH,aCgTa;ID/Sb;;;AEmBF;EF7CF;IACE;IACA;;EAGF;AAAA;IAEE;IACA;;EAGF;IACE;IACA;;EAEA;IACE;IAEA;;EAGF;IACE;IACA;IACA,WA1BG;IA2BH,aCgTa;ID/Sb;;;AAmCN;EACE,OGwBW;EHvBX;EACA;;AAGA;EACE;;AAGF;EACE,OGeS;EHdT;EACA;EI4BF;EASA;EAMA;;AA6CE;EAoCI;IACE;;EAEF;IACE;;EAEF;IACE;;;AJ/HR;EACE,OGOS;;AHJX;EACE,OGKW;;AHFb;EACE;EACA;;;AAKJ;EACE;;AACA;EACE;;;AAMJ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AAGF;AAAA;EAEE;EACA;EACA;EACA;EACA;EACA;;;AAGF;EACE,aCkDY;;AD/CZ;EACE;;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;;;AAGF;AAAA;EAEE;;;AAIF;EACE;EACA,OG1GK;EH2GL,YG/GK;;;AHkHP;EACE;;;AK/IF;AAmSE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACE;EACA;EACA;;AAEF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAEF;EACE;;AAEF;EACE;EACA;;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACE;;;AA9UF;EACE;EACA;EACA;EACA,OAhBiB;EAiBjB;EACA;EACA;EACA;EACA;EACA;;;AAgBF;EACE;EACA,YAvCiB;EAwCjB;EACA;EACA;EACA,OAtCM;EAuCN;EACA;EACA;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EACA,YA1DiB;EA2DjB;EACA;EACA;EACA;EACA;;AACA;EACE,YAhEkB;EAiElB;EACA;EACA;EACA;EACA;EACA;EACA;;AAGA;EACE,OA/EO;;AAoFb;EACE;EACA;;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAIJ;EACE;EACA;EACA;EACA;EACA,OAxGM;EAyGN;EACA;EACA;EACA;EACA;EACA;EACA;;AAIA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,YA1He;EA2Hf;EACA;EACA;;AACA;EACE;EACA;EACA;EACA;;AAEF;EACE;EACA;EACA;;AAEF;EACE;EACA;EACA;EACA;EACA;;AAEF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAKN;EACE;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;;AAEA;EAEE;;AAMN;EACE;EACA;EACA;EACA;;AAEA;EACE,kBAhLI;EAiLJ;EACA;EACA;;AAKF;EACE;EACA,kBAhMe;EAiMf,OA1LY;EA2LZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAGF;EACE;;AACA;EACE;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OA/OU;EAgPV;EACA;;AAEA;EACE,OArPK;EAsPL;EACA;EACA;;AASd;EACE;;AAGF;EAEI;IACE,kBAzQa;IA0Qb;IACA,OApQU;IAqQV;IACA;IACA;IACA;;EAEA;IACE;;EAEF;IACE;;EACA;IACE;IACA;IACA;;EACA;IACE;IACA;IACA;;EACA;IACE;IACA;;;;AAwEhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAQE;;;AAuBE;EACE;IACE;;EAEF;IAEE;;EAEF;IAEE;;EAEF;IAEE;;;AAKJ;EACE;IACE;;EAEF;IAEE;;EAEF;IAEE;;EAEF;IAEE;;;AAdJ;EACE;IACE;;EAEF;IAEE;;EAEF;IAEE;;EAEF;IAEE;;;AAdJ;EACE;IACE;;EAEF;IAEE;;EAEF;IAEE;;EAEF;IAEE;;;AAdJ;EACE;IACE;;EAEF;IAEE;;EAEF;IAEE;;EAEF;IAEE;;;AAYJ;EACE;IACE;;EAEF;IAEE;;EAEF;IAEE;;EAEF;IAEE;;;AAIJ;EACE;IACE;;EAEF;IAEE;;EAEF;IAEE;;EAEF;IAEE;;;AH3QJ;AGgdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA;IACE;IACA;IACA;;EAEA;IACE;;;AH/dJ;AGgdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA;IACE;IACA;IACA;;EAEA;IACE;;;AH/dJ;AGgdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA;IACE;IACA;IACA;;EAEA;IACE;;;AH/dJ;AGgdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA;IACE;IACA;IACA;;EAEA;IACE;;;AH/dJ;AGgdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA;IACE;IACA;IACA;;EAEA;IACE;;;AHpcJ;AGqbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASA;IACE;IACA;IACA;;EAEA;IACE","file":"jollybar.css","sourcesContent":["@use \"sass:map\";\n@use \"sass:list\";\n@use \"sass:math\";\n@use \"sass:color\";\n@use \"sass:meta\";\n@use \"sass:string\";\n\n@import \"thirdparty/animate\";\n@import \"framework/functions\";\n@import \"framework/color-functions\";\n@import \"framework/props\";\n@import \"framework/rfs\";\n@import \"framework/typography\";\n@import \"framework/rhythm\";\n@import \"framework/math-functions\";\n\n@import \"config/globals\"; // CONSTANTS & RATIOS\n@import \"config/tokens\"; // GENERATED TYPOGRAPHY SIZES\n@import \"config/palette\"; // DMT PALETTE [UPDATED]\n@import \"config/theme\"; // FINAL TWEAKS\n\n//\n// CONFIG VARS & ASSEMBLE MAIN FUNCTIONALITY\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"variables\";\n@import \"variables-dark\";\n\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n@import \"mixins\";\n\n///   Superclass\n///  --------------------\n///   The superclass is the application root class that\n///   wraps and scope the lib selectors. Use this class\n///   to wrap the modules in a superclass preserving the\n///   outer scope from the lib effects\n\n@mixin superclass() {\n  @if $superclass and str-length($superclass) > 0 {\n    .#{$superclass} {\n      @content;\n    }\n  } @else {\n    body {\n      @content;\n    }\n  }\n}\n\n///   CSS Variables\n///  --------------------\n///   Use this mixin to declare a set of CSS Custom Properties.\n///   The variables in $css_variables will be properly prefixed.\n///   The use of this mixin is encouraged to keep a good scalability.\n\n@mixin cssvars($css_variables) {\n  :root {\n    @each $name, $value in $css_variables {\n      --#{$name}: #{$value};\n    }\n  }\n}\n\n/// This mixin is used to change a CSS property value.\n/// It will change a declared css variable auto-prefixing it.\n@mixin cssvar($name, $value: \"\") {\n  --#{$name}: #{$value};\n}\n\n/// Retrieve a css variable value with already autoprefixed.\n/// Use the mixin if you want to change the variable value.\n@function cssvar($name) {\n  @return var(--#{$name});\n}\n\n@mixin mojoBanner($file, $version) {\n  /**!\n   * Mojo #{$file} v#{$version} (https://github.com/huement/mojo/)\n   * Copyright 2023-* Huement (https://huement.com)\n   * Licensed under Mozilla Public License 2 [MPL-2.0] (https://github.com/huement/mojo/blob/main/LICENSE)\n   *  Based on:\n   *    Shards v3.0.0 (https://github.com/DesignRevision/shards-ui)\n   *    Bootstrap v5.3.2 (https://getbootstrap.com/)\n   */\n}\n\n@mixin debugMessage($string) {\n  @if ($debug == true) {\n    @debug \"#{$string}\";\n  }\n}\n","// =============================================================================\n// GENERAL TYPOGRAPHY\n// =============================================================================\n\n/// TypographyBodyBase Loads the relative font size + line height combos\n/// for a given breakpoint.\n@mixin TypographyBodyBase($mMap) {\n  @debug \"Setting Font Base for #{map.get($mMap, name)}\";\n\n  $scale: map.get($mMap, scale);\n  $lH: map.get($mMap, lineHeight);\n  $lHpx: map.get($mMap, lineHeight_px);\n  $fS: map.get($mMap, fontSize);\n  $mt: map.get($mMap, vertical);\n  $whiteSpace: px_rem(($fS - $mt), strip-units($fS));\n  $leadSize: calc(strip-units($fS) + $mt) * $scale;\n  $lead: decimal_round(px_rem($leadSize * 1px, strip-units($fS)), 2);\n\n  html {\n    font-size: #{$fS};\n    line-height: #{$lHpx};\n  }\n\n  body,\n  .size-fluid {\n    font-size: px_rem($fS, strip-units($fS));\n    line-height: #{$lH * 1rem};\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: #{$lH * 1rem};\n\n    a {\n      margin-right: decimal_round(($whiteSpace * .5), 0);\n      //line-height: #{$lH + \"rem\"};\n      margin-left: decimal_round(($whiteSpace * .5), 0);\n    }\n\n    &.lead {\n      margin-top: vr-block(.5);\n      margin-bottom: vr-block(1);\n      font-size: $lead;\n      line-height: $lead-line-height;\n      letter-spacing: -.05rem;\n    }\n  }\n}\n\n// TODO Update This to actually work\n// @include cssvars(\n//   (\n//     paragraph-font-size: 1em,\n//     paragraph-margin-bottom: 24px,\n//     link-color: cssvar(primary-color),\n//     link-text-transform: none,\n//     link-text-decoration: none,\n//     link-font-weight: normal,\n//   )\n// );\n\n// HTML+BODY Font Styles\n$minBP: nth(map-keys($chords), 1);\n$firstMap: map.get($chords, $minBP);\n@include TypographyBodyBase($firstMap);\n\n//  Skip smallest breakpoint b/c size is 0.\n$maxBP: calc(length(map-keys($chords)) - 1);\n@debug \"Total Breakpoints: #{$maxBP + 1}\";\n@each $mapKey, $c in $chords {\n  @if (map.get($c, abrev) != $minBP) {\n    @include media-breakpoint-up(map.get($c, abrev)) {\n      @include TypographyBodyBase($c);\n    }\n  }\n}\n\n//\n//  HYPERLINKS\na {\n  color: $link-color;\n  text-decoration: none;\n  outline-style: none;\n  // @TODO Animate\n\n  &.underline {\n    text-decoration: underline;\n  }\n\n  &:hover {\n    color: $link-hover;\n    text-decoration: underline;\n    cursor: pointer;\n    @include animate-css(pulse);\n  }\n\n  &:link {\n    color: $link-color;\n  }\n\n  &:visited {\n    color: $link-visited;\n  }\n\n  small {\n    font-variant: small-caps;\n    text-decoration: none;\n  }\n}\n\n// Fix button stylings\na.btn {\n  text-decoration: none;\n  &:hover {\n    text-decoration: none;\n  }\n}\n\n//\n//  Paragraph Styles\np {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"onum\", \"pnum\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-numeric: oldstyle-nums, proportional-nums;\n  hyphens: none; // sets a minimum number of characters before and after the break\n  word-break: break-word; //non-standard css for webkit\n  word-wrap: break-word; // cleaning up the ragged lines and breaks\n  overflow-wrap: break-word;\n  -webkit-hyphenate-before: 2;\n  -webkit-hyphenate-after: 3;\n  hyphenate-lines: 3;\n  text-rendering: optimizelegibility;\n}\n\np abbr,\np span {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"onum\", \"pnum\", \"smcp\", \"c2sc\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-caps: all-small-caps;\n  font-variant-numeric: oldstyle-nums, proportional-nums;\n  text-rendering: optimizelegibility;\n}\n\np + p {\n  text-indent: $main-indent;\n\n  // No indent for drop caps\n  + .drop-cap {\n    text-indent: 0;\n  }\n}\n\nabbr {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"onum\", \"pnum\", \"smcp\", \"c2sc\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-caps: all-small-caps;\n  font-variant-numeric: oldstyle-nums, proportional-nums;\n  text-rendering: optimizelegibility;\n}\n\ntd {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"lnum\", \"tnum\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-numeric: lining-nums, tabular-nums;\n}\n\nstrong,\nb {\n  font-weight: 600;\n}\n\n// Highlight\nmark {\n  padding: 0 .2rem;\n  color: $dark;\n  background: $info;\n}\n\ndisabled {\n  color: rgba($dark, .5);\n}\n","// Shards variables\n$variable-prefix: bs-; // Deprecated in v5.2.0 for the shorter `$prefix`\n$prefix: $variable-prefix;\n$debug: true;\n\n$font-path: '/fonts/';\n$icon-prefix: hui;\n$icon-size: 24px;\n\n// $superclass: \"mojo\";\n$superclass: false;\n\n// scss-docs-start theme-text-variables\n$primary-text-emphasis: shade-color($primary, 60%);\n$secondary-text-emphasis: shade-color($secondary, 60%);\n$success-text-emphasis: shade-color($success, 60%);\n$info-text-emphasis: shade-color($info, 60%);\n$warning-text-emphasis: shade-color($warning, 60%);\n$danger-text-emphasis: shade-color($danger, 60%);\n$light-text-emphasis: $gray-700;\n$dark-text-emphasis: $gray-700;\n// scss-docs-end theme-text-variables\n\n// scss-docs-start theme-bg-subtle-variables\n$primary-bg-subtle: tint-color($primary, 80%);\n$secondary-bg-subtle: tint-color($secondary, 80%);\n$success-bg-subtle: tint-color($success, 80%);\n$info-bg-subtle: tint-color($info, 80%);\n$warning-bg-subtle: tint-color($warning, 80%);\n$danger-bg-subtle: tint-color($danger, 80%);\n$light-bg-subtle: mix($gray-100, $white);\n$dark-bg-subtle: $gray-400;\n// scss-docs-end theme-bg-subtle-variables\n\n// scss-docs-start theme-border-subtle-variables\n$primary-border-subtle: tint-color($primary, 60%);\n$secondary-border-subtle: tint-color($secondary, 60%);\n$success-border-subtle: tint-color($success, 60%);\n$info-border-subtle: tint-color($info, 60%);\n$warning-border-subtle: tint-color($warning, 60%);\n$danger-border-subtle: tint-color($danger, 60%);\n$light-border-subtle: $gray-200;\n$dark-border-subtle: $gray-500;\n// scss-docs-end theme-border-subtle-variables\n\n$min-contrast-ratio: 4.5;\n\n// Customize the light and dark text colors for use in our color contrast function.\n$color-contrast-dark: $dark;\n$color-contrast-light: $light;\n\n// Set a specific jump point for requesting color jumps\n$theme-color-interval: 8%;\n\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\n$yiq-contrasted-threshold: 150;\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark: $gray-900;\n$yiq-text-light: $white;\n\n// Options\n//\n// Quickly modify global styling by enabling or disabling optional features.\n\n$enable-rounded: true;\n$enable-shadows: true;\n$enable-gradients: false; // Not supported by Shards.\n$enable-transitions: true;\n$enable-hover-media-query: false; // Deprecated, no longer affects any compiled CSS\n$enable-fonts-import: true;\n$enable-caret: true;\n\n$enable-reduced-motion: true;\n$enable-smooth-scroll: true;\n$enable-grid-classes: true;\n$enable-container-classes: true;\n$enable-cssgrid: false;\n$enable-button-pointers: true;\n$enable-rfs: true;\n$enable-validation-icons: true;\n$enable-negative-margins: false;\n$enable-deprecation-messages: true;\n$enable-important-utilities: true;\n$enable-display-sizes: true;\n\n$enable-dark-mode: false; // dark is the new default\n$color-mode-type: data; // `data` or `media-query`\n\n// TODO: add $enable-light-mode: true; functionality\n\n// Forms\n\n$border-color: #becad6;\n$input-frozen-color: #abb6bf;\n\n// Spacing\n\n$spacer: 1.5rem; // ~ 24px\n\n// Body\n\n$body-bg: $body;\n$body-color: $text;\n\n// Links\n$link-decoration: none;\n$link-hover-decoration: none;\n\n// Grid breakpoints\n\n$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px,\n  xxl: 1400px,\n);\n\n@include _assert-ascending($grid-breakpoints, '$grid-breakpoints');\n@include _assert-starts-at-zero($grid-breakpoints);\n\n// Grid containers\n//\n// Define the maximum width of `.container` for different screen sizes.\n\n$container-max-widths: (\n  sm: 540px,\n  md: 720px,\n  lg: 960px,\n  xl: 1140px,\n  xxl: 1320px,\n);\n\n@include _assert-ascending($container-max-widths, '$container-max-widths');\n\n$grid-columns: 12;\n$grid-gutter-width: 1.5rem;\n$grid-row-columns: 6;\n$container-padding-x: $grid-gutter-width;\n$break-point-limit: 'medium';\n$tile-spacing: 0.75rem;\n\n// Components\n\n$line-height-lg: 1.5;\n$line-height-sm: 1.5;\n\n$border-width: 0.0625rem;\n$border-width-lg: 0.188rem;\n$border-width-sm: 0.031rem;\n\n$border-radius: 0.375rem;\n$border-radius-lg: 0.5rem;\n$border-radius-sm: 0.35rem;\n$border-radius-xl: 1rem;\n$border-radius-2xl: 2rem;\n$border-radius-pill: 50rem;\n\n$border-style: solid;\n$border-color: $gray-700;\n$border-color-translucent: rgba($gray-700, 0.175);\n$enable-angled-edges: true;\n$angle-edge-size: 3;\n\n$hr-margin-y: $spacer;\n$hr-color: inherit;\n$hr-border-color: null; // Allows for inherited colors\n$hr-border-width: $border-width;\n$hr-opacity: 0.25;\n\n$box-shadow: 0 0.5rem 1rem rgba($dark, 0.15);\n$box-shadow-sm: 0 0.125rem 0.25rem rgba($dark, 0.075);\n$box-shadow-lg: 0 1rem 3rem rgba($dark, 0.175);\n$box-shadow-inset: inset 0 1px 2px rgba($dark, 0.075);\n\n$component-active-color: $white;\n$component-active-bg: theme-color('primary');\n\n// Easings\n$ease-in-out-circ: cubic-bezier(0.27, 0.01, 0.38, 1.06);\n\n// Transitions\n$transition-duration: 250ms;\n$transition-base: all $transition-duration $ease-in-out-circ;\n$transition-fade: opacity 200ms ease-in-out;\n$transition-collapse: height 350ms ease-in-out;\n$transition-move: 420ms $ease-in-out-circ;\n\n// Harmony\n$modular-ratio: $MAJOR_THIRD;\n$line-height-base: 1.5;\n$block-spacing: 1.5rem;\n$vertical-unit: 0.5rem;\n$main-unit: rem;\n$main-indent: 0.24rem;\n$spacers: (\n  0: 0,\n  1: $spacer * 0.25,\n  2: $spacer * 0.5,\n  3: $spacer,\n  4: $spacer * 1.5,\n  5: $spacer * 3,\n);\n$gutters: $spacers;\n\n$font-sizes: (\n  xs: 0.875rem,\n  // 14px\n  sm: 1rem,\n  // 16px\n  md: 1.25rem,\n  // 30px\n  lg: 1.5rem,\n  // 24px\n  xl: 2rem,\n  // 32px\n);\n\n$font-line-sizes: (\n  xs: map.get($font-sizes, 'xs') * $line-height-base,\n  sm: map.get($font-sizes, 'sm') * $line-height-base,\n  md: map.get($font-sizes, 'md') * $line-height-base,\n  lg: map.get($font-sizes, 'lg') * $line-height-base,\n  xl: map.get($font-sizes, 'xl') * $line-height-base,\n);\n\n//\n// Title, Subtitle, Display Font Variables\n//\n\n$title-size: 3.5rem;\n$title-weight: 700;\n$title-strong-weight: inherit;\n\n$subtitle-size: 2rem;\n$subtitle-weight: 400;\n$subtitle-strong-weight: 500;\n\n$display-font-family: null;\n$display-font-style: null;\n$display-font-weight: 300;\n$display-line-height: 1.2;\n\n$display-font-sizes: if(\n  $enable-display-sizes,\n  (\n    1: 5rem,\n    2: 4.5rem,\n    3: 4rem,\n    4: 3.5rem,\n    5: 3rem,\n    6: 2.5rem,\n  ),\n  null\n);\n\n// Optionally Load Fonts this way\n// Default theme will turn this off in the theme file unless you remove it\n// which will then fallback to this.\n$google-fonts-import: 'https://fonts.googleapis.com/css?family=Poppins:300,400,500,600|Roboto+Mono'; // Includes: Poppins: Light, Regular, Medium, Semi-bold; Roboto Mono: Regular\n\n$font-family-poppins-first: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n  sans-serif;\n$font-family-system-first: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n$font-family-roboto-mono-first: 'Roboto Mono', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\n\n$font-family-sans-serif: $font-family-system-first;\n$font-family-monospace: $font-family-roboto-mono-first;\n$font-family-base: $font-family-sans-serif;\n\n// $font-family-base: \"Jost\";\n// $font-family-code: \"Space Mono\";\n\n// Typography Variables\n// ============================================================================\n// TODO: sort out the heading variables!!!\n$font-weight-base: $font-weight-normal;\n\n$font-size-root: strip-units(map.get($font-sizes, 'sm'));\n$font-size-base: map.get($font-sizes, 'sm');\n$font-size-lg: map.get($font-sizes, 'lg');\n$font-size-sm: map.get($font-sizes, 'xs');\n\n$font-weight-lighter: lighter;\n$font-weight-light: 300;\n$font-weight-normal: 400;\n$font-weight-medium: 500;\n$font-weight-semibold: 600;\n$font-weight-bold: 700;\n$font-weight-bolder: bolder;\n\n$font-weight-base: $font-weight-normal;\n\n$h1-font-size: $font-size-base * 2.5;\n$h2-font-size: $font-size-base * 2;\n$h3-font-size: $font-size-base * 1.75;\n$h4-font-size: $font-size-base * 1.5;\n$h5-font-size: $font-size-base * 1.25;\n$h6-font-size: $font-size-base;\n\n$font-sizes: (\n  1: $h1-font-size,\n  2: $h2-font-size,\n  3: $h3-font-size,\n  4: $h4-font-size,\n  5: $h5-font-size,\n  6: $h6-font-size,\n);\n\n$font-weight-normal: 400;\n$font-weight-bold: 700;\n\n$font-weight-base: $font-weight-normal;\n\n$h1-font-size: 3.052rem;\n$h2-font-size: 2.441rem;\n$h3-font-size: 1.953rem;\n$h4-font-size: 1.563rem;\n$h5-font-size: 1.25rem;\n$h6-font-size: 1rem;\n\n$headings-margin-bottom: 0.75rem;\n\n$headings-font-family: $font-family-poppins-first;\n$headings-font-weight: 400;\n$headings-color: $light;\n$headings-letter-spacing: -0.0625rem; // ~1px\n\n$h1-line-height: 3rem;\n$h2-line-height: 2.25rem;\n$h3-line-height: 2.25rem;\n$h4-line-height: 2rem;\n$h5-line-height: 1.5rem;\n$h6-line-height: 1.5rem;\n\n$display1-size: 7.451rem;\n$display2-size: 5.96rem;\n$display3-size: 4.768rem;\n$display4-size: 3.815rem;\n\n$display-line-height: 1;\n$display-margin-bottom: 0.75rem;\n\n$paragraphs-margin-bottom: 1.75rem;\n\n$lead-line-height: 1.875rem;\n\n$small-font-size: 80%;\n\n$text-muted: $gray-600;\n\n$blockquote-font-size: 1.5rem;\n$blockquote-footer-font-size: 1.125rem;\n$blockquote-margin-bottom: 0.75rem;\n\n$hr-border-color: rgba($dark, 0.1);\n$hr-border-width: $border-width;\n$hr-margin-y: 1.125rem;\n\n$mark-padding: 0.2em;\n$mark-bg: #fff09e;\n\n// Accordions\n$accordion-max-height: 20rem;\n$transition-color: #3f3f3f;\n\n// Tables\n//\n// Customizes the `.table` component with basic values, each used across all table variations.\n$table-color: $light;\n$table-bg: $black;\n$table-active-bg: rgba($primary, 0.075);\n$table-striped-bg: rgba($dark, 0.075);\n$table-hover-bg: rgba($dark, 0.075);\n$table-cell-padding: 0.75rem;\n$table-cell-padding-sm: 0.3rem;\n\n$table-dark-color: $body-bg;\n$table-dark-bg: $gray-900;\n$table-dark-border-color: lighten($gray-900, 7.5%);\n$table-dark-accent-bg: rgba($light, 0.05);\n$table-dark-hover-bg: rgba($light, 0.075);\n\n$table-head-color: $gray-700;\n$table-head-bg: $gray-200;\n$table-border-color: $gray-300;\n\n// Buttons\n//\n// For each of Bootstrap's buttons, define text, background and border color.\n\n$btn-padding-y-lg: 0.75rem;\n$btn-padding-x-lg: 1.75rem;\n\n$btn-line-height-sm: $line-height-sm;\n$btn-line-height-lg: $line-height-lg;\n\n$btn-padding-y-sm: 0.35rem;\n$btn-padding-x-sm: 1rem;\n\n$input-btn-padding-y: 0.5rem;\n$input-btn-padding-x: 1rem;\n$input-btn-line-height: 1.125;\n\n$input-btn-padding-y-sm: 0.35rem;\n$input-btn-padding-x-sm: 0.75rem;\n\n$input-btn-padding-y-lg: 0.75rem;\n$input-btn-padding-x-lg: 1rem;\n\n$btn-pill-border-radius: 50px;\n\n$btn-padding-y: 0.75rem;\n$btn-padding-x: 1.25rem;\n\n$btn-font-weight: $font-weight-normal;\n$btn-font-size: 0.875rem;\n$btn-font-size-sm: 0.75rem;\n$btn-font-size-lg: 1.125rem;\n$btn-font-family: $font-family-poppins-first;\n$btn-box-shadow: none;\n\n$input-btn-focus-width: 0.2rem;\n\n$btn-active-box-shadow: inset 0 3px 5px rgba($black, 0.125);\n\n$btn-link-disabled-color: $gray-600;\n$btn-block-spacing-y: 0.5rem;\n\n// Allows for customizing button radius independently from global border radius\n$btn-border-radius: $border-radius;\n$btn-border-radius-lg: $border-radius-lg;\n$btn-border-radius-sm: $border-radius-sm;\n\n$btn-border-width: 1px;\n\n// $btn-transition: $transition-base;\n$btn-transition: 'all 180ms linear';\n// Forms\n\n$input-padding-y: $input-btn-padding-y;\n$input-padding-x: $input-btn-padding-x;\n$input-line-height: 1.5;\n\n$input-padding-y-sm: $input-btn-padding-y-sm;\n$input-padding-x-sm: $input-btn-padding-x-sm;\n$input-line-height-sm: 1.5;\n\n$input-padding-y-lg: $input-btn-padding-y-lg;\n$input-padding-x-lg: $input-btn-padding-x-lg;\n$input-line-height-lg: 1.5;\n\n$input-bg: $white;\n$input-disabled-bg: #f5f6f7;\n$input-border-radius: $border-radius;\n$input-border-radius-sm: $border-radius-sm;\n$input-border-radius-lg: $border-radius-lg;\n\n$input-font-size: 0.95rem;\n\n$input-color: $gray-700;\n$input-border-color: $border-color;\n$input-btn-border-width: $border-width;\n$input-box-shadow: none;\n\n$input-border-width: $border-width;\n$input-border-radius: $border-radius;\n$input-border-radius-lg: $border-radius-lg;\n$input-border-radius-sm: $border-radius-sm;\n\n$input-focus-bg: $input-bg;\n$input-focus-border-color: theme-color('primary');\n$input-focus-box-shadow: 0 0.313rem 0.719rem rgba(theme-color('primary'), 0.1), 0 0.156rem 0.125rem rgba($black, 0.06);\n$input-focus-color: $input-color;\n\n$input-hover-border-color: darken(#becad6, 15);\n\n$input-placeholder-color: $gray-600;\n\n$input-height-border: $input-border-width * 2;\n\n$input-height-inner: calc($input-font-size * $input-line-height) + calc($input-padding-y * 2);\n$input-height: calc(#{$input-height-inner} + #{$input-height-border});\n\n$input-height-inner-sm: calc($font-size-sm * $input-line-height-sm) + calc($input-padding-y-sm * 2);\n$input-height-sm: calc(#{$input-height-inner-sm} + #{$input-height-border});\n\n$input-height-inner-lg: calc($font-size-lg * $input-line-height-lg) + calc($input-padding-y-lg * 2);\n$input-height-lg: calc(#{$input-height-inner-lg} + #{$input-height-border});\n\n$input-transition: box-shadow $transition-duration $ease-in-out-circ, border $transition-duration $ease-in-out-circ;\n\n$form-text-margin-top: 0.25rem;\n\n$form-check-input-gutter: 1.25rem;\n$form-check-input-margin-y: 0.313rem;\n$form-check-input-margin-x: 0.313rem;\n\n$form-check-inline-margin-x: 0.75rem;\n$form-check-inline-input-margin-x: 0.3125rem;\n\n$form-group-margin-bottom: 1rem;\n\n$input-group-padding-y: 12px;\n$input-group-padding-x: 14px;\n$input-group-addon-bg: lighten($input-border-color, 19%);\n$input-group-addon-border-color: $input-border-color;\n$input-group-addon-color: $input-frozen-color;\n\n$custom-control-gutter: 1.688rem;\n$custom-control-spacer-x: 1rem;\n\n$custom-control-indicator-size: 1.125rem;\n$custom-control-indicator-bg: $white;\n$custom-control-indicator-bg-size: 50% 50%;\n$custom-control-indicator-box-shadow: none;\n$custom-control-indicator-border: 1px solid $border-color;\n$custom-checkbox-indicator-transition: transform $transition-duration $ease-in-out-circ,\n  border $transition-duration $ease-in-out-circ;\n\n$custom-control-indicator-disabled-bg: $gray-200;\n$custom-control-description-disabled-color: $gray-600;\n\n$custom-control-indicator-checked-color: $white;\n$custom-control-indicator-checked-bg: theme-color('primary');\n$custom-control-indicator-checked-box-shadow: none;\n\n$custom-control-indicator-focus-box-shadow: $input-focus-box-shadow;\n\n$custom-control-indicator-active-color: $white;\n$custom-control-indicator-active-bg: lighten(theme-color('primary'), 35%);\n$custom-control-indicator-active-box-shadow: none;\n\n// Custom checkbox\n$custom-checkbox-indicator-border-radius: 2px;\n$custom-checkbox-indicator-icon-checked: none;\n$custom-checkbox-indicator-indeterminate-bg: theme-color('primary');\n$custom-checkbox-indicator-indeterminate-color: $custom-control-indicator-checked-color;\n$custom-checkbox-indicator-icon-indeterminate: none;\n$custom-checkbox-indicator-indeterminate-box-shadow: none;\n\n// Custom radio\n$custom-radio-indicator-border-radius: 50%;\n\n// Custom select\n$custom-select-padding-y: 0.375rem;\n$custom-select-padding-x: 0.75rem;\n$custom-select-height: $input-height; // OK\n$custom-select-indicator-padding: 1rem; // Extra padding to account for the presence of the background-image based indicator\n$custom-select-line-height: 1.2;\n$custom-select-color: $input-color;\n$custom-select-disabled-color: $gray-600;\n$custom-select-bg: $white;\n$custom-select-disabled-bg: $gray-200;\n$custom-select-bg-size: 8px 10px; // In pixels because image dimensions\n$custom-select-indicator-color: #333;\n$custom-select-indicator: str-replace(\n  url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\"),\n  '#',\n  '%23'\n);\n$custom-select-border-width: $input-btn-border-width;\n$custom-select-border-color: $input-border-color;\n$custom-select-border-radius: $border-radius;\n\n$custom-select-focus-border-color: $input-focus-border-color;\n$custom-select-focus-box-shadow: 0 0.313rem 0.719rem rgba(theme-color('primary'), 0.1),\n  0 0.156rem 0.125rem rgba($black, 0.06);\n\n$custom-select-font-size-sm: 0.75rem;\n$custom-select-height-sm: $input-height-sm;\n\n$custom-select-height-lg: $input-height-lg;\n$custom-select-font-size-lg: 1.25rem;\n\n$custom-file-height: calc(2.428rem + 2px);\n$custom-file-width: 14rem;\n$custom-file-focus-box-shadow: $input-focus-box-shadow;\n$custom-file-focus-border-color: $input-focus-border-color;\n\n$custom-file-padding-y: 1rem;\n$custom-file-padding-x: 0.5rem;\n$custom-file-line-height: 1.5;\n$custom-file-color: $gray-700;\n$custom-file-bg: $white;\n$custom-file-border-width: $border-width;\n$custom-file-border-color: $input-border-color;\n$custom-file-border-radius: $border-radius;\n$custom-file-box-shadow: none;\n$custom-file-button-color: $custom-file-color;\n$custom-file-button-bg: $gray-200;\n$custom-file-text: (\n  en: 'Browse',\n);\n\n// Custom switches (core)\n$custom-switch-padding-left: 2.25rem;\n\n// Form validation\n$form-feedback-margin-top: $form-text-margin-top;\n$form-feedback-font-size: $small-font-size;\n$form-feedback-valid-color: theme-color('success');\n$form-feedback-invalid-color: theme-color('danger');\n\n// Custom toggle\n$custom-toggle-width: 3.125rem;\n$custom-toggle-height: 1.75rem;\n$custom-toggle-border-width: 0.0625rem;\n$custom-toggle-border: $custom-toggle-border-width solid $input-border-color;\n$custom-toggle-background-color: $white;\n$custom-toggle-border-radius: 100px;\n\n$custom-toggle-focus-box-shadow: 0 0.313rem 0.719rem rgba(theme-color('success'), 0.1),\n  0 0.156rem 0.125rem rgba($black, 0.06);\n\n$custom-toggle-checked-background: theme-color('success');\n$custom-toggle-checked-border-color: $custom-toggle-checked-background;\n$custom-toggle-checked-knob-background: $white;\n\n$custom-toggle-knob-width: 1.25rem;\n$custom-toggle-knob-height: 1.25rem;\n$custom-toggle-knob-border-radius: 6.25rem;\n$custom-toggle-knob-active-width: 1.625rem;\n\n$custom-toggle-invalid-knob-background-color: #eb8c95;\n$custom-toggle-invalid-background-color: $white;\n\n$custom-toggle-width-sm: 2.1875rem;\n$custom-toggle-height-sm: 1.125rem;\n\n$custom-toggle-knob-width-sm: 0.75rem;\n$custom-toggle-knob-active-width-sm: 1rem;\n$custom-toggle-knob-height-sm: 0.75rem;\n\n// Form validation\n$form-feedback-valid-color: theme-color('success');\n$form-feedback-invalid-color: theme-color('danger');\n\n// Dropdowns\n//\n// Dropdown menu container and contents.\n\n$dropdown-bg: $gray-600;\n$dropdown-min-width: 10rem;\n$dropdown-padding-y: 0.5rem;\n$dropdown-spacer: 0;\n$dropdown-border-color: rgba($black, 0.05);\n$dropdown-border-width: $border-width;\n$dropdown-divider-bg: $gray-200;\n$dropdown-border-radius: $border-radius;\n\n$dropdown-box-shadow: 0 0.5rem 4rem rgba(0, 0, 0, 0.11), 0 10px 20px rgba(0, 0, 0, 0.05), 0 2px 3px rgba(0, 0, 0, 0.06);\n\n$dropdown-link-color: map.get($mojo-blue, hex);\n$dropdown-link-hover-color: darken($gray-900, 5%);\n$dropdown-link-hover-bg: lighten($dark, 55%);\n$dropdown-link-active-color: $component-active-color;\n$dropdown-link-active-bg: lighten($dark, 40%);\n$dropdown-link-disabled-color: $gray-600;\n\n$dropdown-item-padding-y: 0.5rem;\n$dropdown-item-padding-x: 1.25rem;\n$dropdown-item-font-size: 0.9375rem;\n$dropdown-item-transition: background-color $transition-duration $ease-in-out-circ,\n  color $transition-duration $ease-in-out-circ;\n\n$dropdown-header-color: $gray-600;\n\n// Small dropdowns\n$dropdown-small-padding-y: 0.25rem;\n$dropdown-small-font-size: 0.813rem;\n$dropdown-small-box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.11), 0 3px 10px rgba(0, 0, 0, 0.05),\n  0 2px 3px rgba(0, 0, 0, 0.06);\n\n$dropdown-small-item-padding-y: 0.375rem;\n$dropdown-small-item-padding-x: 0.875rem;\n\n$dropdown-small-item-font-size: 0.813rem;\n\n$dropdown-small-divider-margin-x: 0;\n$dropdown-small-divider-margin-y: 0.25rem;\n\n// Z-index master list\n// Warning: Avoid customizing these values. They're used for a bird's eye view\n// of components dependent on the z-axis and are designed to all work together.\n\n$zindex-dropdown: 1000;\n$zindex-sticky: 1020;\n$zindex-fixed: 1030;\n$zindex-modal-backdrop: 1040;\n$zindex-modal: 1050;\n$zindex-popover: 1060;\n$zindex-tooltip: 1070;\n\n// Navs\n$navbar-height: 3.75rem;\n\n$nav-transition: $transition-base;\n$nav-font-family: $font-family-poppins-first;\n\n$nav-link-padding-y: 0.625rem;\n$nav-link-padding-x: 1.125rem;\n$nav-link-disabled-color: $gray-600;\n\n$nav-tabs-border-color: lighten($dark, 45%);\n$nav-tabs-border-width: $border-width;\n$nav-tabs-border-radius: $border-radius;\n$nav-tabs-link-hover-border-color: $gray-200;\n$nav-tabs-link-active-color: $gray-700;\n$nav-tabs-link-active-bg: $body-bg;\n$nav-tabs-link-active-border-color: #ddd;\n\n$nav-pills-border-radius: $border-radius;\n$nav-pills-link-active-color: $component-active-color;\n$nav-pills-link-active-bg: $component-active-bg;\n\n// Navbar nav\n$navbar-nav-link-padding-x: 0.625rem;\n\n// Navbar\n\n$navbar-padding-y: calc($spacer / 2);\n$navbar-padding-x: $spacer;\n\n$navbar-brand-font-size: 1rem;\n$navbar-icon-size: 2.25rem;\n\n$navbar-sidebar-width: 300px;\n\n// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link\n$nav-link-height: $navbar-brand-font-size * $line-height-base;\n$navbar-brand-height: ($font-size-base * $line-height-base + $nav-link-padding-y * 2);\n$navbar-brand-padding-y: calc(($navbar-brand-height - $nav-link-height) / 2);\n\n$navbar-font-family: $font-family-poppins-first;\n$navbar-toggler-padding-y: 0.5rem;\n$navbar-toggler-padding-x: 0.5rem;\n$navbar-toggler-font-size: 1rem;\n$navbar-toggler-border-radius: $btn-border-radius;\n\n$navbar-dark-color: rgba($white, 0.5);\n$navbar-dark-hover-color: rgba($white, 0.75);\n$navbar-dark-active-color: rgba($white, 1);\n$navbar-dark-disabled-color: rgba($white, 0.25);\n$navbar-dark-toggler-icon-bg: str-replace(\n  url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-dark-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\"),\n  '#',\n  '%23'\n);\n$navbar-dark-toggler-border-color: rgba($white, 0.1);\n\n$navbar-light-color: $gray-200;\n$navbar-light-hover-color: rgba($navbar-light-color, 0.7);\n$navbar-light-active-color: rgba($navbar-light-color, 0.9);\n$navbar-light-disabled-color: rgba($navbar-light-color, 0.3);\n$navbar-light-toggler-icon-bg: str-replace(\n  url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\"),\n  '#',\n  '%23'\n);\n$navbar-light-toggler-border-color: rgba($navbar-light-color, 0.1);\n\n// Navs Quartz\n\n$nav-link-disabled-color: $text-muted !default;\n\n$nav-tabs-border-width: 0 !default;\n$nav-tabs-border-radius: 0 !default;\n$nav-tabs-link-active-color: $gray-800 !default;\n$nav-tabs-link-active-bg: $white !default;\n$nav-tabs-link-active-border-color: $gray-300 $gray-300 $nav-tabs-link-active-bg !default;\n\n$nav-pills-border-radius: $border-radius-pill !default;\n$nav-pills-link-active-color: $white !default;\n$nav-pills-link-active-bg: $primary !default;\n\n// Navbars Quartz\n\n// Dropdowns Quartz\n\n$dropdown-border-color: $border-color !default;\n$dropdown-link-hover-color: $white !default;\n$dropdown-link-hover-bg: rgba($white, 0.4) !default;\n\n// Pagination\n\n$pagination-padding-y: 0.5rem;\n$pagination-padding-x: 0.75rem;\n$pagination-padding-y-sm: 0.25rem;\n$pagination-padding-x-sm: 0.6875rem;\n$pagination-padding-y-lg: 0.9375rem;\n$pagination-padding-x-lg: 1.5625rem;\n$pagination-line-height: 1.25;\n$pagination-font-family: $font-family-poppins-first;\n$pagination-font-size: 0.875rem;\n$pagination-box-shadow: 0 0.125rem 0.9375rem rgba($dark, 0.1), 0 0.125rem 0.1875rem rgba($dark, 0.15);\n\n$pagination-color: $link-color;\n$pagination-bg: $white;\n\n$pagination-hover-color: $link-hover;\n$pagination-hover-bg: lighten($dark, 58%);\n$pagination-hover-border-color: lighten($dark, 50%);\n\n$pagination-active-color: $white;\n$pagination-active-bg: theme-color('primary');\n$pagination-active-border-color: theme-color('primary');\n\n$pagination-disabled-color: lighten($dark, 30%);\n$pagination-disabled-bg: $white;\n$pagination-disabled-border-color: lighten($dark, 50%);\n\n// Cards\n\n$card-spacer-y: 2.1875rem;\n$card-spacer-x: 1.875rem;\n\n$card-header-spacer-x: $card-spacer-x;\n$card-header-spacer-y: calc($card-spacer-y / 2);\n\n$card-footer-spacer-x: $card-spacer-x;\n$card-footer-spacer-y: calc($card-spacer-y / 2);\n\n$card-border-radius: 0.625rem;\n$card-inner-border-radius: $card-border-radius;\n\n$card-cap-bg: rgba($dark, 0.6);\n$card-bg: $gray-200;\n\n$card-title-font-weight: 500;\n$card-title-margin-bottom: 0.75rem;\n\n$card-link-font-family: $font-family-poppins-first;\n\n$card-paragraph-margin-bottom: 1.5625rem;\n\n$card-box-shadow: 0 0.46875rem 2.1875rem rgba($dark, 0.1), 0 0.9375rem 1.40625rem rgba($dark, 0.1),\n  0 0.25rem 0.53125rem rgba($dark, 0.12), 0 0.125rem 0.1875rem rgba($dark, 0.1);\n\n$card-img-overlay-padding: 1.875rem 2.1875rem;\n$card-deck-margin: 0.9375rem;\n\n$card-list-group-item-padding: 0.8125rem 1.875rem;\n$card-group-card-border: 1px solid lighten($dark, 53%);\n\n$card-columns-count: 3;\n$card-columns-gap: 1.25rem;\n$card-columns-margin: $card-spacer-y;\n\n$card-small-spacer-y: 1rem;\n$card-small-spacer-x: 1rem;\n$card-small-box-shadow: 0 2px 0 rgba($dark, 0.11), 0 4px 8px rgba($dark, 0.12), 0 10px 10px rgba($dark, 0.06),\n  0 7px 70px rgba($dark, 0.1);\n\n// Cards\n\n$card-spacer-y: 1.75rem !default;\n$card-spacer-x: 2rem !default;\n$card-border-color: $border-color !default;\n$card-cap-bg: transparent !default;\n$card-cap-color: $white !default;\n$card-color: $white !default;\n$card-bg: transparent !default;\n\n// Accordion\n\n$accordion-button-bg: $secondary !default;\n$accordion-button-active-bg: $primary !default;\n$accordion-button-active-color: $white !default;\n\n// Tooltips\n\n$tooltip-opacity: 0.7 !default;\n\n// Popovers\n\n$popover-header-bg: $card-cap-bg !default;\n\n$popover-body-color: $card-color !default;\n$popover-body-padding-y: $spacer * 0.5 !default;\n\n$popover-arrow-color: $border-color !default;\n\n$popover-arrow-outer-color: transparent !default;\n\n// Toasts\n\n$toast-header-color: $card-color !default;\n$toast-header-background-color: $card-cap-bg !default;\n$toast-header-border-color: $border-color !default;\n\n// Progress bars\n\n$progress-bg: rgba($black, 0.2) !default;\n\n// Tooltips\n\n$tooltip-max-width: 200px;\n$tooltip-color: $dark;\n$tooltip-bg: $white;\n$tooltip-opacity: 1;\n$tooltip-padding-y: 7px;\n$tooltip-padding-x: 13px;\n$tooltip-margin: 0;\n$tooltip-font-size: $font-size-sm;\n$tooltip-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n$tooltip-arrow-width: 5px;\n$tooltip-arrow-height: 5px;\n$tooltip-arrow-color: $tooltip-bg;\n\n// Popovers\n\n$popover-inner-padding: 0;\n$popover-bg: $white;\n$popover-max-width: 276px;\n$popover-border-radius: $border-radius-lg;\n$popover-border-width: $border-width;\n$popover-border-color: transparent;\n$popover-font-size: $font-size-sm;\n$popover-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n$popover-header-bg: lighten($dark, 58%);\n$popover-header-color: $headings-color;\n$popover-header-padding-y: 14px;\n$popover-header-padding-x: 20px;\n$popover-header-line-height: 14px;\n\n$popover-body-color: $body-color;\n$popover-body-padding-y: 15px;\n$popover-body-padding-x: 20px;\n\n$popover-arrow-width: 1rem;\n$popover-arrow-height: 0.3rem;\n$popover-arrow-color: $popover-bg;\n\n$popover-arrow-outer-width: $popover-arrow-width;\n$popover-arrow-outer-color: fade-in($popover-border-color, 0.05);\n\n// Badges\n\n$badge-color: $white;\n$badge-font-size: 75%;\n$badge-font-weight: $font-weight-bold;\n$badge-padding-y: 0.375rem;\n$badge-padding-x: 0.5rem;\n$badge-font-family: $font-family-system-first;\n$badge-pill-border-radius: 10rem;\n$badge-border-radius: 0.375rem;\n$badge-pill-padding-x: $badge-padding-x;\n\n// Modals\n\n// Padding applied to the modal body\n$modal-inner-padding: 1.875rem 2.1875rem;\n$modal-footer-padding: 0.9375rem 2.1875rem;\n\n$modal-dialog-margin: 0.625rem;\n$modal-dialog-margin-y-sm-up: 1.875rem;\n\n$modal-title-line-height: $line-height-base;\n\n$modal-content-bg: $white;\n$modal-content-border-width: $border-width;\n$modal-content-box-shadow: $card-box-shadow;\n\n$modal-backdrop-bg: $dark;\n$modal-backdrop-opacity: 0.12;\n$modal-header-border-color: lighten($dark, 50%);\n$modal-footer-border-color: lighten($dark, 50%);\n$modal-header-border-width: $modal-content-border-width;\n$modal-footer-border-width: $modal-header-border-width;\n\n$modal-header-padding: 0.9375rem 2.1875rem;\n\n$modal-lg: 800px;\n$modal-md: 500px;\n$modal-sm: 300px;\n\n$modal-transition: transform 0.3s ease-out;\n\n// Alerts\n\n$alert-padding-y: 0.75rem;\n$alert-padding-x: 1.25rem;\n$alert-margin-bottom: 1rem;\n$alert-border-radius: 0;\n$alert-link-font-weight: $font-weight-bold;\n\n// Progress bars\n\n$progress-height: 0.625rem;\n$progress-font-size: 0.625rem;\n$progress-bg: lighten($dark, 58%);\n$progress-border-radius: 1.25rem;\n$progress-box-shadow: inset 0 0.1rem 0.1rem rgba($dark, 0.15);\n$progress-bar-color: $white;\n$progress-bar-bg: theme-color('primary');\n$progress-bar-animation-timing: 1s linear infinite;\n$progress-bar-transition: width 0.6s ease;\n$progress-label-font-size: 0.8125rem;\n$progress-sm-height: 0.3125rem;\n$progress-lg-height: 0.9375rem;\n\n// List group\n\n$list-group-bg: $white;\n$list-group-border-color: rgba($black, 0.125);\n$list-group-border-width: $border-width;\n$list-group-border-radius: $border-radius;\n$list-group-transition: $transition-base;\n\n$list-group-item-padding-y: 0.75rem;\n$list-group-item-padding-x: 1.25rem;\n$list-group-sm-item-padding-y: 0.625rem;\n$list-group-sm-item-padding-x: 1rem;\n\n$list-group-sm-item-font-size: 0.8125rem;\n\n$list-group-hover-bg: lighten($dark, 59%);\n$list-group-active-color: $component-active-color;\n$list-group-active-bg: $component-active-bg;\n$list-group-active-border-color: $list-group-active-bg;\n\n$list-group-disabled-color: $gray-300;\n$list-group-disabled-bg: $list-group-bg;\n\n$list-group-action-color: $dark;\n$list-group-action-hover-color: $list-group-action-color;\n\n$list-group-action-active-color: $body-color;\n$list-group-action-active-bg: lighten($dark, 55%);\n\n// Image thumbnails\n$thumbnail-bg: $body-bg;\n$thumbnail-border: none;\n$thumbnail-padding: 0;\n$thumbnail-border-radius: $border-radius;\n$thumbnail-box-shadow: none;\n\n// Figures\n\n$figure-caption-font-size: 1rem;\n$figure-caption-color: $gray-600;\n\n// Close\n$close-font-size: $font-size-base * 1.5;\n$close-font-weight: $font-weight-bold;\n$close-color: lighten($dark, 20%);\n$close-text-shadow: none;\n\n// Code\n$code-font-size: 0.75rem;\n$code-line-height: 1.375rem;\n$code-padding-y: 0.1875rem;\n$code-padding-x: 0.8125rem;\n$code-background-color: rgba(19, 19, 19, 0.8);\n\n$kbd-font-size: 0.75rem;\n$kbd-border-radius: 0.625rem;\n$kbd-box-shadow: none;\n$kbd-padding-y: $code-padding-y;\n$kbd-padding-x: $code-padding-x;\n$kbd-color: $white;\n$kbd-bg: $gray-900;\n\n$nested-kbd-font-weight: $font-weight-bold;\n\n$pre-color: $gray-900;\n$pre-scrollable-max-height: 340px;\n$pre-code-border-radius: 4px;\n$pre-code-background-color: $gray-700;\n$pre-color: $gray-100;\n$pre-font-size: 0.9em;\n$pre-max-height: 460px;\n$pre-margin-bottom: 24px;\n$pre-padding: 16px;\n\n// Utils\n$positions: static, relative, absolute, fixed, sticky;\n$user-selects: all, auto, none;\n$link-shade-percentage: 20%;\n// Icon links\n// scss-docs-start icon-link-variables\n$icon-link-gap: 0.375rem;\n$icon-link-underline-offset: 0.25em;\n$icon-link-icon-size: 1em;\n$icon-link-icon-transition: 0.2s ease-in-out transform;\n$icon-link-icon-transform: translate3d(0.25em, 0, 0);\n$stretched-link-pseudo-element: after;\n$stretched-link-z-index: 1;\n// // Slider control (nouislider)\n// $slider-base-size: 5px;\n// $slider-base-box-shadow: inset 0 1px 2px rgba($dark, 0.1);\n// $slider-base-border-radius: 5px;\n// $slider-base-background: lighten($dark, 55%);\n// $slider-base-margin-top: 35px;\n\n// $slider-connect-color: theme-color(\"primary\");\n// $slider-pips-color: lighten($dark, 30%);\n\n// $slider-tooltip-padding: 5px 10px;\n// $slider-tooltip-font-size: 0.75rem;\n// $slider-tooltip-background: $white;\n// $slider-tooltip-border-radius: $border-radius;\n// $slider-tooltip-color: $dark;\n// $slider-tooltip-border-radius: 5px;\n// $slider-tooltip-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n// $slider-handle-transition: $transition-base;\n// $slider-handle-border: 1px solid lighten($dark, 53%);\n// $slider-handle-background: $white;\n// $slider-handle-disabled-background: lighten($dark, 57%);\n// $slider-handle-border-radius: 50%;\n// $slider-handle-width: 23px;\n// $slider-handle-height: 23px;\n\n// $slider-handle-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n// $slider-handle-focus-box-shadow: 0 0 8px rgba(theme-color(\"primary\"), 0.65), 0 3px 15px rgba($dark, 0.1),\n//   0 2px 3px rgba($dark, 0.2);\n\n// // Datepicker\n\n// $datepicker-border-radius: $card-border-radius;\n// $datepicker-dropdown-padding: 20px 22px;\n\n// $datepicker-cell-transition: $transition-base;\n// $datepicker-cell-hover-background: lighten($dark, 55%);\n// $datepicker-cell-border-radius: 50%;\n// $datepicker-cell-width: 36px;\n// $datepicker-cell-height: 36px;\n\n// $datepicker-disabled-cell-color: lighten($dark, 53%);\n// $datepicker-disabled-old-new-color: lighten($dark, 40%);\n\n// $datepicker-header-cell-border-radius: $border-radius;\n\n// $datepicker-active-color: $white;\n// $datepicker-active-background: theme-color(\"primary\");\n\n// $datepicker-range-background: theme-color(\"primary\");\n// $datepicker-range-cell-focused-background: darken($datepicker-range-background, 5%);\n// $datepicker-range-color: $white;\n// $datepicker-range-highlighted-bg: $gray-200;\n\n// $datepicker-dropdown-border: lighten($dark, 40%);\n// $datepicker-dropdown-bg: $white;\n// $datepicker-highlighted-bg: $datepicker-active-background;\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - 0.02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max: breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n//\n//  RESPOND MEDIA QUERIES\n//  https://glennmccomb.com/articles/useful-sass-scss-media-query-mixins-for-bootstrap/\n//\n\n//  RESPOND ABOVE\n//  @include respond-above(sm) {}\n@mixin respond-above($breakpoint) {\n  // If the breakpoint exists in the map.\n  @if map-has-key($grid-breakpoints, $breakpoint) {\n    // Get the breakpoint value.\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\n\n    // Write the media query.\n    @media (min-width: $breakpoint-value) {\n      @content;\n    }\n\n    // If the breakpoint doesn't exist in the map.\n  } @else {\n    // Log a warning.\n    @warn \"Invalid breakpoint: #{$breakpoint}.\";\n  }\n}\n\n//  RESPOND BELOW\n//  @include respond-below(sm) {}\n@mixin respond-below($breakpoint) {\n  // If the breakpoint exists in the map.\n  @if map-has-key($grid-breakpoints, $breakpoint) {\n    // Get the breakpoint value.\n    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);\n\n    // Write the media query.\n    @media (max-width: ($breakpoint-value - 1)) {\n      @content;\n    }\n\n    // If the breakpoint doesn't exist in the map.\n  } @else {\n    // Log a warning.\n    @warn \"Invalid breakpoint: #{$breakpoint}.\";\n  }\n}\n\n//  RESPOND BETWEEN\n//  @include respond-between(sm, md) {}\n@mixin respond-between($lower, $upper) {\n  // If both the lower and upper breakpoints exist in the map.\n  @if map-has-key($grid-breakpoints, $lower) and map-has-key($grid-breakpoints, $upper) {\n    // Get the lower and upper breakpoints.\n    $lower-breakpoint: map-get($grid-breakpoints, $lower);\n    $upper-breakpoint: map-get($grid-breakpoints, $upper);\n\n    // Write the media query.\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\n      @content;\n    }\n\n    // If one or both of the breakpoints don't exist.\n  } @else {\n    // If lower breakpoint is invalid.\n    @if (map-has-key($grid-breakpoints, $lower) == false) {\n      // Log a warning.\n      @warn \"Your lower breakpoint was invalid: #{$lower}.\";\n    }\n\n    // If upper breakpoint is invalid.\n    @if (map-has-key($grid-breakpoints, $upper) == false) {\n      // Log a warning.\n      @warn \"Your upper breakpoint was invalid: #{$upper}.\";\n    }\n  }\n}\n\n//\n//    MEDIA QUERY SHORTCUT\n//\n//    Usage: @include breakpoint(small, min) { ... }\n//\n@mixin breakpoint($breakpoint, $direction: min, $alert: false) {\n  @if ($alert!=false) or ($debug == true) {\n    @debug 'Breakpoint #{$breakpoint} size #{$direction} requested!';\n  }\n\n  $strln: string.length($breakpoint);\n  @if ($strln > 2) {\n    $breakpoint: unquote(abrevName($breakpoint));\n  }\n\n  @if map-has-key($chords, $breakpoint) {\n    // Get the breakpoint value.\n    $breakpoint-map: map.get($chords, $breakpoint);\n    $breakpoint-value: map.get($breakpoint-map, width);\n\n    @if ($breakpoint-value == 0) {\n      @warn \"Breakpoint Error! Sent for 0 size!\";\n    }\n\n    @if $direction==max {\n      @media screen and (max-width: ($breakpoint-value - 1)) {\n        @content;\n      }\n    } @else if $direction==min {\n      @media screen and (min-width: $breakpoint-value) {\n        @content;\n      }\n    } @else if $direction==mid {\n      $bp-next: breakpoint-next($breakpoint);\n      @if ($bp-next != null) {\n        @media screen and (min-width: $breakpoint-value) and (max-width: $bp-next) {\n          @content;\n        }\n      } @else {\n        @warn \"Invalid Breakpoint Size Requested! Nothing past here!\";\n        @media screen and (min-width: $breakpoint-value) {\n          @content;\n        }\n      }\n    } @else {\n      @media screen and ($direction: $breakpoint-value) {\n        @content;\n      }\n    }\n    // If the breakpoint doesn't exist in the map.\n  } @else {\n    @if $direction==max {\n      @media screen and (max-width: $breakpoint) {\n        @content;\n      }\n    } @else if $direction==min {\n      @media screen and (min-width: $breakpoint) {\n        @content;\n      }\n    } @else {\n      @media screen and ($direction: $breakpoint) {\n        @content;\n      }\n    }\n    @warn \"Invalid Breakpoint Size Requested!\";\n  }\n}\n","//============================================================\n// COLOR SYSTEM\n//============================================================\n\n// scss-docs-start gray-color-variables\n$white: #fff !default;\n$gray-100: map.get($mono, 900) !default;\n$gray-200: map.get($mono, 800) !default;\n$gray-300: map.get($mono, 700) !default;\n$gray-400: map.get($mono, 600) !default;\n$gray-500: map.get($mono, 500) !default;\n$gray-600: map.get($mono, 400) !default;\n$gray-700: map.get($mono, 300) !default;\n$gray-800: map.get($mono, 200) !default;\n$gray-900: map.get($mono, 100) !default;\n$black: #000;\n// scss-docs-end gray-color-variables\n\n// scss-docs-start gray-colors-map\n$grays: (\n  '100': $gray-100,\n  '200': $gray-200,\n  '300': $gray-300,\n  '400': $gray-400,\n  '500': $gray-500,\n  '600': $gray-600,\n  '700': $gray-700,\n  '800': $gray-800,\n  '900': $gray-900,\n) !default;\n// scss-docs-end gray-colors-map\n\n// scss-docs-start color-variables\n$blue: map.get($mojo-blue, hex) !default;\n$indigo: map.get($mojo-violet, hex) !default;\n$purple: map.get($mojo-violet, light) !default;\n$pink: map.get($mojo-red, light) !default;\n$red: map.get($mojo-red, hex) !default;\n$orange: map.get($mojo-coral, hex) !default;\n$yellow: map.get($mojo-yellow, hex) !default;\n$green: map.get($mojo-green, hex) !default;\n$teal: map.get($mojo-ocean, hex) !default;\n$cyan: map.get($mojo-cyan, hex) !default;\n// scss-docs-end color-variables\n\n// scss-docs-start colors-map\n$colors: (\n  'blue': $blue,\n  'indigo': $indigo,\n  'purple': $purple,\n  'pink': $pink,\n  'red': $red,\n  'orange': $orange,\n  'yellow': $yellow,\n  'green': $green,\n  'teal': $teal,\n  'cyan': $cyan,\n  'black': $black,\n  'white': $white,\n  'gray': $gray-600,\n  'gray-dark': $gray-800,\n) !default;\n// scss-docs-end colors-map\n\n// scss-docs-start theme-color-variables\n$primary: map.get($mojo-violet, hex) !default;\n$secondary: map.get($mojo-ocean, hex) !default;\n$success: map.get($mojo-green, hex) !default;\n$info: map.get($mojo-cyan, hex) !default;\n$warning: map.get($mojo-yellow, hex) !default;\n$danger: map.get($mojo-red, hex) !default;\n$light: map.get($mono, 900) !default;\n$dark: map.get($mono, 100) !default;\n// scss-docs-end theme-color-variables\n\n$mojo-colors: (\n  'cyan': map.get($mojo-cyan, hex),\n  'ocean': map.get($mojo-ocean, hex),\n  'blue': map.get($mojo-blue, hex),\n  'violet': map.get($mojo-violet, hex),\n  'red': map.get($mojo-red, hex),\n  'coral': map.get($mojo-coral, hex),\n  'yellow': map.get($mojo-yellow, hex),\n  'green': map.get($mojo-green, hex),\n);\n\n$theme-colors: (\n  'primary': $primary,\n  'secondary': $secondary,\n  'success': $success,\n  'info': $info,\n  'warning': $warning,\n  'danger': $danger,\n  'light': $light,\n  'dark': $dark,\n);\n\n// scss-docs-start page-color-variables\n$heading: $gray-200;\n$heading-dark: $gray-800;\n$text: $light;\n$text-dark: $gray-100;\n$body: darken(map.get($mono, 100), 3);\n$body-dark: $gray-100;\n$link-color: map.get($mojo-blue, hex);\n$link-hover: map.get($mojo-blue, dark);\n$link-visited: map.get($mojo-violet, hex);\n$link-color-dark: map.get($mojo-blue, light);\n$link-hover-dark: map.get($mojo-ocean, light);\n$link-visited-dark: map.get($mojo-violet, light);\n$caption: $gray-500;\n$caption-dark: $gray-400;\n$code-body: $gray-700;\n$code-body-dark: map.get($mono, 700);\n$code-text: map.get($mono, 700);\n$code-text-dark: $gray-700;\n$navbar: map.get($mojo-violet, hex);\n$navbar-dark: $dark;\n$border: map.get($mono, 400);\n$border-dark: $gray-400;\n// scss-docs-end page-color-variables\n\n// Gradient\n//\n// The gradient which is added to components if `$enable-gradients` is `true`\n// This gradient is also added to elements with `.bg-gradient`\n// scss-docs-start variable-gradient\n$gradient: linear-gradient(180deg, rgba($gray-400, 0.15), rgba($gray-200, 0));\n\n$body-bg-image: linear-gradient(\n  90deg,\n  shade-color($cyan, 10%),\n  shade-color($purple, 10%),\n  shade-color($pink, 5%)\n) !default;\n\n$frosted-opacity: 0.3 !default;\n\n//============================================================\n// FONT SYSTEM\n//============================================================\n\n$google-fonts-import: false !default;\n\n$PrimaryFont: (\n  family: 'Jost',\n  src: 'Jost/jost-variablefont_wght-webfont',\n  ext: 'woff',\n  weight: 400,\n  style: normal,\n  selector: 'html, body, p, li, b, i, strong, a, mark, td, th, button',\n  stack: $SansStack,\n  display: swap,\n);\n\n$HeadingFont: (\n  family: 'Saira',\n  src: 'Saira/saira-variablefont_wdthwght-webfont',\n  ext: 'woff',\n  weight: 700,\n  style: bold,\n  selector: 'h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6',\n  stack: $SansStack,\n  display: swap,\n);\n\n$CodeFont: (\n  family: 'Space Grotesk',\n  src: 'Space_Grotesk/spacegrotesk-variablefont_wght-webfont',\n  ext: 'woff',\n  weight: 400,\n  style: normal,\n  selector: 'code, pre, samp, kbd, caption, blockquote, cite, .code-block, .code-block p, aside, label, legend, .quote',\n  stack: $MonoStack,\n  display: swap,\n);\n\n//============================================================\n// UNIT SIZE SYSTEM\n//============================================================\n// Shortcuts to use along side or inplace of the 'toolbox/_rhythm.scss' code\n// Caution: Using a large number of various spacings will complicate having a\n// vertical or horizontal rhythm. consider adjusting the maps instead of trying\n// to keep track of what sizes are in play.\n$sz_1: 0.2rem; //1.6px\n$sz_2: 0.5rem; //8px\n$sz_2b: 0.75rem;\n$sz_3: 1rem; //16px\n$sz_3b: 1.25rem;\n$sz_4: 1.5rem; //24px\n$sz_4b: 1.75rem;\n$sz_5: 2rem; //32px\n$sz_6: 2.5rem;\n$sz_6b: 2.75rem;\n$sz_7: 3rem; //48px\n$sz_8: 3.5rem;\n$sz_9: 4rem; //64px\n$sz_10: 5rem; //80px\n$sz_11: 6rem; //96px\n$sz_12: 7rem;\n$sz_13: 8rem; //128px\n$sz_14: 9rem;\n$sz_15: 10rem; //160px\n$sz_20: 20rem; //320px\n$sz_30: 30rem; //480px\n$sz_40: 40rem; //640px\n$sz_50: 50rem; //800px\n$sz_60: 60rem; //960px\n$sz_70: 70rem; //1280px\n","//\n//     █████████               ███                             █████\n//    ███░░░░░███             ░░░                             ░░███\n//   ░███    ░███  ████████   ████  █████████████    ██████   ███████    ██████\n//   ░███████████ ░░███░░███ ░░███ ░░███░░███░░███  ░░░░░███ ░░░███░    ███░░███\n//   ░███░░░░░███  ░███ ░███  ░███  ░███ ░███ ░███   ███████   ░███    ░███████\n//   ░███    ░███  ░███ ░███  ░███  ░███ ░███ ░███  ███░░███   ░███ ███░███░░░\n//   █████   █████ ████ █████ █████ █████░███ █████░░████████  ░░█████ ░░██████\n//  ░░░░░   ░░░░░ ░░░░ ░░░░░ ░░░░░ ░░░░░ ░░░ ░░░░░  ░░░░░░░░    ░░░░░   ░░░░░░\n//\n//  @credit: (Rocket-Propel)[https://github.com/chrishumboldt/Rocket-Propel]\n//\n\n// -----------------------------------------------------------------------\n//\n//     SCSS mixin based on Animate.css\n//\n//     Animate.css https://daneden.github.io/animate.css\n//     Licensed under the MIT license - https://opensource.org/licenses/MIT\n//     Copyright (c) 2015 Daniel Eden\n//\n// -----------------------------------------------------------------------\n//\n//     Syntax:\n//     @include animate-css($type, [$duration, $repeat]);\n//\n//     Requirements:  Autoprefixer\n//\n//     Notes:\n//     @keyframes will boubble why extend placeholders will\n//     cause keyframes to be printed – even if not used.\n//\n//     To avoid class dependencies the classes .animate and\n//     .infinite has been removed. .animate values comes\n//     with each include and .infinite can be set by passing\n//     $repeat: infinite\n//\n//     Type values:\n//     bounce\n//     flash\n//     pulse\n//     rubberBand\n//     shake\n//     headShake\n//     swing\n//     tada\n//     wobble\n//     jello\n//     bounceIn\n//     bounceInDown\n//     bounceInLeft\n//     bounceInRight\n//     bounceInUp\n//     bounceOut\n//     bounceOutDown\n//     bounceOutLeft\n//     bounceOutRight\n//     bounceOutUp\n//     fadeIn\n//     fadeInDown\n//     fadeInDownBig\n//     fadeInLeft\n//     fadeInLeftBig\n//     fadeInRight\n//     fadeInRightBig\n//     fadeInUp\n//     fadeInUpBig\n//     fadeOut\n//     fadeOutDown\n//     fadeOutDownBig\n//     fadeOutLeft\n//     fadeOutLeftBig\n//     fadeOutRight\n//     fadeOutRightBig\n//     fadeOutUp\n//     fadeOutUpBig\n//     flipInX\n//     flipInY\n//     flipOutX\n//     flipOutY\n//     lightSpeedIn\n//     lightSpeedOut\n//     rotateIn\n//     rotateInDownLeft\n//     rotateInDownRight\n//     rotateInUpLeft\n//     rotateInUpRight\n//     rotateOut\n//     rotateOutDownLeft\n//     rotateOutDownRight\n//     rotateOutUpLeft\n//     rotateOutUpRight\n//     hinge\n//     rollIn\n//     rollOut\n//     zoomIn\n//     zoomInDown\n//     zoomInLeft\n//     zoomInRight\n//     zoomInUp\n//     zoomOut\n//     zoomOutDown\n//     zoomOutLeft\n//     zoomOutRight\n//     zoomOutUp\n//     slideInDown\n//     slideInLeft\n//     slideInRight\n//     slideInUp\n//     slideOutDown\n//     slideOutLeft\n//     slideOutRight\n//     slideOutUp\n//\n// -----------------------------------------------------------------------\n@mixin animate-css($type, $duration: null, $repeat: null) {\n  //     Animation name prefix\n  $prefix: \"\";\n\n  //     Type\n  animation-name: unquote($prefix + $type);\n\n  //     Duration\n  $duration: if(not $duration and index(hinge, $type), 2s, $duration);\n  $duration: if(\n    not $duration and index(bouncein bounceout flipoutx flipouty, $type),\n    .75s,\n    $duration\n  );\n  animation-duration: $duration or 1s;\n\n  //     Repeat\n  animation-iteration-count: if($repeat == infinite, infinite, $repeat);\n\n  //    Fill mode\n  animation-fill-mode: both;\n\n  //    Custom\n  @if $type == bounce {\n    transform-origin: center bottom;\n  }\n  @if $type == headShake {\n    animation-timing-function: ease-in-out;\n  }\n  @if $type == swing {\n    transform-origin: top center;\n  }\n  @if $type == jello {\n    transform-origin: center;\n  }\n  @if $type == flip {\n    backface-visibility: visible;\n  }\n  @if $type == flipInX {\n    backface-visibility: visible !important;\n  }\n  @if $type == flipInY {\n    backface-visibility: visible !important;\n  }\n  @if $type == flipOutX {\n    backface-visibility: visible !important;\n  }\n  @if $type == flipOutY {\n    backface-visibility: visible !important;\n  }\n  @if $type == lightSpeedIn {\n    animation-timing-function: ease-out;\n  }\n  @if $type == lightSpeedOut {\n    animation-timing-function: ease-in;\n  }\n\n  //    Keyframes\n  $keyframerenderonce: if(\n    global-variable-exists(keyframerenderonce),\n    $keyframerenderonce,\n    ()\n  ) !global;\n  @if not index($keyframerenderonce, $type) {\n    $keyframerenderonce: append($keyframerenderonce, $type) !global;\n    @keyframes .#{$prefix + $type} {\n      //     Attention Seekers\n      @if $type == bounce {\n        20%,\n        53%,\n        80%,\n        0%,\n        100% {\n          transform: translate3d(0, 0, 0);\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        40%,\n        43% {\n          transform: translate3d(0, -30px, 0);\n          animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n        }\n        70% {\n          transform: translate3d(0, -15px, 0);\n          animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n        }\n        90% {\n          transform: translate3d(0, -4px, 0);\n        }\n      }\n      @if $type == flash {\n        50%,\n        0%,\n        100% {\n          opacity: 1;\n        }\n        25%,\n        75% {\n          opacity: 0;\n        }\n      }\n      @if $type == pulse {\n        0% {\n          transform: scale3d(1, 1, 1);\n        }\n        50% {\n          transform: scale3d(1.05, 1.05, 1.05);\n        }\n        100% {\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == rubberBand {\n        0% {\n          transform: scale3d(1, 1, 1);\n        }\n        30% {\n          transform: scale3d(1.25, .75, 1);\n        }\n        40% {\n          transform: scale3d(.75, 1.25, 1);\n        }\n        50% {\n          transform: scale3d(1.15, .85, 1);\n        }\n        65% {\n          transform: scale3d(.95, 1.05, 1);\n        }\n        75% {\n          transform: scale3d(1.05, .95, 1);\n        }\n        100% {\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == shake {\n        0%,\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n        10%,\n        30%,\n        50%,\n        70%,\n        90% {\n          transform: translate3d(-10px, 0, 0);\n        }\n        20%,\n        40%,\n        60%,\n        80% {\n          transform: translate3d(10px, 0, 0);\n        }\n      }\n      @if $type == headShake {\n        0% {\n          transform: translateX(0);\n        }\n        6.5% {\n          transform: translateX(-6px) rotateY(-9deg);\n        }\n        18.5% {\n          transform: translateX(5px) rotateY(7deg);\n        }\n        31.5% {\n          transform: translateX(-3px) rotateY(-5deg);\n        }\n        43.5% {\n          transform: translateX(2px) rotateY(3deg);\n        }\n        50% {\n          transform: translateX(0);\n        }\n      }\n      @if $type == swing {\n        20% {\n          transform: rotate3d(0, 0, 1, 15deg);\n        }\n        40% {\n          transform: rotate3d(0, 0, 1, -10deg);\n        }\n        60% {\n          transform: rotate3d(0, 0, 1, 5deg);\n        }\n        80% {\n          transform: rotate3d(0, 0, 1, -5deg);\n        }\n        100% {\n          transform: rotate3d(0, 0, 1, 0deg);\n        }\n      }\n      @if $type == tada {\n        0% {\n          transform: scale3d(1, 1, 1);\n        }\n        10%,\n        20% {\n          transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);\n        }\n        30%,\n        50%,\n        70%,\n        90% {\n          transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\n        }\n        40%,\n        60%,\n        80% {\n          transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\n        }\n        100% {\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == wobble {\n        0% {\n          transform: none;\n        }\n        15% {\n          transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\n        }\n        30% {\n          transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\n        }\n        45% {\n          transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\n        }\n        60% {\n          transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\n        }\n        75% {\n          transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == jello {\n        11.1%,\n        0%,\n        100% {\n          transform: none;\n        }\n        22.2% {\n          transform: skewX(-12.5deg) skewY(-12.5deg);\n        }\n        33.3% {\n          transform: skewX(6.25deg) skewY(6.25deg);\n        }\n        44.4% {\n          transform: skewX(-3.125deg) skewY(-3.125deg);\n        }\n        55.5% {\n          transform: skewX(1.5625deg) skewY(1.5625deg);\n        }\n        66.6% {\n          transform: skewX(-.78125deg) skewY(-.78125deg);\n        }\n        77.7% {\n          transform: skewX(.390625deg) skewY(.390625deg);\n        }\n        88.8% {\n          transform: skewX(-.1953125deg) skewY(-.1953125deg);\n        }\n      }\n      //     Bouncing Entrances\n      @if $type == bounceIn {\n        20%,\n        40%,\n        60%,\n        80%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n        20% {\n          transform: scale3d(1.1, 1.1, 1.1);\n        }\n        40% {\n          transform: scale3d(.9, .9, .9);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(1.03, 1.03, 1.03);\n        }\n        80% {\n          transform: scale3d(.97, .97, .97);\n        }\n        100% {\n          opacity: 1;\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == bounceInDown {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(0, -3000px, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(0, 25px, 0);\n        }\n        75% {\n          transform: translate3d(0, -10px, 0);\n        }\n        90% {\n          transform: translate3d(0, 5px, 0);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == bounceInLeft {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(-3000px, 0, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(25px, 0, 0);\n        }\n        75% {\n          transform: translate3d(-10px, 0, 0);\n        }\n        90% {\n          transform: translate3d(5px, 0, 0);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == bounceInRight {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(3000px, 0, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(-25px, 0, 0);\n        }\n        75% {\n          transform: translate3d(10px, 0, 0);\n        }\n        90% {\n          transform: translate3d(-5px, 0, 0);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == bounceInUp {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(0, 3000px, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(0, -20px, 0);\n        }\n        75% {\n          transform: translate3d(0, 10px, 0);\n        }\n        90% {\n          transform: translate3d(0, -5px, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      //     Bouncing Exits\n      @if $type == bounceOut {\n        20% {\n          transform: scale3d(.9, .9, .9);\n        }\n        50%,\n        55% {\n          opacity: 1;\n          transform: scale3d(1.1, 1.1, 1.1);\n        }\n        100% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n      }\n      @if $type == bounceOutDown {\n        20% {\n          transform: translate3d(0, 10px, 0);\n        }\n        40%,\n        45% {\n          opacity: 1;\n          transform: translate3d(0, -20px, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 2000px, 0);\n        }\n      }\n\n      @if $type == bounceOutLeft {\n        20% {\n          opacity: 1;\n          transform: translate3d(20px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(-2000px, 0, 0);\n        }\n      }\n      @if $type == bounceOutRight {\n        20% {\n          opacity: 1;\n          transform: translate3d(-20px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(2000px, 0, 0);\n        }\n      }\n      @if $type == bounceOutUp {\n        20% {\n          transform: translate3d(0, -10px, 0);\n        }\n        40%,\n        45% {\n          opacity: 1;\n          transform: translate3d(0, 20px, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, -2000px, 0);\n        }\n      }\n      //     Fading Entrances\n      @if $type == fadeIn {\n        0% {\n          opacity: 0;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n      @if $type == fadeInDown {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, -100%, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInDownBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, -2000px, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInLeft {\n        0% {\n          opacity: 0;\n          transform: translate3d(-100%, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInLeftBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(-2000px, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInRight {\n        0% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInRightBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(2000px, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInUp {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, 100%, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInUpBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, 2000px, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      //    Fading Exits\n      @if $type == fadeOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n      @if $type == fadeOutDown {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 100%, 0);\n        }\n      }\n      @if $type == fadeOutDownBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 2000px, 0);\n        }\n      }\n      @if $type == fadeOutLeft {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(-100%, 0, 0);\n        }\n      }\n      @if $type == fadeOutLeftBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(-2000px, 0, 0);\n        }\n      }\n      @if $type == fadeOutRight {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0);\n        }\n      }\n      @if $type == fadeOutRightBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(2000px, 0, 0);\n        }\n      }\n      @if $type == fadeOutUp {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, -100%, 0);\n        }\n      }\n      @if $type == fadeOutUpBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, -2000px, 0);\n        }\n      }\n      //    Flippers\n      @if $type == flip {\n        0% {\n          transform: perspective(400px) rotate3d(0, 1, 0, -360deg);\n          animation-timing-function: ease-out;\n        }\n        40% {\n          transform:\n            perspective(400px)\n            translate3d(0, 0, 150px)\n            rotate3d(0, 1, 0, -190deg);\n          animation-timing-function: ease-out;\n        }\n        50% {\n          transform:\n            perspective(400px)\n            translate3d(0, 0, 150px)\n            rotate3d(0, 1, 0, -170deg);\n          animation-timing-function: ease-in;\n        }\n        80% {\n          transform: perspective(400px) scale3d(.95, .95, .95);\n          animation-timing-function: ease-in;\n        }\n        100% {\n          transform: perspective(400px);\n          animation-timing-function: ease-in;\n        }\n      }\n      @if $type == flipInX {\n        0% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n          animation-timing-function: ease-in;\n        }\n        40% {\n          transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n          animation-timing-function: ease-in;\n        }\n        60% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\n        }\n        80% {\n          transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\n        }\n        100% {\n          transform: perspective(400px);\n        }\n      }\n      @if $type == flipInY {\n        0% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n          animation-timing-function: ease-in;\n        }\n        40% {\n          transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\n          animation-timing-function: ease-in;\n        }\n        60% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\n        }\n        80% {\n          transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\n        }\n        100% {\n          transform: perspective(400px);\n        }\n      }\n      @if $type == flipOutX {\n        0% {\n          transform: perspective(400px);\n        }\n        30% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n        }\n        100% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n        }\n      }\n      @if $type == flipOutY {\n        0% {\n          transform: perspective(400px);\n        }\n        30% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\n        }\n        100% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n        }\n      }\n      //     Lightspeed\n      @if $type == lightSpeedIn {\n        0% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0) skewX(-30deg);\n        }\n        60% {\n          opacity: 1;\n          transform: skewX(20deg);\n        }\n        80% {\n          opacity: 1;\n          transform: skewX(-5deg);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == lightSpeedOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0) skewX(30deg);\n        }\n      }\n      //     Rotating Entrances\n      @if $type == rotateIn {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -200deg);\n          transform-origin: center;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: center;\n        }\n      }\n      @if $type == rotateInDownLeft {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -45deg);\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateInDownRight {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 45deg);\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: right bottom;\n        }\n      }\n      @if $type == rotateInUpLeft {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 45deg);\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateInUpRight {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -90deg);\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: right bottom;\n        }\n      }\n      //     Rotating Exits\n      @if $type == rotateOut {\n        0% {\n          opacity: 1;\n          transform-origin: center;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 200deg);\n          transform-origin: center;\n        }\n      }\n      @if $type == rotateOutDownLeft {\n        0% {\n          opacity: 1;\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 45deg);\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateOutDownRight {\n        0% {\n          opacity: 1;\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -45deg);\n          transform-origin: right bottom;\n        }\n      }\n      @if $type == rotateOutUpLeft {\n        0% {\n          opacity: 1;\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -45deg);\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateOutUpRight {\n        0% {\n          opacity: 1;\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 90deg);\n          transform-origin: right bottom;\n        }\n      }\n      //     Sliding Entrances\n      @if $type == slideInDown {\n        0% {\n          visibility: visible;\n          transform: translate3d(0, -100%, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      @if $type == slideInLeft {\n        0% {\n          visibility: visible;\n          transform: translate3d(-100%, 0, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      @if $type == slideInRight {\n        0% {\n          visibility: visible;\n          transform: translate3d(100%, 0, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      @if $type == slideInUp {\n        0% {\n          visibility: visible;\n          transform: translate3d(0, 100%, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      //     Sliding Exits\n      @if $type == slideOutUp {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(0, -100%, 0);\n        }\n      }\n      @if $type == slideOutDown {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(0, 100%, 0);\n        }\n      }\n      @if $type == slideOutLeft {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(-100%, 0, 0);\n        }\n      }\n      @if $type == slideOutRight {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(1800%, 0, 0);\n        }\n      }\n      //    Zoom Entrances\n      @if $type == zoomIn {\n        0% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n        50% {\n          opacity: 1;\n        }\n      }\n      @if $type == zoomInDown {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomInLeft {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomInRight {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomInUp {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      //    Zoom Exits\n      @if $type == zoomOut {\n        0% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n      @if $type == zoomOutDown {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        100% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\n          transform-origin: center bottom;\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomOutLeft {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: scale(.1) translate3d(-2000px, 0, 0);\n          transform-origin: left center;\n        }\n      }\n      @if $type == zoomOutRight {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: scale(.1) translate3d(2000px, 0, 0);\n          transform-origin: right center;\n        }\n      }\n      @if $type == zoomOutUp {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        100% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\n          transform-origin: center bottom;\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      //    Specials\n      @if $type == hinge {\n        0% {\n          transform-origin: top left;\n          animation-timing-function: ease-in-out;\n        }\n        20%,\n        60% {\n          transform: rotate3d(0, 0, 1, 80deg);\n          transform-origin: top left;\n          animation-timing-function: ease-in-out;\n        }\n        40%,\n        80% {\n          opacity: 1;\n          transform: rotate3d(0, 0, 1, 60deg);\n          transform-origin: top left;\n          animation-timing-function: ease-in-out;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 700px, 0);\n        }\n      }\n      @if $type == rollIn {\n        0% {\n          opacity: 0;\n          transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == rollOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);\n        }\n      }\n    }\n  }\n}\n","//\n//                          H U E M E N T ' S\n//      ____ _______ ____    _____  ___  __________ _______ _______\n//   __|    |       |    |__|     ||   ||   |  __  \\   _   |   __  \\\n//  |       |   -   |       |       \\      /   __  <       |       <\n//  |_______|_______|_______|_______||____||_______/___|___|___|____|\n//  =================================================================\n//\n\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:meta';\n@use 'sass:string';\n\n//\n// HUI FRAMEWORK\n@import '../src/framework';\n\n@include mojoBanner('JOLLYBAR', '0.2.88');\n\n@import '_debug-functions';\n\n// HUI TYPE & HEADING CODE\n@import '../src/harmony/base';\n@import '../src/harmony/headings';\n\n$black_000: #000000;\n$crimson_ff1453: #ff1453;\n$tangerine_ec8c69: #ec8c69;\n$darkslategray_3f3f3f: #3f3f3f;\n$lightseagreen_00a897: #00a897;\n$mediumaquamarine_02c59b: #02c59b;\n$palevioletred_ed6ea0: #ed6ea0;\n$silver_bfbfbf: #bfbfbf;\n$steelblue_05688f: #05688f;\n$white_fff: #ffffff;\n$whitesmoke_f5f5f5: #f5f5f5;\n\n/*! @debug Fire:#{$crimson_ff1453} */\n@mixin mojo_jolly-navbar() {\n  .debug_headers {\n    .header-tag {\n      font-size: 11px;\n      line-height: 13px;\n      letter-spacing: -0.05px;\n      color: $darkslategray_3f3f3f;\n      padding: 3px;\n      margin: 2px 0 0 6px;\n      border: 1px solid $silver_bfbfbf;\n      position: absolute;\n      display: inline;\n      clear: none;\n    }\n  }\n\n  // #switcher {\n  //   background: rgba(255, 255, 255, 0.75);\n  //   box-shadow: 0 2px 1px -1px $silver_bfbfbf;\n  //   overflow: hidden;\n  //   padding: 10px 6px 10px 10px;\n  //   position: fixed;\n  //   top: 0;\n  //   width: 97%;\n  //   z-index: 1000;\n  // }\n\n  #jollybar {\n    select {\n      appearance: none;\n      background: $lightseagreen_00a897;\n      background-image: none;\n      border: 0 !important;\n      box-shadow: none;\n      color: $white_fff;\n      cursor: pointer;\n      flex: 1;\n      font-size: 16px !important;\n      outline: 0;\n      padding: 0 0.5rem;\n    }\n\n    .select {\n      position: relative;\n      display: flex;\n      width: 10rem;\n      height: 1.7rem;\n      line-height: 2;\n      font-size: 16px !important;\n      background: $lightseagreen_00a897;\n      overflow: hidden;\n      border-radius: 0.25rem;\n      float: right;\n      margin: -3px 0 -10px 0;\n      padding-top: 5px;\n      &:after {\n        background: $mediumaquamarine_02c59b;\n        content: '\\25BC';\n        cursor: pointer;\n        padding: 6px 0.81rem 6px 12px;\n        position: absolute;\n        right: 0;\n        top: 0;\n        transition: 0.25s all ease;\n      }\n      &:hover {\n        &:after {\n          color: $crimson_ff1453;\n        }\n      }\n    }\n\n    .logo {\n      margin: 0 0 0 5px;\n      padding: 0;\n      img {\n        clear: none;\n        display: inline;\n        float: left;\n        height: 50px;\n        margin: 15px 0 -10px 10px;\n        padding-top: 10px;\n        width: 50px;\n      }\n    }\n\n    .wrapper_debug_size_viewer {\n      background: rgba(2, 129, 146, 0.8);\n      border: 1px solid $steelblue_05688f;\n      border-radius: 4px;\n      bottom: 8px;\n      color: $black_000;\n      font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n      font-size: 14px;\n      font-weight: normal;\n      padding: 2px 4px;\n      position: fixed;\n      right: 8px;\n      z-index: 999;\n    }\n\n    div {\n      &.debug_size_viewer {\n        display: table;\n        opacity: 0;\n        z-index: -9999;\n        max-height: 0;\n        overflow: hidden;\n        width: 250px;\n        bottom: 42px;\n        position: fixed;\n        border: 1px solid darken($darkslategray_3f3f3f, 10);\n        background: $darkslategray_3f3f3f;\n        padding: 5px 20px 6px 0;\n        margin: 10px 0 0 -55px;\n        transition: all 0.5s;\n        &.showit {\n          max-height: 100px;\n          opacity: 1;\n          overflow: visible;\n          z-index: 9999;\n        }\n        p {\n          display: table-row;\n          font-size: 12px !important;\n          font-weight: normal;\n        }\n        b {\n          display: table-cell;\n          font-weight: normal;\n          padding: 0.15rem;\n          font-size: 12px !important;\n          text-align: right;\n        }\n        span {\n          display: table-cell;\n          font-size: 14px !important;\n          font-weight: normal;\n          line-height: 1;\n          padding: 0.15rem;\n          text-align: right;\n          text-transform: uppercase;\n        }\n      }\n    }\n\n    .nlogo {\n      padding: 0;\n\n      img {\n        background: transparent;\n        height: auto;\n        margin-top: -3px;\n        width: 50px;\n        z-index: 9998;\n        transition: linear 0.25s all;\n\n        &:hover {\n          //margin-top: -1px;\n          opacity: 0.5;\n          //background: lighten($black_000, 25);\n        }\n      }\n    }\n\n    .toggle-bars {\n      position: absolute;\n      top: 5px;\n      right: 10px;\n      cursor: pointer;\n\n      .bar {\n        background-color: $white_fff;\n        height: 2px;\n        margin: 7px 0;\n        width: 35px;\n      }\n    }\n\n    nav {\n      &.av {\n        padding: 0 5px;\n        background-color: $darkslategray_3f3f3f;\n        color: $whitesmoke_f5f5f5;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        height: 40px;\n        overflow: hidden;\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        z-index: 9990;\n        &:before {\n          background-image: linear-gradient(to right, $palevioletred_ed6ea0 0%, $tangerine_ec8c69 100%);\n          bottom: 39px;\n          content: ' ';\n          display: block;\n          height: 4px;\n          left: -2px;\n          position: fixed;\n          right: -2px;\n          width: 102%;\n          z-index: -1;\n        }\n\n        .nnav {\n          display: none;\n          ul {\n            list-style-type: none;\n            padding: 0;\n            margin-left: -20px;\n            margin-top: 0;\n            list-style-type: none;\n\n            li {\n              font-size: 0.8rem;\n              min-width: 50px;\n              padding: 0px 5px 0 0;\n              text-transform: uppercase;\n\n              .data-label {\n                float: left;\n                font-size: 16px;\n                min-width: 100px;\n                min-height: 29px;\n                padding: 3px 5px 2px 5px;\n                margin-top: 7px;\n                border-radius: 3px;\n                background: #000;\n                color: $mediumaquamarine_02c59b;\n                text-align: center;\n                transition: linear 0.15s all;\n\n                &:hover {\n                  color: $lightseagreen_00a897;\n                  text-decoration: none;\n                  cursor: pointer;\n                  background: lighten(#000, 10);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    .show {\n      display: block !important;\n    }\n\n    @media screen and (min-width: 600px) {\n      nav {\n        &.av {\n          background-color: $darkslategray_3f3f3f;\n          box-shadow: 0 -2px 4px 2px rgba(31, 31, 31, 0.39);\n          color: $whitesmoke_f5f5f5;\n          display: flex;\n          flex-direction: row;\n          justify-content: space-between;\n          padding: 0 2px;\n\n          .toggle-bars {\n            display: none;\n          }\n          .nnav {\n            display: block;\n            ul {\n              display: flex;\n              margin: 0 0 -20px 0;\n              padding: 0 0 0 0;\n              li {\n                padding: 8px 5px 0 0;\n                margin-top: 0;\n                margin-bottom: 0px;\n                &.text-btn-link {\n                  padding-top: 0px;\n                  min-width: 100px;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin mojo_jolly-modal() {\n  .modal-window {\n    position: fixed;\n    background-color: rgba(255, 255, 255, 0.25);\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 999;\n    visibility: hidden;\n    opacity: 0;\n    pointer-events: none;\n    transition: all 0.3s;\n    &:target {\n      visibility: visible;\n      opacity: 1;\n      pointer-events: auto;\n    }\n    & > div {\n      width: 400px;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      padding: 2em;\n      background: white;\n    }\n    header {\n      font-weight: bold;\n    }\n    h1 {\n      font-size: 150%;\n      margin: 0 0 15px;\n    }\n  }\n\n  .modal-close {\n    color: #aaa;\n    line-height: 50px;\n    font-size: 80%;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n    width: 70px;\n    text-decoration: none;\n    &:hover {\n      color: black;\n    }\n  }\n}\n\n//========================================================================================\n//                                                                                      ##\n//    RESPONSIVE DESIGN VIEWPORT LABELS                                                 ##\n//    @title   mediaQueryDebug                                                          ##\n//    @details prints out a text snippet w/ active media query name & size              ##\n//                                                                                      ##\n//========================================================================================\n@mixin mojo_jolly-media($kickFlipMap) {\n  // HTML Elements that will hold our debug content\n  #mq,\n  #scale,\n  #fontSize,\n  #lineHeight,\n  #mq:after,\n  #scale:after,\n  #fontSize:after,\n  #lineHeight:after {\n    display: none;\n  }\n\n  // We fetch the breakpoint values like this:\n  // 1st Loop. Up to Max.\n  // 2+ Loop: From previous up to this loop max val\n  // Last Loop: From this loop max val to infinite\n  $mapCount: 0;\n  $prevLabel: '';\n  @debug '#{index-to-key($mapCount, $kickFlipMap)}';\n  @each $mapKey, $mMap in $kickFlipMap {\n    // -\n    // To get started we setup some variables\n    $totVal: length($kickFlipMap);\n    $totValMinOne: length($kickFlipMap) - 1;\n    $minVal: map-get(map-get($kickFlipMap, index-to-key($mapCount, $kickFlipMap)), 'width');\n    $maxVal: map-get($mMap, 'width');\n    // -\n    // Now we do our conditonal Checks for each run through\n    @if $mapCount==0 {\n      // Debug Area is Between 0 and First key\n      $prevLabel: strip_units(map-get($mMap, 'width'));\n\n      @media screen and (max-width: map-get($mMap, 'width')) {\n        #mq:after {\n          content: 'UNTL #{$prevLabel}';\n        }\n        #scale:after {\n          $scale: map-get($mMap, 'scale_name');\n          content: '#{$scale}';\n        }\n        #fontSize:after {\n          $fontSize: map-get($mMap, 'fontSize');\n          content: '#{$fontSize}';\n        }\n        #lineHeight:after {\n          $lineHeight: map-get($mMap, 'lineHeight');\n          content: '#{$lineHeight}';\n        }\n      }\n    } @else if $mapCount < $totValMinOne {\n      // Debug Area is Between Two Keys\n      @media screen and (min-width: #{$minVal + 1px}) and (max-width: #{$maxVal - 1px}) {\n        #mq:after {\n          content: 'BTWN #{$prevLabel} & #{strip_units(map-get($mMap, width))}';\n        }\n        #scale:after {\n          $scale: map-get($mMap, 'scale_name');\n          content: '#{$scale}';\n        }\n        #fontSize:after {\n          $fontSize: map-get($mMap, 'fontSize');\n          content: '#{$fontSize}';\n        }\n        #lineHeight:after {\n          $lineHeight: map-get($mMap, 'lineHeight');\n          content: '#{$lineHeight}';\n        }\n      }\n\n      // Important. We set prevLabel on this run so the next (last) run its available.\n      $prevLabel: strip_units(map-get($mMap, 'width'));\n    } @else {\n      // Debug Area on Last Key. Go to Infinity & Beyond!\n      // prevLabel is computed on the previous run\n      $mapCount: $mapCount + 1;\n      $maxVal: map-get(map-get($kickFlipMap, index-to-key($mapCount)), width);\n\n      @media screen and (min-width: #{$minVal + 1px}) and (max-width: #{$maxVal - 1px}) {\n        #mq:after {\n          content: 'BTWN #{$prevLabel} & #{strip_units(map-get($mMap, width))}';\n        }\n        #scale:after {\n          $scale: map-get($mMap, 'scale_name');\n          content: '#{$scale}';\n        }\n        #fontSize:after {\n          $fontSize: map-get($mMap, 'fontSize');\n          content: '#{$fontSize}';\n        }\n        #lineHeight:after {\n          $lineHeight: map-get($mMap, 'lineHeight');\n          content: '#{$lineHeight}';\n        }\n      }\n\n      @media screen and (min-width: $maxVal) {\n        #mq:after {\n          content: 'FROM #{strip_units(map-get($mMap, width))}';\n        }\n        #scale:after {\n          $scale: map-get($mMap, 'scale_name');\n          content: '#{$scale}';\n        }\n        #fontSize:after {\n          $fontSize: map-get($mMap, 'fontSize');\n          content: '#{$fontSize}';\n        }\n        #lineHeight:after {\n          $lineHeight: map-get($mMap, 'lineHeight');\n          content: '#{$lineHeight}';\n        }\n      }\n    }\n    // -\n    // Important that we advance the count each loop\n    $mapCount: $mapCount + 1;\n  }\n}\n\n// Creates base type baseline overlay and vertical unit overlay.\n// To use on the body tag for example: body { @include debug-vertical-alignment(); } and add class va-debug to the body tag\n@mixin mojo_jolly-rhythm(\n  $position: 'absolute',\n  $opacity: 0.8,\n  $vertical-unit: $VerticalUnit,\n  $type-base-line-multi: $MainLineMultiple,\n  $type-size: $MainFontSize\n) {\n  position: relative;\n\n  &::before,\n  &::after {\n    content: '';\n    position: #{$position};\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    display: none;\n  }\n\n  &::before {\n    z-index: 10;\n    background-image: -webkit-linear-gradient(rgba(233, 0, 0, $opacity) 1px, rgba(0, 0, 0, 0) 1px);\n    background-image: linear-gradient(rgba(233, 0, 0, $opacity) 1px, rgba(0, 0, 0, 0) 1px);\n    background-size: 100% (unitlessRhythm($type-base-line-multi, $type-size) + 0rem);\n  }\n\n  &::after {\n    z-index: 9;\n    background-image: -webkit-linear-gradient(rgba(0, 233, 0, $opacity) 1px, rgba(0, 0, 0, 0) 1px);\n    background-image: linear-gradient(rgba(0, 233, 0, $opacity) 1px, rgba(0, 0, 0, 0) 1px);\n    background-size: 100% $vertical-unit;\n  }\n\n  &.va-debug::before,\n  &.va-debug::after {\n    display: block;\n    pointer-events: none;\n  }\n}\n\n@mixin grid-overlay($color: black, $px-offset: false) {\n  body {\n    background: linear-gradient(to top, rgba($color, 0.1) 5%, white 5%);\n    background-size: 100% ($line-height-ratio) + em;\n    @if ($px-offset) {\n      background-position: 0 $px-offset + px;\n    }\n  }\n}\n\n@mixin mojo_jolly-margins($margin-top, $margin-bottom, $computed-font-size) {\n  position: relative;\n\n  &:before,\n  &:after {\n    content: '';\n    display: block;\n    left: 0;\n    position: absolute;\n    width: 100%;\n  }\n\n  &:before {\n    background: hsla(200, 100%, 50%, 0.3)\n      url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40px\" height=\"300px\" viewBox=\"0 0 40 300\"><path d=\"M9.5,1.5 L9.5,298.5\" stroke=\"#1AB3FF\"/><polyline stroke=\"#1AB3FF\" fill=\"none\" points=\"5.5 5.5 9.5 0.5 13.5 5.5\"/></svg>')\n      51% top repeat-y;\n    height: $margin-top;\n    top: -$margin-top;\n  }\n\n  &:after {\n    background: hsla(200, 100%, 50%, 0.3)\n      url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40px\" height=\"300px\" viewBox=\"0 0 40 300\"><path d=\"M9.5,1.5 L9.5,298.5\" stroke=\"#1AB3FF\"/><polyline stroke=\"#1AB3FF\" fill=\"none\" points=\"5.5 294.5 9.5 299.5 13.5 294.5\"/></svg>')\n      49% bottom repeat-y;\n    bottom: -$margin-bottom;\n    height: $margin-bottom;\n  }\n}\n\n// @mixin mojo_jolly-headings() {\n//   $counter: 1;\n//   $weightCurrent: 1;\n\n//   $weights: 300, 500, 700;\n//   $weightAdjust: computeDynamicWeight(length($chords), length($weights));\n\n//   $weightNthCounter: 1;\n//   $weightNth: nth($weights, $weightNthCounter);\n\n//   @each $bpKey, $bpMap in $chords {\n//     $bpMR: map-get($bpMap, \"scale\");\n//     $bpLH: map-get($bpMap, \"lineHeight\");\n//     $bpLM: map-get($bpMap, \"multiple\");\n//     $bpFS: _rem(map-get($bpMap, \"fontSize\"));\n//     $bpNM: map-get($bpMap, \"name\");\n\n//     // Mobile First Sizing. Breakpoints handle all other views\n//     @if ($counter == 1) {\n//       $wF: nth($weights, 1);\n//       @include mojo_jolly-heading-debug($bpMR, $bpFS, $bpLH, $bpLM, true, true, $wF);\n//     }\n\n//     // Slap a breakpoint media query quantifier around the H[1-6] Tags\n//     @include breakpoint(#{$bpKey}, min) {\n//       @include mojo_jolly-heading-debug($bpMR, $bpFS, $bpLH, $bpLM, true, true, $weightNth);\n//     }\n\n//     $counter: $counter + 1;\n//     $weightCurrent: $weightCurrent + 1;\n//     @if ($weightCurrent >= $weightAdjust) {\n//       $weightNthCounter: $weightNthCounter + 1;\n//       $weightCurrent: 1;\n\n//       @if ($weightNthCounter > length($weights)) {\n//         @warn \"Weight Counter exceeded available weights...\";\n//         $weightNth: nth($weights, length($weights));\n//       } @else {\n//         $weightNth: nth($weights, $weightNthCounter);\n//       }\n//     }\n//   }\n// }\n\n// @mixin mojo_jolly-heading-debug(\n//   $mr: $ModularRatio,\n//   $bfs: 1rem,\n//   $blh: $MainLineHeight,\n//   $blm: $MainLineMultiple,\n//   $am: false,\n//   $al: true,\n//   $wgt: 700\n// ) {\n\n//   $bu: $MainUnit;\n//   $scaleLevel: 5;\n//   $iTotal: 6;\n//   $h: 1;\n\n//   @while $iTotal > 0 {\n\n//     $hSize: $bfs * power($mr, $scaleLevel);\n//     $hLine: $blh * power($mr, $scaleLevel);\n\n//     $top: 1;\n//     $btm: 1;\n//     $weight: $wgt;\n\n//     @if ($h == 1){ $top: 2; $btm: 4; }\n//     @if ($h == 2){ $top: 2; $btm: 3; }\n//     @if ($h == 3){ $top: 1; $btm: 2; }\n\n//     $lH: decimal_round(calculateLineHeight($hSize), 3);\n\n//     h#{$h} {\n//       $dh-fontsize: font-size(decimal_round($hSize, 3));\n//       $dh-lineheight: $lH + $bu;\n//       $dh-mtop: decimal_round(remRhythm($top, $bfs), 3);\n//       $dh-mbottom: decimal_round(remRhythm($btm, $bfs), 3);\n//       @include mojo_jolly-margins($dh-mtop, $dh-mbottom, $dh-fontsize, \"rem\");\n//     }\n\n//     $scaleLevel: $scaleLevel - 1;\n//     $iTotal: $iTotal - 1;\n//     $h: $h + 1;\n//   }\n// }\n\n@mixin mojo_jolly-html() {\n  @each $mapKey, $mMap in $chords {\n    $i: 1;\n    $ht: 5;\n    $scale: map-get($mMap, 'scale');\n    $lH: map-get($mMap, 'lineHeight');\n    $lHpx: map-get($mMap, 'lineHeight_px');\n    $fS: map-get($mMap, 'fontSize');\n    //$halfSizeLine: px_rem(i($fS * $lH * 0.5), strip_units($fS));\n\n    @include breakpoint(#{$mapKey}, min) {\n      $debugLH_rem: $lH * 1rem;\n      $debugLH_px: _px($debugLH_rem);\n      $DLH: round((strip_units($lH) * strip_units($fS)) * 1px);\n      $DSize: round($fS * $lH);\n\n      /**\n      @debug debugLH_rem #{$debugLH_rem}\n      @debug debugLH_px #{$debugLH_px}\n      @debug DLH #{$DLH}\n      @debug DSize #{$DSize}\n      @debug fontSize #{$fS}\n      @debug lineHeight #{$lH}\n      */\n\n      html {\n        background-image: linear-gradient(hsla(200, 100%, 50%, 0.3) 1px, transparent 1px);\n        background-position: left top;\n        background-size: $DSize $DSize;\n\n        body {\n          box-shadow: 1px 0px 0px hsla(200, 100%, 50%, 0.3), -1px 0px 0px hsla(200, 100%, 50%, 0.3);\n        }\n      }\n    }\n\n    $i: $i + 1;\n    $ht: $ht - 1;\n  }\n}\n\n// $sgl-root-font-size: $RootFontSize !global;\n// $line-height: round($sgl-root-font-size * $MainLineHeight);\n\n// html {\n//   background-image: linear-gradient(\n//     hsla(200, 100%, 50%, 0.3) 1px,\n//     transparent 1px\n//   );\n//   background-position: left top;\n//   background-size: ($line-height * 1px) ($line-height * 1px);\n\n//   body {\n//     box-shadow: 1px 0px 0px hsla(200, 100%, 50%, 0.3),\n//       -1px 0px 0px hsla(200, 100%, 50%, 0.3);\n//   }\n// }\n\n@debug 'Outputting Modal Window';\n@include mojo_jolly-modal();\n\n@debug 'Outputting Jolly Navbar';\n@include mojo_jolly-navbar();\n\n@debug 'Outputting Jolly Media Query Details';\n@include mojo_jolly-media($chords);\n\n@debug 'Outputting Jolly Typography Grid';\n@include mojo_jolly-html();\n//@include mojo_jolly-headings();\n//@include Harmonic_Headings(true);\n"]}