// Avatars
//
// This file is a great example of using the Modular Scale across both
// breakpoints and component sizes to keep a pleasing size relationship.
//

$base-size: $VerticalUnit * 4;

@include superclass() {
  .avatar {
    background: $primary;
    border-radius: 50%;
    color: rgba($light, 0.85);
    display: inline-block;
    font-weight: 300;
    line-height: 1.25;
    margin: 0;
    position: relative;
    vertical-align: middle;

    img {
      border-radius: 50%;
      height: 100%;
      position: relative;
      width: 100%;
      z-index: $zindex-0;
    }

    .avatar-icon,
    .avatar-presence {
      background: $medium_light;
      bottom: 14.64%;
      height: 50%;
      padding: $border-width-lg;
      position: absolute;
      right: 14.64%;
      transform: translate(50%, 50%);
      width: 50%;
      z-index: $zindex-0 + 1;
    }

    .avatar-presence {
      background: $medium_light;
      box-shadow: 0 0 0 $border-width-lg $light;
      border-radius: 50%;
      height: 0.5em;
      width: 0.5em;

      &.online {
        background: $success;
      }

      &.busy {
        background: $danger;
      }

      &.away {
        background: $warning;
      }
    }

    &[data-initial]::before {
      color: currentColor;
      content: attr(data-initial);
      left: 50%;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: $zindex-0;
    }
  }

  // Harmony scaling the avatar sizes across breakpoints
  @each $iden, $bpMap in $chords {
    $scale: map.get($bpMap, "scale");
    $vert: map.get($bpMap, "vertical");
    $bs: $vert * 4px;
    $xs: $bs * $scale;
    $sm: $xs * $scale;
    $rg: $sm * $scale;
    $lg: $rg * $scale;
    $xl: $lg * $scale;

    @include media-breakpoint-down($iden) {
      .avatar {
        @include avatar-base($rg);

        &.avatar-xs {
          @include avatar-base($xs);
        }
        &.avatar-sm {
          @include avatar-base($sm);
        }
        &.avatar-lg {
          @include avatar-base($lg);
        }
        &.avatar-xl {
          @include avatar-base($xl);
        }
      }
    }
  }
}
