//
// TODO Fix the CSSVARS in this file
//

@include cssvars(
  (
    font-family-primary: #{"HelveticaNeue",
    "Helvetica Neue",
    Helvetica,
    Arial,
    sans-serif},
    font-family-secondary: #{"Noto Serif",
    "Droid Serif",
    "Times",
    "Times New Roman"},
  )
);

@include cssvars(
  (
    primary-color: #33b5e5,
    secondary-color: #c03ae9,
    color-success: #58b858,
    color-error: #ff6961,
    color-warning: #ffa501,
    color-info: cssvar(primary-color),
  )
);

@include cssvars(
  (
    app-surface-color: transparent,
    app-ground-color: rgba(200, 200, 200, 0.1),
    app-text-color: #333,
    app-selection-color: cssvar(primary-color),
    app-selection-text-color: #ffffff,
    app-base-font-size: 18px,
    app-line-height: 1.6,
    app-font-weight: 400,
    app-container-padding: 16px,
    app-container-max-width: 1024px,
  )
);

/** TODO Update this to Mojo Base */
@include superclass() {
  // =============================================================================
  // ^BOX-SIZING
  // =============================================================================
  //
  // Set global `box-sizing` state to `border-box`
  //
  // @note: Usage of `inherit` allows easier override of that parameter in components.
  //        So, instead of
  //
  //           .component {
  //
  //             &,
  //             &:before,
  //             &:after { box-sizing: content-box }
  //
  //           }
  //
  //        to override we need to specify only
  //
  //           .component { box-sizing: content-box; }
  //
  //        Details https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/

  box-sizing: border-box;
  color: cssvar(app-text-color);
  font-weight: cssvar(app-font-weight);
  line-height: cssvar(app-line-height);
  font-size: cssvar(app-base-font-size);
  font-family: cssvar(font-family-primary);
  background-color: cssvar(app-surface-color);

  *,
  *::before,
  *::after {
    box-sizing: inherit;
    outline-color: cssvar(primary-color);
  }

  ::selection {
    color: cssvar(app-selection-text-color);
    background: cssvar(app-selection-color);
  }

  a {
    color: $cyan;
    outline: none;
    text-decoration: none;

    &:focus {
      @include control-shadow();
    }

    &:focus,
    &:hover,
    &:active,
    &.active {
      color: $cyan_darker;
      text-decoration: underline;
    }

    &:visited {
      color: $cyan_lighter;
    }
  }
}
