//============================================================
// COLOR SYSTEM
//============================================================

// scss-docs-start gray-color-variables
$white: #fff !default;
$gray-100: map.get($mono, 900) !default;
$gray-200: map.get($mono, 800) !default;
$gray-300: map.get($mono, 700) !default;
$gray-400: map.get($mono, 600) !default;
$gray-500: map.get($mono, 500) !default;
$gray-600: map.get($mono, 400) !default;
$gray-700: map.get($mono, 300) !default;
$gray-800: map.get($mono, 200) !default;
$gray-900: map.get($mono, 100) !default;
$black: #433e3e;
// scss-docs-end gray-color-variables

// scss-docs-start gray-colors-map
$grays: (
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900,
) !default;
// scss-docs-end gray-colors-map

// scss-docs-start color-variables
$blue: map.get($mojo-blue, hex) !default;
$indigo: map.get($mojo-violet, hex) !default;
$purple: map.get($mojo-violet, light) !default;
$pink: map.get($mojo-red, light) !default;
$red: map.get($mojo-red, hex) !default;
$orange: map.get($mojo-coral, hex) !default;
$yellow: map.get($mojo-yellow, hex) !default;
$green: map.get($mojo-green, hex) !default;
$teal: map.get($mojo-ocean, hex) !default;
$cyan: map.get($mojo-cyan, hex) !default;
// scss-docs-end color-variables

// scss-docs-start colors-map
$colors: (
  "blue": $blue,
  "indigo": $indigo,
  "purple": $purple,
  "pink": $pink,
  "red": $red,
  "orange": $orange,
  "yellow": $yellow,
  "green": $green,
  "teal": $teal,
  "cyan": $cyan,
  "black": $black,
  "white": $white,
  "gray": $gray-600,
  "gray-dark": $gray-800,
) !default;
// scss-docs-end colors-map

// scss-docs-start theme-color-variables
$primary: map.get($mojo-violet, hex) !default;
$secondary: map.get($mojo-ocean, hex) !default;
$success: map.get($mojo-green, hex) !default;
$info: map.get($mojo-cyan, hex) !default;
$warning: map.get($mojo-yellow, hex) !default;
$danger: map.get($mojo-red, hex) !default;
$light: map.get($mono, 900) !default;
$dark: map.get($mono, 100) !default;
// scss-docs-end theme-color-variables

$mojo-colors: (
  "cyan": map.get($mojo-cyan, hex),
  "ocean": map.get($mojo-ocean, hex),
  "blue": map.get($mojo-blue, hex),
  "violet": map.get($mojo-violet, hex),
  "red": map.get($mojo-red, hex),
  "coral": map.get($mojo-coral, hex),
  "yellow": map.get($mojo-yellow, hex),
  "green": map.get($mojo-green, hex),
);

$theme-colors: (
  "primary": $primary,
  "secondary": $secondary,
  "success": $success,
  "info": $info,
  "warning": $warning,
  "danger": $danger,
  "light": $light,
  "dark": $dark,
);

// scss-docs-start page-color-variables
$heading: $gray-200;
$heading-dark: $gray-800;
$text: $light;
$text-dark: $gray-100;
$body: color.scale(map.get($mono, 100), $lightness: -3%);
$body-dark: $gray-100;
$link-color: map.get($mojo-blue, hex);
$link-hover: map.get($mojo-blue, dark);
$link-visited: map.get($mojo-violet, hex);
$link-color-dark: map.get($mojo-blue, light);
$link-hover-dark: map.get($mojo-ocean, light);
$link-visited-dark: map.get($mojo-violet, light);
$caption: $gray-500;
$caption-dark: $gray-400;
$code-body: $gray-700;
$code-body-dark: map.get($mono, 700);
$code-text: map.get($mono, 700);
$code-text-dark: $gray-700;
$navbar: map.get($mojo-violet, hex);
$navbar-dark: $dark;
$border: map.get($mono, 400);
$border-dark: $gray-400;
// scss-docs-end page-color-variables

// Gradient
//
// The gradient which is added to components if `$enable-gradients` is `true`
// This gradient is also added to elements with `.bg-gradient`
// scss-docs-start variable-gradient
$gradient: linear-gradient(180deg, rgba($gray-400, .15), rgba($gray-200, 0));

$body-bg-image: linear-gradient(
  90deg,
  shade-color($cyan, 10%),
  shade-color($purple, 10%),
  shade-color($pink, 5%)
) !default;

$frosted-opacity: .3 !default;

//============================================================
// FONT SYSTEM
//============================================================

$google-fonts-import: false !default;

$PrimaryFont: (
  family: "Jost",
  src: "Jost/jost-variablefont_wght-webfont",
  ext: "woff",
  weight: 400,
  style: normal,
  selector: "html, body, p, li, b, i, strong, a, mark, td, th, button",
  stack: $SansStack,
  display: swap,
);

$HeadingFont: (
  family: "Saira",
  src: "Saira/saira-variablefont_wdthwght-webfont",
  ext: "woff",
  weight: 700,
  style: bold,
  selector: "h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6",
  stack: $SansStack,
  display: swap,
);

$CodeFont: (
  family: "Space Grotesk",
  src: "Space_Grotesk/spacegrotesk-variablefont_wght-webfont",
  ext: "woff",
  weight: 400,
  style: normal,
  selector: "code, pre, samp, kbd, caption, blockquote, cite, .code-block, .code-block p, aside, label, legend, .quote",
  stack: $MonoStack,
  display: swap,
);

//============================================================
// UNIT SIZE SYSTEM
//============================================================
// Shortcuts to use along side or inplace of the 'toolbox/_rhythm.scss' code
// Caution: Using a large number of various spacings will complicate having a
// vertical or horizontal rhythm. consider adjusting the maps instead of trying
// to keep track of what sizes are in play.
$sz_1: .2rem; //1.6px
$sz_2: .5rem; //8px
$sz_2b: .75rem;
$sz_3: 1rem; //16px
$sz_3b: 1.25rem;
$sz_4: 1.5rem; //24px
$sz_4b: 1.75rem;
$sz_5: 2rem; //32px
$sz_6: 2.5rem;
$sz_6b: 2.75rem;
$sz_7: 3rem; //48px
$sz_8: 3.5rem;
$sz_9: 4rem; //64px
$sz_10: 5rem; //80px
$sz_11: 6rem; //96px
$sz_12: 7rem;
$sz_13: 8rem; //128px
$sz_14: 9rem;
$sz_15: 10rem; //160px
$sz_20: 20rem; //320px
$sz_30: 30rem; //480px
$sz_40: 40rem; //640px
$sz_50: 50rem; //800px
$sz_60: 60rem; //960px
$sz_70: 70rem; //1280px
