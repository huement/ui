//
//     █████████               ███                             █████
//    ███░░░░░███             ░░░                             ░░███
//   ░███    ░███  ████████   ████  █████████████    ██████   ███████    ██████
//   ░███████████ ░░███░░███ ░░███ ░░███░░███░░███  ░░░░░███ ░░░███░    ███░░███
//   ░███░░░░░███  ░███ ░███  ░███  ░███ ░███ ░███   ███████   ░███    ░███████
//   ░███    ░███  ░███ ░███  ░███  ░███ ░███ ░███  ███░░███   ░███ ███░███░░░
//   █████   █████ ████ █████ █████ █████░███ █████░░████████  ░░█████ ░░██████
//  ░░░░░   ░░░░░ ░░░░ ░░░░░ ░░░░░ ░░░░░ ░░░ ░░░░░  ░░░░░░░░    ░░░░░   ░░░░░░
//
//  @credit: (Rocket-Propel)[https://github.com/chrishumboldt/Rocket-Propel]
//

// -----------------------------------------------------------------------
//
//     SCSS mixin based on Animate.css
//
//     Animate.css https://daneden.github.io/animate.css
//     Licensed under the MIT license - https://opensource.org/licenses/MIT
//     Copyright (c) 2015 Daniel Eden
//
// -----------------------------------------------------------------------
//
//     Syntax:
//     @include animate-css($type, [$duration, $repeat]);
//
//     Requirements:  Autoprefixer
//
//     Notes:
//     @keyframes will boubble why extend placeholders will
//     cause keyframes to be printed – even if not used.
//
//     To avoid class dependencies the classes .animate and
//     .infinite has been removed. .animate values comes
//     with each include and .infinite can be set by passing
//     $repeat: infinite
//
//     Type values:
//     bounce
//     flash
//     pulse
//     rubberBand
//     shake
//     headShake
//     swing
//     tada
//     wobble
//     jello
//     bounceIn
//     bounceInDown
//     bounceInLeft
//     bounceInRight
//     bounceInUp
//     bounceOut
//     bounceOutDown
//     bounceOutLeft
//     bounceOutRight
//     bounceOutUp
//     fadeIn
//     fadeInDown
//     fadeInDownBig
//     fadeInLeft
//     fadeInLeftBig
//     fadeInRight
//     fadeInRightBig
//     fadeInUp
//     fadeInUpBig
//     fadeOut
//     fadeOutDown
//     fadeOutDownBig
//     fadeOutLeft
//     fadeOutLeftBig
//     fadeOutRight
//     fadeOutRightBig
//     fadeOutUp
//     fadeOutUpBig
//     flipInX
//     flipInY
//     flipOutX
//     flipOutY
//     lightSpeedIn
//     lightSpeedOut
//     rotateIn
//     rotateInDownLeft
//     rotateInDownRight
//     rotateInUpLeft
//     rotateInUpRight
//     rotateOut
//     rotateOutDownLeft
//     rotateOutDownRight
//     rotateOutUpLeft
//     rotateOutUpRight
//     hinge
//     rollIn
//     rollOut
//     zoomIn
//     zoomInDown
//     zoomInLeft
//     zoomInRight
//     zoomInUp
//     zoomOut
//     zoomOutDown
//     zoomOutLeft
//     zoomOutRight
//     zoomOutUp
//     slideInDown
//     slideInLeft
//     slideInRight
//     slideInUp
//     slideOutDown
//     slideOutLeft
//     slideOutRight
//     slideOutUp
//
// -----------------------------------------------------------------------
@mixin animate-css($type, $duration: null, $repeat: null) {
  //     Animation name prefix
  $prefix: "";

  //     Type
  animation-name: unquote($prefix + $type);

  //     Duration
  $duration: if(not $duration and index(hinge, $type), 2s, $duration);
  $duration: if(
    not $duration and index(bouncein bounceout flipoutx flipouty, $type),
    .75s,
    $duration
  );
  animation-duration: $duration or 1s;

  //     Repeat
  animation-iteration-count: if($repeat == infinite, infinite, $repeat);

  //    Fill mode
  animation-fill-mode: both;

  //    Custom
  @if $type == bounce {
    transform-origin: center bottom;
  }
  @if $type == headShake {
    animation-timing-function: ease-in-out;
  }
  @if $type == swing {
    transform-origin: top center;
  }
  @if $type == jello {
    transform-origin: center;
  }
  @if $type == flip {
    backface-visibility: visible;
  }
  @if $type == flipInX {
    backface-visibility: visible !important;
  }
  @if $type == flipInY {
    backface-visibility: visible !important;
  }
  @if $type == flipOutX {
    backface-visibility: visible !important;
  }
  @if $type == flipOutY {
    backface-visibility: visible !important;
  }
  @if $type == lightSpeedIn {
    animation-timing-function: ease-out;
  }
  @if $type == lightSpeedOut {
    animation-timing-function: ease-in;
  }

  //    Keyframes
  $keyframerenderonce: if(
    global-variable-exists(keyframerenderonce),
    $keyframerenderonce,
    ()
  ) !global;
  @if not index($keyframerenderonce, $type) {
    $keyframerenderonce: append($keyframerenderonce, $type) !global;
    @keyframes .#{$prefix + $type} {
      //     Attention Seekers
      @if $type == bounce {
        20%,
        53%,
        80%,
        0%,
        100% {
          transform: translate3d(0, 0, 0);
          animation-timing-function: cubic-bezier(.215, .61, .355, 1);
        }
        40%,
        43% {
          transform: translate3d(0, -30px, 0);
          animation-timing-function: cubic-bezier(.755, .05, .855, .06);
        }
        70% {
          transform: translate3d(0, -15px, 0);
          animation-timing-function: cubic-bezier(.755, .05, .855, .06);
        }
        90% {
          transform: translate3d(0, -4px, 0);
        }
      }
      @if $type == flash {
        50%,
        0%,
        100% {
          opacity: 1;
        }
        25%,
        75% {
          opacity: 0;
        }
      }
      @if $type == pulse {
        0% {
          transform: scale3d(1, 1, 1);
        }
        50% {
          transform: scale3d(1.05, 1.05, 1.05);
        }
        100% {
          transform: scale3d(1, 1, 1);
        }
      }
      @if $type == rubberBand {
        0% {
          transform: scale3d(1, 1, 1);
        }
        30% {
          transform: scale3d(1.25, .75, 1);
        }
        40% {
          transform: scale3d(.75, 1.25, 1);
        }
        50% {
          transform: scale3d(1.15, .85, 1);
        }
        65% {
          transform: scale3d(.95, 1.05, 1);
        }
        75% {
          transform: scale3d(1.05, .95, 1);
        }
        100% {
          transform: scale3d(1, 1, 1);
        }
      }
      @if $type == shake {
        0%,
        100% {
          transform: translate3d(0, 0, 0);
        }
        10%,
        30%,
        50%,
        70%,
        90% {
          transform: translate3d(-10px, 0, 0);
        }
        20%,
        40%,
        60%,
        80% {
          transform: translate3d(10px, 0, 0);
        }
      }
      @if $type == headShake {
        0% {
          transform: translateX(0);
        }
        6.5% {
          transform: translateX(-6px) rotateY(-9deg);
        }
        18.5% {
          transform: translateX(5px) rotateY(7deg);
        }
        31.5% {
          transform: translateX(-3px) rotateY(-5deg);
        }
        43.5% {
          transform: translateX(2px) rotateY(3deg);
        }
        50% {
          transform: translateX(0);
        }
      }
      @if $type == swing {
        20% {
          transform: rotate3d(0, 0, 1, 15deg);
        }
        40% {
          transform: rotate3d(0, 0, 1, -10deg);
        }
        60% {
          transform: rotate3d(0, 0, 1, 5deg);
        }
        80% {
          transform: rotate3d(0, 0, 1, -5deg);
        }
        100% {
          transform: rotate3d(0, 0, 1, 0deg);
        }
      }
      @if $type == tada {
        0% {
          transform: scale3d(1, 1, 1);
        }
        10%,
        20% {
          transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
        }
        30%,
        50%,
        70%,
        90% {
          transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
        }
        40%,
        60%,
        80% {
          transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
        }
        100% {
          transform: scale3d(1, 1, 1);
        }
      }
      @if $type == wobble {
        0% {
          transform: none;
        }
        15% {
          transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
        }
        30% {
          transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
        }
        45% {
          transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
        }
        60% {
          transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
        }
        75% {
          transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
        }
        100% {
          transform: none;
        }
      }
      @if $type == jello {
        11.1%,
        0%,
        100% {
          transform: none;
        }
        22.2% {
          transform: skewX(-12.5deg) skewY(-12.5deg);
        }
        33.3% {
          transform: skewX(6.25deg) skewY(6.25deg);
        }
        44.4% {
          transform: skewX(-3.125deg) skewY(-3.125deg);
        }
        55.5% {
          transform: skewX(1.5625deg) skewY(1.5625deg);
        }
        66.6% {
          transform: skewX(-.78125deg) skewY(-.78125deg);
        }
        77.7% {
          transform: skewX(.390625deg) skewY(.390625deg);
        }
        88.8% {
          transform: skewX(-.1953125deg) skewY(-.1953125deg);
        }
      }
      //     Bouncing Entrances
      @if $type == bounceIn {
        20%,
        40%,
        60%,
        80%,
        0%,
        100% {
          animation-timing-function: cubic-bezier(.215, .61, .355, 1);
        }
        0% {
          opacity: 0;
          transform: scale3d(.3, .3, .3);
        }
        20% {
          transform: scale3d(1.1, 1.1, 1.1);
        }
        40% {
          transform: scale3d(.9, .9, .9);
        }
        60% {
          opacity: 1;
          transform: scale3d(1.03, 1.03, 1.03);
        }
        80% {
          transform: scale3d(.97, .97, .97);
        }
        100% {
          opacity: 1;
          transform: scale3d(1, 1, 1);
        }
      }
      @if $type == bounceInDown {
        60%,
        75%,
        90%,
        0%,
        100% {
          animation-timing-function: cubic-bezier(.215, .61, .355, 1);
        }
        0% {
          opacity: 0;
          transform: translate3d(0, -3000px, 0);
        }
        60% {
          opacity: 1;
          transform: translate3d(0, 25px, 0);
        }
        75% {
          transform: translate3d(0, -10px, 0);
        }
        90% {
          transform: translate3d(0, 5px, 0);
        }
        100% {
          transform: none;
        }
      }
      @if $type == bounceInLeft {
        60%,
        75%,
        90%,
        0%,
        100% {
          animation-timing-function: cubic-bezier(.215, .61, .355, 1);
        }
        0% {
          opacity: 0;
          transform: translate3d(-3000px, 0, 0);
        }
        60% {
          opacity: 1;
          transform: translate3d(25px, 0, 0);
        }
        75% {
          transform: translate3d(-10px, 0, 0);
        }
        90% {
          transform: translate3d(5px, 0, 0);
        }
        100% {
          transform: none;
        }
      }
      @if $type == bounceInRight {
        60%,
        75%,
        90%,
        0%,
        100% {
          animation-timing-function: cubic-bezier(.215, .61, .355, 1);
        }
        0% {
          opacity: 0;
          transform: translate3d(3000px, 0, 0);
        }
        60% {
          opacity: 1;
          transform: translate3d(-25px, 0, 0);
        }
        75% {
          transform: translate3d(10px, 0, 0);
        }
        90% {
          transform: translate3d(-5px, 0, 0);
        }
        100% {
          transform: none;
        }
      }
      @if $type == bounceInUp {
        60%,
        75%,
        90%,
        0%,
        100% {
          animation-timing-function: cubic-bezier(.215, .61, .355, 1);
        }
        0% {
          opacity: 0;
          transform: translate3d(0, 3000px, 0);
        }
        60% {
          opacity: 1;
          transform: translate3d(0, -20px, 0);
        }
        75% {
          transform: translate3d(0, 10px, 0);
        }
        90% {
          transform: translate3d(0, -5px, 0);
        }
        100% {
          transform: translate3d(0, 0, 0);
        }
      }
      //     Bouncing Exits
      @if $type == bounceOut {
        20% {
          transform: scale3d(.9, .9, .9);
        }
        50%,
        55% {
          opacity: 1;
          transform: scale3d(1.1, 1.1, 1.1);
        }
        100% {
          opacity: 0;
          transform: scale3d(.3, .3, .3);
        }
      }
      @if $type == bounceOutDown {
        20% {
          transform: translate3d(0, 10px, 0);
        }
        40%,
        45% {
          opacity: 1;
          transform: translate3d(0, -20px, 0);
        }
        100% {
          opacity: 0;
          transform: translate3d(0, 2000px, 0);
        }
      }

      @if $type == bounceOutLeft {
        20% {
          opacity: 1;
          transform: translate3d(20px, 0, 0);
        }
        100% {
          opacity: 0;
          transform: translate3d(-2000px, 0, 0);
        }
      }
      @if $type == bounceOutRight {
        20% {
          opacity: 1;
          transform: translate3d(-20px, 0, 0);
        }
        100% {
          opacity: 0;
          transform: translate3d(2000px, 0, 0);
        }
      }
      @if $type == bounceOutUp {
        20% {
          transform: translate3d(0, -10px, 0);
        }
        40%,
        45% {
          opacity: 1;
          transform: translate3d(0, 20px, 0);
        }
        100% {
          opacity: 0;
          transform: translate3d(0, -2000px, 0);
        }
      }
      //     Fading Entrances
      @if $type == fadeIn {
        0% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }
      @if $type == fadeInDown {
        0% {
          opacity: 0;
          transform: translate3d(0, -100%, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == fadeInDownBig {
        0% {
          opacity: 0;
          transform: translate3d(0, -2000px, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == fadeInLeft {
        0% {
          opacity: 0;
          transform: translate3d(-100%, 0, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == fadeInLeftBig {
        0% {
          opacity: 0;
          transform: translate3d(-2000px, 0, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == fadeInRight {
        0% {
          opacity: 0;
          transform: translate3d(100%, 0, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == fadeInRightBig {
        0% {
          opacity: 0;
          transform: translate3d(2000px, 0, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == fadeInUp {
        0% {
          opacity: 0;
          transform: translate3d(0, 100%, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == fadeInUpBig {
        0% {
          opacity: 0;
          transform: translate3d(0, 2000px, 0);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      //    Fading Exits
      @if $type == fadeOut {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
      @if $type == fadeOutDown {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(0, 100%, 0);
        }
      }
      @if $type == fadeOutDownBig {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(0, 2000px, 0);
        }
      }
      @if $type == fadeOutLeft {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(-100%, 0, 0);
        }
      }
      @if $type == fadeOutLeftBig {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(-2000px, 0, 0);
        }
      }
      @if $type == fadeOutRight {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(100%, 0, 0);
        }
      }
      @if $type == fadeOutRightBig {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(2000px, 0, 0);
        }
      }
      @if $type == fadeOutUp {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(0, -100%, 0);
        }
      }
      @if $type == fadeOutUpBig {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(0, -2000px, 0);
        }
      }
      //    Flippers
      @if $type == flip {
        0% {
          transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
          animation-timing-function: ease-out;
        }
        40% {
          transform:
            perspective(400px)
            translate3d(0, 0, 150px)
            rotate3d(0, 1, 0, -190deg);
          animation-timing-function: ease-out;
        }
        50% {
          transform:
            perspective(400px)
            translate3d(0, 0, 150px)
            rotate3d(0, 1, 0, -170deg);
          animation-timing-function: ease-in;
        }
        80% {
          transform: perspective(400px) scale3d(.95, .95, .95);
          animation-timing-function: ease-in;
        }
        100% {
          transform: perspective(400px);
          animation-timing-function: ease-in;
        }
      }
      @if $type == flipInX {
        0% {
          opacity: 0;
          transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
          animation-timing-function: ease-in;
        }
        40% {
          transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
          animation-timing-function: ease-in;
        }
        60% {
          opacity: 1;
          transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
        }
        80% {
          transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
        }
        100% {
          transform: perspective(400px);
        }
      }
      @if $type == flipInY {
        0% {
          opacity: 0;
          transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
          animation-timing-function: ease-in;
        }
        40% {
          transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
          animation-timing-function: ease-in;
        }
        60% {
          opacity: 1;
          transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
        }
        80% {
          transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
        }
        100% {
          transform: perspective(400px);
        }
      }
      @if $type == flipOutX {
        0% {
          transform: perspective(400px);
        }
        30% {
          opacity: 1;
          transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        }
        100% {
          opacity: 0;
          transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        }
      }
      @if $type == flipOutY {
        0% {
          transform: perspective(400px);
        }
        30% {
          opacity: 1;
          transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
        }
        100% {
          opacity: 0;
          transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        }
      }
      //     Lightspeed
      @if $type == lightSpeedIn {
        0% {
          opacity: 0;
          transform: translate3d(100%, 0, 0) skewX(-30deg);
        }
        60% {
          opacity: 1;
          transform: skewX(20deg);
        }
        80% {
          opacity: 1;
          transform: skewX(-5deg);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == lightSpeedOut {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(100%, 0, 0) skewX(30deg);
        }
      }
      //     Rotating Entrances
      @if $type == rotateIn {
        0% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, -200deg);
          transform-origin: center;
        }
        100% {
          opacity: 1;
          transform: none;
          transform-origin: center;
        }
      }
      @if $type == rotateInDownLeft {
        0% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, -45deg);
          transform-origin: left bottom;
        }
        100% {
          opacity: 1;
          transform: none;
          transform-origin: left bottom;
        }
      }
      @if $type == rotateInDownRight {
        0% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, 45deg);
          transform-origin: right bottom;
        }
        100% {
          opacity: 1;
          transform: none;
          transform-origin: right bottom;
        }
      }
      @if $type == rotateInUpLeft {
        0% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, 45deg);
          transform-origin: left bottom;
        }
        100% {
          opacity: 1;
          transform: none;
          transform-origin: left bottom;
        }
      }
      @if $type == rotateInUpRight {
        0% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, -90deg);
          transform-origin: right bottom;
        }
        100% {
          opacity: 1;
          transform: none;
          transform-origin: right bottom;
        }
      }
      //     Rotating Exits
      @if $type == rotateOut {
        0% {
          opacity: 1;
          transform-origin: center;
        }
        100% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, 200deg);
          transform-origin: center;
        }
      }
      @if $type == rotateOutDownLeft {
        0% {
          opacity: 1;
          transform-origin: left bottom;
        }
        100% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, 45deg);
          transform-origin: left bottom;
        }
      }
      @if $type == rotateOutDownRight {
        0% {
          opacity: 1;
          transform-origin: right bottom;
        }
        100% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, -45deg);
          transform-origin: right bottom;
        }
      }
      @if $type == rotateOutUpLeft {
        0% {
          opacity: 1;
          transform-origin: left bottom;
        }
        100% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, -45deg);
          transform-origin: left bottom;
        }
      }
      @if $type == rotateOutUpRight {
        0% {
          opacity: 1;
          transform-origin: right bottom;
        }
        100% {
          opacity: 0;
          transform: rotate3d(0, 0, 1, 90deg);
          transform-origin: right bottom;
        }
      }
      //     Sliding Entrances
      @if $type == slideInDown {
        0% {
          visibility: visible;
          transform: translate3d(0, -100%, 0);
        }
        100% {
          transform: translate3d(0, 0, 0);
        }
      }
      @if $type == slideInLeft {
        0% {
          visibility: visible;
          transform: translate3d(-100%, 0, 0);
        }
        100% {
          transform: translate3d(0, 0, 0);
        }
      }
      @if $type == slideInRight {
        0% {
          visibility: visible;
          transform: translate3d(100%, 0, 0);
        }
        100% {
          transform: translate3d(0, 0, 0);
        }
      }
      @if $type == slideInUp {
        0% {
          visibility: visible;
          transform: translate3d(0, 100%, 0);
        }
        100% {
          transform: translate3d(0, 0, 0);
        }
      }
      //     Sliding Exits
      @if $type == slideOutUp {
        0% {
          transform: translate3d(0, 0, 0);
        }
        100% {
          visibility: hidden;
          transform: translate3d(0, -100%, 0);
        }
      }
      @if $type == slideOutDown {
        0% {
          transform: translate3d(0, 0, 0);
        }
        100% {
          visibility: hidden;
          transform: translate3d(0, 100%, 0);
        }
      }
      @if $type == slideOutLeft {
        0% {
          transform: translate3d(0, 0, 0);
        }
        100% {
          visibility: hidden;
          transform: translate3d(-100%, 0, 0);
        }
      }
      @if $type == slideOutRight {
        0% {
          transform: translate3d(0, 0, 0);
        }
        100% {
          visibility: hidden;
          transform: translate3d(1800%, 0, 0);
        }
      }
      //    Zoom Entrances
      @if $type == zoomIn {
        0% {
          opacity: 0;
          transform: scale3d(.3, .3, .3);
        }
        50% {
          opacity: 1;
        }
      }
      @if $type == zoomInDown {
        0% {
          opacity: 0;
          transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
          animation-timing-function: cubic-bezier(.55, .055, .675, .19);
        }
        60% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
          animation-timing-function: cubic-bezier(.175, .885, .32, 1);
        }
      }
      @if $type == zoomInLeft {
        0% {
          opacity: 0;
          transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
          animation-timing-function: cubic-bezier(.55, .055, .675, .19);
        }
        60% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
          animation-timing-function: cubic-bezier(.175, .885, .32, 1);
        }
      }
      @if $type == zoomInRight {
        0% {
          opacity: 0;
          transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
          animation-timing-function: cubic-bezier(.55, .055, .675, .19);
        }
        60% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
          animation-timing-function: cubic-bezier(.175, .885, .32, 1);
        }
      }
      @if $type == zoomInUp {
        0% {
          opacity: 0;
          transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
          animation-timing-function: cubic-bezier(.55, .055, .675, .19);
        }
        60% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
          animation-timing-function: cubic-bezier(.175, .885, .32, 1);
        }
      }
      //    Zoom Exits
      @if $type == zoomOut {
        0% {
          opacity: 1;
        }
        50% {
          opacity: 0;
          transform: scale3d(.3, .3, .3);
        }
        100% {
          opacity: 0;
        }
      }
      @if $type == zoomOutDown {
        40% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
          animation-timing-function: cubic-bezier(.55, .055, .675, .19);
        }
        100% {
          opacity: 0;
          transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
          transform-origin: center bottom;
          animation-timing-function: cubic-bezier(.175, .885, .32, 1);
        }
      }
      @if $type == zoomOutLeft {
        40% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
        }
        100% {
          opacity: 0;
          transform: scale(.1) translate3d(-2000px, 0, 0);
          transform-origin: left center;
        }
      }
      @if $type == zoomOutRight {
        40% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
        }
        100% {
          opacity: 0;
          transform: scale(.1) translate3d(2000px, 0, 0);
          transform-origin: right center;
        }
      }
      @if $type == zoomOutUp {
        40% {
          opacity: 1;
          transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
          animation-timing-function: cubic-bezier(.55, .055, .675, .19);
        }
        100% {
          opacity: 0;
          transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
          transform-origin: center bottom;
          animation-timing-function: cubic-bezier(.175, .885, .32, 1);
        }
      }
      //    Specials
      @if $type == hinge {
        0% {
          transform-origin: top left;
          animation-timing-function: ease-in-out;
        }
        20%,
        60% {
          transform: rotate3d(0, 0, 1, 80deg);
          transform-origin: top left;
          animation-timing-function: ease-in-out;
        }
        40%,
        80% {
          opacity: 1;
          transform: rotate3d(0, 0, 1, 60deg);
          transform-origin: top left;
          animation-timing-function: ease-in-out;
        }
        100% {
          opacity: 0;
          transform: translate3d(0, 700px, 0);
        }
      }
      @if $type == rollIn {
        0% {
          opacity: 0;
          transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
        }
        100% {
          opacity: 1;
          transform: none;
        }
      }
      @if $type == rollOut {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
        }
      }
    }
  }
}
