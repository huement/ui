// Responsive images (ensure images don't scale beyond their parents)

// Responsive image
//
// Keep images from scaling beyond the width of their parents.

@mixin img-fluid($display: inline) {
  display: $display;
  // Part 1: Set a maximum relative to the parent
  max-width: 100%;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}

// Retina image
//
// Short retina mixin for setting background-image and -size.

// stylelint-disable indentation, media-query-list-comma-newline-after
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url($file-1x);

  // Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,
  // but doesn't convert dppx=>dpi.
  // There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.
  // Compatibility info: https://caniuse.com/#feat=css-media-resolution
  @media only screen and (min-resolution: 192dpi) {
    background-image: url($file-2x);
    background-size: $width-1x $height-1x;
  }
}

@mixin img-center {
  position: relative;
  display: block;
  margin-right: auto;
  margin-left: auto;
}

@mixin reset {
  padding: 0;
  margin: 0;
  font-family: inherit;
  font-size: 1em;
  color: currentcolor;
  appearance: none;
  background: none;
  border: none;
}

@mixin unselectable {
  -webkit-touch-callout: none;
  user-select: none;
}

@mixin arrow($color: transparent) {
  position: absolute;
  top: 50%;
  display: block;
  width: .625em;
  height: .625em;
  margin-top: -.4375em;
  pointer-events: none;
  content: " ";
  border: 3px solid $color;
  border-top: 0;
  border-right: 0;
  border-radius: 2px;
  transform: rotate(-45deg);
  transform-origin: center;
}

@mixin block($spacing: $block-spacing) {
  &:not(:last-child) {
    margin-bottom: $spacing;
  }
}

@mixin block-center {
  position: relative;
  display: block;
  margin-right: auto;
  margin-left: auto;
}

@mixin block-box($marginTop: 0, $marginBtm: 0) {
  position: relative;
  display: block;
  width: 100%;
  height: auto;
  padding: 0;
  margin: $marginTop auto $marginBtm auto;
}

@mixin delete {
  @include unselectable ();
  position: relative;
  display: inline-block;
  flex-grow: 0;
  flex-shrink: 0;
  width: 20px;
  min-width: 20px;
  max-width: 20px;
  height: 20px;
  min-height: 20px;
  max-height: 20px;
  font-size: 0;
  vertical-align: top;
  appearance: none;
  pointer-events: auto;
  cursor: pointer;
  background-color: validrgba($dark, .2);
  border: none;
  border-radius: $border-radius-lg;
  outline: none;

  &::before,
  &::after {
    position: absolute;
    top: 50%;
    left: 50%;
    display: block;
    content: "";
    background-color: $light_white;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transform-origin: center center;
  }

  &::before {
    width: 50%;
    height: 2px;
  }

  &::after {
    width: 2px;
    height: 50%;
  }

  &:hover,
  &:focus {
    background-color: validrgba($dark, .3);
  }

  &:active {
    background-color: validrgba($dark, .4);
  }

  // Sizes
  &.is-small {
    width: 16px;
    min-width: 16px;
    max-width: 16px;
    height: 16px;
    min-height: 16px;
    max-height: 16px;
  }

  &.is-medium {
    width: 24px;
    min-width: 24px;
    max-width: 24px;
    height: 24px;
    min-height: 24px;
    max-height: 24px;
  }

  &.is-large {
    width: 32px;
    min-width: 32px;
    max-width: 32px;
    height: 32px;
    min-height: 32px;
    max-height: 32px;
  }
}

@mixin loader {
  position: relative;
  display: block;
  width: 1em;
  height: 1em;
  content: "";
  border: 2px solid $medium_light;
  border-top-color: transparent;
  border-right-color: transparent;
  border-radius: $border-radius-lg;
  animation: spinAround 500ms infinite linear;
}

@mixin overlay($offset: 0) {
  position: absolute;
  top: $offset;
  right: $offset;
  bottom: $offset;
  left: $offset;
}

@mixin list-unstyled {
  padding-left: 0;
  list-style: none;
}

@mixin overflow-touch {
  -webkit-overflow-scrolling: touch;
}

@mixin placeholder {
  $placeholders: ":-moz" ":-webkit-input" "-moz" "-ms-input";

  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

@mixin center($width, $height: 0) {
  position: absolute;

  @if $height != 0 {
    left: calc(50% - (#{$width} * .5));
    top: calc(50% - (#{$height} * .5));
  } @else {
    left: calc(50% - (#{$width} * .5));
    top: calc(50% - (#{$width} * .5));
  }
}
