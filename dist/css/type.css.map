{"version":3,"sourceRoot":"","sources":["../../src/_framework.scss","../../src/_root.scss","../../node_modules/bootstrap/scss/vendor/_rfs.scss","../../src/normalize/_normalize.scss","../../src/normalize/_vertical-rhythm.scss","../../src/_kick-off.scss","../../src/_variables.scss","../../src/config/_theme.scss","../../src/mixins/_hover.scss","../../src/framework/_typography.scss","../../src/harmony/_base.scss","../../src/mixins/_breakpoints.scss","../../src/framework/_animate.scss","../../src/type.scss","../../src/harmony/_headings.scss","../../src/harmony/_title.scss","../../src/config/_globals.scss","../../src/harmony/_typesetting.scss","../../src/harmony/_code.scss","../../node_modules/bootstrap/scss/mixins/_border-radius.scss","../../src/mixins/_box-shadow.scss","../../src/harmony/_content.scss","../../src/harmony/_hero.scss","../../src/mixins/_shortcuts.scss"],"names":[],"mappings":"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","file":"type.css","sourcesContent":["@use \"sass:map\";\n@use \"sass:list\";\n@use \"sass:math\";\n@use \"sass:color\";\n@use \"sass:meta\";\n@use \"sass:string\";\n\n@import \"framework/animate\";\n@import \"framework/functions\";\n@import \"framework/color-functions\";\n@import \"framework/props\";\n@import \"framework/rfs\";\n@import \"framework/typography\";\n@import \"framework/rhythm\";\n@import \"framework/math-functions\";\n\n@import \"config/globals\"; // CONSTANTS & RATIOS\n@import \"config/tokens\"; // GENERATED TYPOGRAPHY SIZES\n@import \"config/palette\"; // DMT PALETTE [UPDATED]\n@import \"config/theme\"; // FINAL TWEAKS\n\n//\n// CONFIG VARS & ASSEMBLE MAIN FUNCTIONALITY\n@import \"bootstrap/scss/variables\";\n@import \"bootstrap/scss/variables-dark\";\n@import \"variables\";\n@import \"variables-dark\";\n\n@import \"bootstrap/scss/maps\";\n@import \"bootstrap/scss/mixins\";\n@import \"bootstrap/scss/utilities\";\n@import \"mixins\";\n\n///   Superclass\n///  --------------------\n///   The superclass is the application root class that\n///   wraps and scope the lib selectors. Use this class\n///   to wrap the modules in a superclass preserving the\n///   outer scope from the lib effects\n\n@mixin superclass() {\n  @if $superclass and str-length($superclass) > 0 {\n    .#{$superclass} {\n      @content;\n    }\n  } @else {\n    body {\n      @content;\n    }\n  }\n}\n\n///   CSS Variables\n///  --------------------\n///   Use this mixin to declare a set of CSS Custom Properties.\n///   The variables in $css_variables will be properly prefixed.\n///   The use of this mixin is encouraged to keep a good scalability.\n\n@mixin cssvars($css_variables) {\n  :root {\n    @each $name, $value in $css_variables {\n      --#{$name}: #{$value};\n    }\n  }\n}\n\n/// This mixin is used to change a CSS property value.\n/// It will change a declared css variable auto-prefixing it.\n@mixin cssvar($name, $value: \"\") {\n  --#{$name}: #{$value};\n}\n\n/// Retrieve a css variable value with already autoprefixed.\n/// Use the mixin if you want to change the variable value.\n@function cssvar($name) {\n  @return var(--#{$name});\n}\n\n@mixin mojoBanner($file, $version) {\n  /**!\n   * Mojo #{$file} v#{$version} (https://github.com/huement/mojo/)\n   * Copyright 2023-* Huement (https://huement.com)\n   * Licensed under Mozilla Public License 2 [MPL-2.0] (https://github.com/huement/mojo/blob/main/LICENSE)\n   *  Based on:\n   *    Shards v3.0.0 (https://github.com/DesignRevision/shards-ui)\n   *    Bootstrap v5.3.2 (https://getbootstrap.com/)\n   */\n}\n\n@mixin debugMessage($string) {\n  @if ($debug == true) {\n    @debug \"#{$string}\";\n  }\n}\n",":root,\n[data-bs-theme=\"light\"] {\n  // Note: Custom variable values only support SassScript inside `#{}`.\n\n  // Colors\n  //\n  // Generate palettes for full colors, grays, and theme colors.\n  @each $color, $value in $mojo-colors {\n    --#{$prefix}mojo-#{$color}: #{$value};\n  }\n\n  @each $color, $value in $mono {\n    --#{$prefix}gray-#{$color}: #{$value};\n  }\n\n  @each $color, $value in $theme-colors {\n    --#{$prefix}#{$color}: #{$value};\n  }\n\n  @each $color, $value in $theme-colors-rgb {\n    --#{$prefix}#{$color}-rgb: #{$value};\n  }\n\n  @each $color, $value in $theme-colors-text {\n    --#{$prefix}#{$color}-text-emphasis: #{$value};\n  }\n\n  @each $color, $value in $theme-colors-bg-subtle {\n    --#{$prefix}#{$color}-bg-subtle: #{$value};\n  }\n\n  @each $color, $value in $theme-colors-border-subtle {\n    --#{$prefix}#{$color}-border-subtle: #{$value};\n  }\n\n  --#{$prefix}white-rgb: #{to-rgb($white)};\n  --#{$prefix}black-rgb: #{to-rgb($black)};\n\n  // Fonts\n  // Note: Use `inspect` for lists so that quoted items keep the quotes.\n  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172\n  $font-family-sans-serif: map.get($PrimaryFont, \"family\");\n  $font-family-headings: map.get($HeadingFont, \"family\");\n  $font-family-monospace: map.get($CodeFont, \"family\");\n  //--font-sans-serif: #{inspect($font-family-sans-serif)};\n  //--font-monospace: #{inspect($font-family-monospace)};\n  //--gradient: #{$gradient};\n\n  --#{$prefix}link-color: #{$link-color};\n  --#{$prefix}link-hover-color: #{$link-hover};\n  --#{$prefix}code-color: #{$gray-700};\n  --#{$prefix}highlight-bg: #{map.get($mojo-cyan, hex)};\n\n  // Note: Use `inspect` for lists so that quoted items keep the quotes.\n  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172\n  --#{$prefix}font-headings: #{inspect($font-family-headings)};\n  --#{$prefix}font-sans-serif: #{inspect($font-family-sans-serif)};\n  --#{$prefix}font-monospace: #{inspect($font-family-monospace)};\n  --#{$prefix}gradient: #{$gradient};\n\n  // Root and body\n  // scss-docs-start root-body-variables\n  @if $font-size-root != null {\n    --#{$prefix}root-font-size: #{$font-size-root};\n  }\n  --#{$prefix}body-font-family: #{inspect($font-family-base)};\n  @include rfs($font-size-base, --#{$prefix}body-font-size);\n  --#{$prefix}body-font-weight: #{$font-weight-base};\n  --#{$prefix}body-line-height: #{$line-height-base};\n  @if $body-text-align != null {\n    --#{$prefix}body-text-align: #{$body-text-align};\n  }\n\n  --#{$prefix}body-color: #{$body-color};\n  --#{$prefix}body-color-rgb: #{to-rgb($body-color)};\n  --#{$prefix}body-bg: #{$body-bg};\n  --#{$prefix}body-bg-rgb: #{to-rgb($body-bg)};\n\n  --#{$prefix}emphasis-color: #{$body-emphasis-color};\n  --#{$prefix}emphasis-color-rgb: #{to-rgb($body-emphasis-color)};\n\n  --#{$prefix}secondary-color: #{$body-secondary-color};\n  --#{$prefix}secondary-color-rgb: #{to-rgb($body-secondary-color)};\n  --#{$prefix}secondary-bg: #{$body-secondary-bg};\n  --#{$prefix}secondary-bg-rgb: #{to-rgb($body-secondary-bg)};\n\n  --#{$prefix}tertiary-color: #{$body-tertiary-color};\n  --#{$prefix}tertiary-color-rgb: #{to-rgb($body-tertiary-color)};\n  --#{$prefix}tertiary-bg: #{$body-tertiary-bg};\n  --#{$prefix}tertiary-bg-rgb: #{to-rgb($body-tertiary-bg)};\n  // scss-docs-end root-body-variables\n\n  --#{$prefix}heading-color: #{$headings-color};\n\n  --#{$prefix}link-color: #{$link-color};\n  --#{$prefix}link-color-rgb: #{to-rgb($link-color)};\n  --#{$prefix}link-decoration: #{$link-decoration};\n\n  --#{$prefix}link-hover-color: #{$link-hover-color};\n  --#{$prefix}link-hover-color-rgb: #{to-rgb($link-hover-color)};\n\n  @if $link-hover-decoration != none {\n    --#{$prefix}link-hover-decoration: #{$link-hover-decoration};\n  }\n\n  --#{$prefix}code-color: #{$code-color};\n  --#{$prefix}highlight-color: #{$mark-color};\n  --#{$prefix}highlight-bg: #{$mark-bg};\n\n  // scss-docs-start root-border-var\n  --#{$prefix}border-width: #{$border-width};\n  --#{$prefix}border-style: #{$border-style};\n  --#{$prefix}border-color: #{$border-color};\n  --#{$prefix}border-color-translucent: #{$border-color-translucent};\n\n  --#{$prefix}border-radius: #{$border-radius};\n  --#{$prefix}border-radius-sm: #{$border-radius-sm};\n  --#{$prefix}border-radius-lg: #{$border-radius-lg};\n  --#{$prefix}border-radius-xl: #{$border-radius-xl};\n  --#{$prefix}border-radius-xxl: #{$border-radius-xxl};\n  --#{$prefix}border-radius-2xl: var(--#{$prefix}border-radius-xxl); // Deprecated in v5.3.0 for consistency\n  --#{$prefix}border-radius-pill: #{$border-radius-pill};\n  // scss-docs-end root-border-var\n\n  --#{$prefix}box-shadow: #{$box-shadow};\n  --#{$prefix}box-shadow-sm: #{$box-shadow-sm};\n  --#{$prefix}box-shadow-lg: #{$box-shadow-lg};\n  --#{$prefix}box-shadow-inset: #{$box-shadow-inset};\n\n  // Focus styles\n  // scss-docs-start root-focus-variables\n  --#{$prefix}focus-ring-width: #{$focus-ring-width};\n  --#{$prefix}focus-ring-opacity: #{$focus-ring-opacity};\n  --#{$prefix}focus-ring-color: #{$focus-ring-color};\n  // scss-docs-end root-focus-variables\n\n  // scss-docs-start root-form-validation-variables\n  --#{$prefix}form-valid-color: #{$form-valid-color};\n  --#{$prefix}form-valid-border-color: #{$form-valid-border-color};\n  --#{$prefix}form-invalid-color: #{$form-invalid-color};\n  --#{$prefix}form-invalid-border-color: #{$form-invalid-border-color};\n  // scss-docs-end root-form-validation-variables\n}\n\n@if $enable-dark-mode {\n  @include color-mode(dark, true) {\n    color-scheme: dark;\n\n    // scss-docs-start root-dark-mode-vars\n    --#{$prefix}body-color: #{$body-color-dark};\n    --#{$prefix}body-color-rgb: #{to-rgb($body-color-dark)};\n    --#{$prefix}body-bg: #{$body-bg-dark};\n    --#{$prefix}body-bg-rgb: #{to-rgb($body-bg-dark)};\n\n    --#{$prefix}emphasis-color: #{$body-emphasis-color-dark};\n    --#{$prefix}emphasis-color-rgb: #{to-rgb($body-emphasis-color-dark)};\n\n    --#{$prefix}secondary-color: #{$body-secondary-color-dark};\n    --#{$prefix}secondary-color-rgb: #{to-rgb($body-secondary-color-dark)};\n    --#{$prefix}secondary-bg: #{$body-secondary-bg-dark};\n    --#{$prefix}secondary-bg-rgb: #{to-rgb($body-secondary-bg-dark)};\n\n    --#{$prefix}tertiary-color: #{$body-tertiary-color-dark};\n    --#{$prefix}tertiary-color-rgb: #{to-rgb($body-tertiary-color-dark)};\n    --#{$prefix}tertiary-bg: #{$body-tertiary-bg-dark};\n    --#{$prefix}tertiary-bg-rgb: #{to-rgb($body-tertiary-bg-dark)};\n\n    @each $color, $value in $theme-colors-text-dark {\n      --#{$prefix}#{$color}-text-emphasis: #{$value};\n    }\n\n    @each $color, $value in $theme-colors-bg-subtle-dark {\n      --#{$prefix}#{$color}-bg-subtle: #{$value};\n    }\n\n    @each $color, $value in $theme-colors-border-subtle-dark {\n      --#{$prefix}#{$color}-border-subtle: #{$value};\n    }\n\n    --#{$prefix}heading-color: #{$headings-color-dark};\n\n    --#{$prefix}link-color: #{$link-color-dark};\n    --#{$prefix}link-hover-color: #{$link-hover-color-dark};\n    --#{$prefix}link-color-rgb: #{to-rgb($link-color-dark)};\n    --#{$prefix}link-hover-color-rgb: #{to-rgb($link-hover-color-dark)};\n\n    --#{$prefix}code-color: #{$code-color-dark};\n    --#{$prefix}highlight-color: #{$mark-color-dark};\n    --#{$prefix}highlight-bg: #{$mark-bg-dark};\n\n    --#{$prefix}border-color: #{$border-color-dark};\n    --#{$prefix}border-color-translucent: #{$border-color-translucent-dark};\n\n    --#{$prefix}form-valid-color: #{$form-valid-color-dark};\n    --#{$prefix}form-valid-border-color: #{$form-valid-border-color-dark};\n    --#{$prefix}form-invalid-color: #{$form-invalid-color-dark};\n    --#{$prefix}form-invalid-border-color: #{$form-invalid-border-color-dark};\n    // scss-docs-end root-dark-mode-vars\n  }\n}\n","// stylelint-disable scss/dimension-no-non-numeric-values\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query () {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query () {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + \" \" + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      } @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \" \" + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \" \" + $value;\n      } @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + \" \" + if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + \" calc(\" + $min-width + if($value < 0, \" - \", \" + \") + $variable-width + \")\";\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluid-val: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluid-val {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluid-val);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule () {\n        #{$property}: if($rfs-mode == max-media-query, $fluid-val, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n","/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */\n@use 'sass:math';\n\n@import 'variables';\n@import 'vertical-rhythm';\n\n// If we've customized any font variables, we'll need extra properties.\n@if $normalize-vertical-rhythm==null and\n  (\n    $base-line-height\n      !=24px or\n      $base-unit !=\n      'em' or\n      $h2-font-size\n      !=1.5 *\n      $base-font-size or\n      $h3-font-size\n      !=1.17 *\n      $base-font-size or\n      $h4-font-size\n      !=1 *\n      $base-font-size or\n      $h5-font-size\n      !=.83 *\n      $base-font-size or\n      $h6-font-size\n      !=.67 *\n      $base-font-size\n  )\n{\n  $normalize-vertical-rhythm: true;\n}\n\n$normalize-vertical-rhythm: true;\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  @if $base-font-family {\n    /* Change the default font family in all browsers (opinionated). */\n    font-family: $base-font-family;\n  }\n\n  @if $base-font-size !=16px or $normalize-vertical-rhythm {\n    // Correct old browser bug that prevented accessible resizing of text\n    // when root font-size is set with px or em.\n    font-size: math.div($base-font-size, 16px) * 100%;\n  }\n\n  @if $normalize-vertical-rhythm {\n    // Establish a vertical rhythm unit using $base-font-size and\n    // $base-line-height variables.\n    line-height: math.div($base-line-height, $base-font-size) * 1em;\n\n    /* 1 */\n  } @else {\n    line-height: 1.15;\n\n    /* 1 */\n  }\n\n  text-size-adjust: 100%;\n\n  /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  @include normalize-font-size($h1-font-size);\n\n  @if $normalize-vertical-rhythm {\n    @include normalize-line-height($h1-font-size);\n  }\n\n  @if $normalize-vertical-rhythm {\n    /* Set 1 unit of vertical rhythm on the top and bottom margins. */\n    @include normalize-margin(1 0, $h1-font-size);\n  } @else {\n    margin: 0.67em 0;\n  }\n}\n\n@if $normalize-vertical-rhythm {\n  h2 {\n    @include normalize-font-size($h2-font-size);\n    @include normalize-line-height($h2-font-size);\n    @include normalize-margin(1 0, $h2-font-size);\n  }\n\n  h3 {\n    @include normalize-font-size($h3-font-size);\n    @include normalize-line-height($h3-font-size);\n    @include normalize-margin(1 0, $h3-font-size);\n  }\n\n  h4 {\n    @include normalize-font-size($h4-font-size);\n    @include normalize-line-height($h4-font-size);\n    @include normalize-margin(1 0, $h4-font-size);\n  }\n\n  h5 {\n    @include normalize-font-size($h5-font-size);\n    @include normalize-line-height($h5-font-size);\n    @include normalize-margin(1 0, $h5-font-size);\n  }\n\n  h6 {\n    @include normalize-font-size($h6-font-size);\n    @include normalize-line-height($h6-font-size);\n    @include normalize-margin(1 0, $h6-font-size);\n  }\n}\n\n/* Grouping content\n   ========================================================================== */\n\n@if $normalize-vertical-rhythm {\n  /**\n   * Set 1 unit of vertical rhythm on the top and bottom margin.\n   */\n\n  blockquote {\n    @include normalize-margin(1 $indent-amount);\n  }\n\n  dl,\n  ol,\n  ul {\n    @include normalize-margin(1 0);\n  }\n\n  /**\n   * Turn off margins on nested lists.\n   */\n\n  ol,\n  ul {\n    ol,\n    ul {\n      margin: 0;\n    }\n  }\n\n  dd {\n    margin: 0 0 0 $indent-amount;\n  }\n\n  ol,\n  ul {\n    padding: 0 0 0 $indent-amount;\n  }\n\n  figure {\n    @include normalize-margin(1 $indent-amount);\n  }\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box;\n\n  /* 1 */\n  height: 0;\n\n  /* 1 */\n  overflow: visible;\n\n  /* 2 */\n}\n\n/**\n * Add the correct display in IE.\n */\n\nmain {\n  display: block;\n}\n\n@if $normalize-vertical-rhythm {\n  /**\n   * Set 1 unit of vertical rhythm on the top and bottom margin.\n   */\n\n  p,\n  pre {\n    @include normalize-margin(1 0);\n  }\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\n%monospace {\n  font-family: monospace, monospace;\n\n  /* 1 */\n  font-size: 1em;\n\n  /* 2 */\n}\n\npre {\n  @extend %monospace;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  /* 1 */\n  text-decoration: underline;\n\n  /* 2 */\n  text-decoration: underline dotted;\n  border-bottom: none;\n\n  /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\ncode,\nkbd,\nsamp {\n  @extend %monospace;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  position: relative;\n  font-size: 75%;\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known issues:\n * - `select`:\n *   By default, Chrome on OS X and Safari on OS X allow very limited styling of\n *   select, unless a border property is set. The default font weight on\n *   optgroup elements cannot safely be changed in Chrome on OSX and Safari on\n *   OS X.\n * - `[type=\"checkbox\"]`:\n *   It is recommended that you do not style checkbox and radio inputs as\n *   Firefox's implementation does not respect box-sizing, padding, or width.\n * - `[type=\"number\"]`:\n *   Certain font size values applied to number inputs cause the cursor style of\n *   the decrement button to change from `default` to `text`.\n * - `[type=\"search\"]`:\n *   The search input is not fully stylable by default. In Chrome and Safari on\n *   OSX/iOS you can't control `font`, `padding`, `border`, or `background`. In\n *   Chrome and Safari on Windows you can't control `border` properly. It will\n *   apply `border-width` but will only show a border color (which cannot be\n *   controlled) for the outer 1px of that border. Applying\n *   `-webkit-appearance: textfield` addresses these issues without removing the\n *   benefits of search inputs (e.g. showing past searches). Safari (but not\n *   Chrome) will clip the cancel button on when it has padding (and `textfield`\n *   appearance).\n * - `::placeholder`:\n *   In Edge, placeholders will disappear on `relative` or `absolute` positioned\n *   `<input>` elements if you use `opacity` less than `1` due to a\n *   [bug](https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/3901363/).\n */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  @if $normalize-vertical-rhythm {\n    @include normalize-line-height($base-font-size);\n\n    /* 1 */\n  } @else {\n    line-height: 1.15;\n\n    /* 1 */\n  }\n\n  /* 1 */\n  margin: 0;\n\n  font-family: inherit;\n\n  /* 1 */\n  font-size: 100%;\n\n  /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  appearance: button;\n}\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  /**\n   * Remove the inner border and padding in Firefox.\n   */\n\n  &::-moz-focus-inner {\n    padding: 0;\n    border-style: none;\n  }\n\n  /**\n   * Restore the focus styles unset by the previous rule.\n   */\n\n  &:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n}\n\n/**\n * Show the overflow in Edge.\n */\n\ninput {\n  overflow: visible;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n\n  /* 1 */\n  padding: 0;\n\n  /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type='number']::-webkit-inner-spin-button,\n[type='number']::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type='search'] {\n  appearance: textfield;\n\n  /* 1 */\n  outline-offset: -2px;\n\n  /* 2 */\n\n  /**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n\n  &::-webkit-search-decoration {\n    appearance: none;\n  }\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  /* 1 */\n  font: inherit;\n  appearance: button;\n\n  /* 2 */\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box;\n\n  /* 1 */\n  display: table;\n\n  /* 1 */\n  max-width: 100%;\n\n  /* 1 */\n  padding: 0;\n\n  /* 3 */\n  color: inherit;\n\n  /* 2 */\n  white-space: normal;\n\n  /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n@if $normalize-vertical-rhythm {\n  menu {\n    /*\n     * 1. Set 1 unit of vertical rhythm on the top and bottom margin.\n     * 2. Set consistent space for the list style image.\n     */\n\n    @include normalize-margin(1 0);\n\n    /* 1 */\n    padding: 0 0 0 $indent-amount;\n\n    /* 2 */\n\n    /**\n     * Turn off margins on nested lists.\n     */\n\n    menu &,\n    ol &,\n    ul & {\n      margin: 0;\n    }\n  }\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n","@use 'sass:math';\n\n//\n// Vertical Rhythm\n//\n// This is the minimal amount of code needed to create vertical rhythm in our\n// CSS. If you are looking for a robust solution, look at the excellent Typey\n// library. @see https://github.com/jptaranto/typey\n\n@function normalize-rhythm($value, $relative-to: $base-font-size, $unit: $base-unit) {\n  @if unit($value) != px {\n    @error \"The normalize vertical-rhythm module only supports px inputs. The typey library is better.\";\n  }\n  @if $unit == rem {\n    @return math.div($value, $base-font-size) * 1rem;\n  } @else if $unit == em {\n    @return math.div($value, $relative-to) * 1em;\n  } @else {\n    // $unit == px\n    @return $value;\n  }\n}\n\n@mixin normalize-font-size($value, $relative-to: $base-font-size) {\n  @if unit($value) != 'px' {\n    @error \"normalize-font-size() only supports px inputs. The typey library is better.\";\n  }\n  font-size: normalize-rhythm($value, $relative-to);\n}\n\n@mixin normalize-rhythm($property, $values, $relative-to: $base-font-size) {\n  $value-list: $values;\n  $sep: space;\n  @if type-of($values) == 'list' {\n    $sep: list-separator($values);\n  } @else {\n    $value-list: append((), $values);\n  }\n\n  $normalized-values: ();\n  @each $value in $value-list {\n    @if unitless($value) and $value != 0 {\n      $value: $value * normalize-rhythm($base-line-height, $relative-to);\n    }\n    $normalized-values: append($normalized-values, $value, $sep);\n  }\n  #{$property}: $normalized-values;\n}\n\n@mixin normalize-margin($values, $relative-to: $base-font-size) {\n  @include normalize-rhythm(margin, $values, $relative-to);\n}\n\n@mixin normalize-line-height($font-size, $min-line-padding: 2px) {\n  $lines: ceil(math.div($font-size, $base-line-height));\n  // If lines are cramped include some extra leading.\n  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n    $lines: $lines + 1;\n  }\n  @include normalize-rhythm(line-height, $lines, $font-size);\n}\n","// scss-lint:disable QualifyingElement, DuplicateProperty\n\n// KICK OFF | This is the first file that starts the library off on the right foot.\n\n//\n// HTML (element)\n//\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  font-size: $font-size-base; // makes 1 rem a base 10 multiple\n\n  @include media-breakpoint-down(xs) {\n    font-size: $font-size-sm; // makes 1 rem a base 8 multiple\n  }\n}\n\n//\n// Body\n//\nbody {\n  font-size: $font-size-base;\n  font-weight: $font-weight-base;\n  color: $text;\n  background-color: $body;\n  margin: 0;\n  padding: 0;\n}\n\n//\n// Links\n//\n\na {\n  color: $link-color;\n  text-decoration: $link-decoration;\n\n  @include hover {\n    color: $link-hover;\n    text-decoration: $link-hover-decoration;\n  }\n}\n\nb,\nstrong {\n  font-weight: $font-weight-bold;\n}\n\n//\n// Typography\n//\n\n// Remove top margins from headings\n//\n// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top\n// margin for easier control within type scales as it avoids margin collapsing.\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n}\n","// Shards variables\n$variable-prefix: bs-; // Deprecated in v5.2.0 for the shorter `$prefix`\n$prefix: $variable-prefix;\n$debug: true;\n\n$font-path: \"/fonts/\";\n$icon-prefix: mi;\n$icon-size: 24px;\n\n// $superclass: \"mojo\";\n$superclass: false;\n\n// scss-docs-start theme-text-variables\n$primary-text-emphasis: shade-color($primary, 60%);\n$secondary-text-emphasis: shade-color($secondary, 60%);\n$success-text-emphasis: shade-color($success, 60%);\n$info-text-emphasis: shade-color($info, 60%);\n$warning-text-emphasis: shade-color($warning, 60%);\n$danger-text-emphasis: shade-color($danger, 60%);\n$light-text-emphasis: $gray-700;\n$dark-text-emphasis: $gray-700;\n// scss-docs-end theme-text-variables\n\n// scss-docs-start theme-bg-subtle-variables\n$primary-bg-subtle: tint-color($primary, 80%);\n$secondary-bg-subtle: tint-color($secondary, 80%);\n$success-bg-subtle: tint-color($success, 80%);\n$info-bg-subtle: tint-color($info, 80%);\n$warning-bg-subtle: tint-color($warning, 80%);\n$danger-bg-subtle: tint-color($danger, 80%);\n$light-bg-subtle: mix($gray-100, $white);\n$dark-bg-subtle: $gray-400;\n// scss-docs-end theme-bg-subtle-variables\n\n// scss-docs-start theme-border-subtle-variables\n$primary-border-subtle: tint-color($primary, 60%);\n$secondary-border-subtle: tint-color($secondary, 60%);\n$success-border-subtle: tint-color($success, 60%);\n$info-border-subtle: tint-color($info, 60%);\n$warning-border-subtle: tint-color($warning, 60%);\n$danger-border-subtle: tint-color($danger, 60%);\n$light-border-subtle: $gray-200;\n$dark-border-subtle: $gray-500;\n// scss-docs-end theme-border-subtle-variables\n\n$min-contrast-ratio: 4.5;\n\n// Customize the light and dark text colors for use in our color contrast function.\n$color-contrast-dark: $dark;\n$color-contrast-light: $light;\n\n// Set a specific jump point for requesting color jumps\n$theme-color-interval: 8%;\n\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\n$yiq-contrasted-threshold: 150;\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark: $gray-900;\n$yiq-text-light: $white;\n\n// Options\n//\n// Quickly modify global styling by enabling or disabling optional features.\n\n$enable-rounded: true;\n$enable-shadows: true;\n$enable-gradients: false; // Not supported by Shards.\n$enable-transitions: true;\n$enable-hover-media-query: false; // Deprecated, no longer affects any compiled CSS\n$enable-fonts-import: true;\n$enable-caret: true;\n\n$enable-reduced-motion: true;\n$enable-smooth-scroll: true;\n$enable-grid-classes: true;\n$enable-container-classes: true;\n$enable-cssgrid: false;\n$enable-button-pointers: true;\n$enable-rfs: true;\n$enable-validation-icons: true;\n$enable-negative-margins: false;\n$enable-deprecation-messages: true;\n$enable-important-utilities: true;\n$enable-display-sizes: true;\n\n$enable-dark-mode: false; // dark is the new default\n$color-mode-type: data; // `data` or `media-query`\n\n// TODO: add $enable-light-mode: true; functionality\n\n// Forms\n\n$border-color: #becad6;\n$input-frozen-color: #abb6bf;\n\n// Spacing\n\n$spacer: 1.5rem; // ~ 24px\n\n// Body\n\n$body-bg: $body;\n$body-color: $text;\n\n// Links\n$link-decoration: none;\n$link-hover-decoration: none;\n\n// Grid breakpoints\n\n$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px,\n  xxl: 1400px,\n);\n\n@include _assert-ascending($grid-breakpoints, \"$grid-breakpoints\");\n@include _assert-starts-at-zero($grid-breakpoints);\n\n// Grid containers\n//\n// Define the maximum width of `.container` for different screen sizes.\n\n$container-max-widths: (\n  sm: 540px,\n  md: 720px,\n  lg: 960px,\n  xl: 1140px,\n  xxl: 1320px,\n);\n\n@include _assert-ascending($container-max-widths, \"$container-max-widths\");\n\n$grid-columns: 12;\n$grid-gutter-width: 1.5rem;\n$grid-row-columns: 6;\n$container-padding-x: $grid-gutter-width;\n$break-point-limit: \"medium\";\n$tile-spacing: 0.75rem;\n\n// Components\n\n$line-height-lg: 1.5;\n$line-height-sm: 1.5;\n\n$border-width: 0.0625rem;\n$border-width-lg: 0.188rem;\n$border-width-sm: 0.031rem;\n\n$border-radius: 0.375rem;\n$border-radius-lg: 0.5rem;\n$border-radius-sm: 0.35rem;\n$border-radius-xl: 1rem;\n$border-radius-2xl: 2rem;\n$border-radius-pill: 50rem;\n\n$border-style: solid;\n$border-color: $gray-700;\n$border-color-translucent: rgba($gray-700, 0.175);\n$enable-angled-edges: true;\n$angle-edge-size: 3;\n\n$hr-margin-y: $spacer;\n$hr-color: inherit;\n$hr-border-color: null; // Allows for inherited colors\n$hr-border-width: $border-width;\n$hr-opacity: 0.25;\n\n$box-shadow: 0 0.5rem 1rem rgba($dark, 0.15);\n$box-shadow-sm: 0 0.125rem 0.25rem rgba($dark, 0.075);\n$box-shadow-lg: 0 1rem 3rem rgba($dark, 0.175);\n$box-shadow-inset: inset 0 1px 2px rgba($dark, 0.075);\n\n$component-active-color: $white;\n$component-active-bg: theme-color(\"primary\");\n\n// Easings\n$ease-in-out-circ: cubic-bezier(0.27, 0.01, 0.38, 1.06);\n\n// Transitions\n$transition-duration: 250ms;\n$transition-base: all $transition-duration $ease-in-out-circ;\n$transition-fade: opacity 200ms ease-in-out;\n$transition-collapse: height 350ms ease-in-out;\n$transition-move: 420ms $ease-in-out-circ;\n\n// Harmony\n$modular-ratio: $MAJOR_THIRD;\n$line-height-base: 1.5;\n$block-spacing: 1.5rem;\n$vertical-unit: 0.5rem;\n$main-unit: rem;\n$main-indent: 0.24rem;\n$spacers: (\n  0: 0,\n  1: $spacer * 0.25,\n  2: $spacer * 0.5,\n  3: $spacer,\n  4: $spacer * 1.5,\n  5: $spacer * 3,\n);\n$gutters: $spacers;\n\n$font-sizes: (\n  xs: 0.875rem,\n  // 14px\n  sm: 1rem,\n  // 16px\n  md: 1.25rem,\n  // 30px\n  lg: 1.5rem,\n  // 24px\n  xl: 2rem,\n  // 32px\n);\n\n$font-line-sizes: (\n  xs: map.get($font-sizes, \"xs\") * $line-height-base,\n  sm: map.get($font-sizes, \"sm\") * $line-height-base,\n  md: map.get($font-sizes, \"md\") * $line-height-base,\n  lg: map.get($font-sizes, \"lg\") * $line-height-base,\n  xl: map.get($font-sizes, \"xl\") * $line-height-base,\n);\n\n//\n// Title, Subtitle, Display Font Variables\n//\n\n$title-size: 3.5rem;\n$title-weight: 700;\n$title-strong-weight: inherit;\n\n$subtitle-size: 2rem;\n$subtitle-weight: 400;\n$subtitle-strong-weight: 500;\n\n$display-font-family: null;\n$display-font-style: null;\n$display-font-weight: 300;\n$display-line-height: 1.2;\n\n$display-font-sizes: if(\n  $enable-display-sizes,\n  (\n    1: 5rem,\n    2: 4.5rem,\n    3: 4rem,\n    4: 3.5rem,\n    5: 3rem,\n    6: 2.5rem,\n  ),\n  null\n);\n\n// Fonts\n// TODO: sort out the font variables!!!\n$google-fonts-import: \"https://fonts.googleapis.com/css?family=Poppins:300,400,500,600|Roboto+Mono\"; // Includes: Poppins: Light, Regular, Medium, Semi-bold; Roboto Mono: Regular\n\n$font-family-poppins-first: \"Poppins\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial,\n  sans-serif;\n$font-family-system-first: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n$font-family-roboto-mono-first: \"Roboto Mono\", Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n\n$font-family-sans-serif: $font-family-system-first;\n$font-family-monospace: $font-family-roboto-mono-first;\n$font-family-base: $font-family-sans-serif;\n\n// $font-family-base: \"Jost\";\n// $font-family-code: \"Space Mono\";\n\n// Typography Variables\n// ============================================================================\n// TODO: sort out the heading variables!!!\n$font-weight-base: $font-weight-normal;\n\n$font-size-root: strip-units(map.get($font-sizes, \"sm\"));\n$font-size-base: map.get($font-sizes, \"sm\");\n$font-size-lg: map.get($font-sizes, \"lg\");\n$font-size-sm: map.get($font-sizes, \"xs\");\n\n$font-weight-lighter: lighter;\n$font-weight-light: 300;\n$font-weight-normal: 400;\n$font-weight-medium: 500;\n$font-weight-semibold: 600;\n$font-weight-bold: 700;\n$font-weight-bolder: bolder;\n\n$font-weight-base: $font-weight-normal;\n\n$h1-font-size: $font-size-base * 2.5;\n$h2-font-size: $font-size-base * 2;\n$h3-font-size: $font-size-base * 1.75;\n$h4-font-size: $font-size-base * 1.5;\n$h5-font-size: $font-size-base * 1.25;\n$h6-font-size: $font-size-base;\n\n$font-sizes: (\n  1: $h1-font-size,\n  2: $h2-font-size,\n  3: $h3-font-size,\n  4: $h4-font-size,\n  5: $h5-font-size,\n  6: $h6-font-size,\n);\n\n$font-weight-normal: 400;\n$font-weight-bold: 700;\n\n$font-weight-base: $font-weight-normal;\n\n$h1-font-size: 3.052rem;\n$h2-font-size: 2.441rem;\n$h3-font-size: 1.953rem;\n$h4-font-size: 1.563rem;\n$h5-font-size: 1.25rem;\n$h6-font-size: 1rem;\n\n$headings-margin-bottom: 0.75rem;\n\n$headings-font-family: $font-family-poppins-first;\n$headings-font-weight: 400;\n$headings-color: $light;\n$headings-letter-spacing: -0.0625rem; // ~1px\n\n$h1-line-height: 3rem;\n$h2-line-height: 2.25rem;\n$h3-line-height: 2.25rem;\n$h4-line-height: 2rem;\n$h5-line-height: 1.5rem;\n$h6-line-height: 1.5rem;\n\n$display1-size: 7.451rem;\n$display2-size: 5.96rem;\n$display3-size: 4.768rem;\n$display4-size: 3.815rem;\n\n$display-line-height: 1;\n$display-margin-bottom: 0.75rem;\n\n$paragraphs-margin-bottom: 1.75rem;\n\n$lead-line-height: 1.875rem;\n\n$small-font-size: 80%;\n\n$text-muted: $gray-600;\n\n$blockquote-font-size: 1.5rem;\n$blockquote-footer-font-size: 1.125rem;\n$blockquote-margin-bottom: 0.75rem;\n\n$hr-border-color: rgba($dark, 0.1);\n$hr-border-width: $border-width;\n$hr-margin-y: 1.125rem;\n\n$mark-padding: 0.2em;\n$mark-bg: #fff09e;\n\n// Accordions\n$accordion-max-height: 20rem;\n$transition-color: #3f3f3f;\n\n// Tables\n//\n// Customizes the `.table` component with basic values, each used across all table variations.\n$table-color: $light;\n$table-bg: $black;\n$table-active-bg: rgba($primary, 0.075);\n$table-striped-bg: rgba($dark, 0.075);\n$table-hover-bg: rgba($dark, 0.075);\n$table-cell-padding: 0.75rem;\n$table-cell-padding-sm: 0.3rem;\n\n$table-dark-color: $body-bg;\n$table-dark-bg: $gray-900;\n$table-dark-border-color: lighten($gray-900, 7.5%);\n$table-dark-accent-bg: rgba($light, 0.05);\n$table-dark-hover-bg: rgba($light, 0.075);\n\n$table-head-color: $gray-700;\n$table-head-bg: $gray-200;\n$table-border-color: $gray-300;\n\n// Buttons\n//\n// For each of Bootstrap's buttons, define text, background and border color.\n\n$btn-padding-y-lg: 0.75rem;\n$btn-padding-x-lg: 1.75rem;\n\n$btn-line-height-sm: $line-height-sm;\n$btn-line-height-lg: $line-height-lg;\n\n$btn-padding-y-sm: 0.35rem;\n$btn-padding-x-sm: 1rem;\n\n$input-btn-padding-y: 0.5rem;\n$input-btn-padding-x: 1rem;\n$input-btn-line-height: 1.125;\n\n$input-btn-padding-y-sm: 0.35rem;\n$input-btn-padding-x-sm: 0.75rem;\n\n$input-btn-padding-y-lg: 0.75rem;\n$input-btn-padding-x-lg: 1rem;\n\n$btn-pill-border-radius: 50px;\n\n$btn-padding-y: 0.75rem;\n$btn-padding-x: 1.25rem;\n\n$btn-font-weight: $font-weight-normal;\n$btn-font-size: 0.875rem;\n$btn-font-size-sm: 0.75rem;\n$btn-font-size-lg: 1.125rem;\n$btn-font-family: $font-family-poppins-first;\n$btn-box-shadow: none;\n\n$input-btn-focus-width: 0.2rem;\n\n$btn-active-box-shadow: inset 0 3px 5px rgba($black, 0.125);\n\n$btn-link-disabled-color: $gray-600;\n$btn-block-spacing-y: 0.5rem;\n\n// Allows for customizing button radius independently from global border radius\n$btn-border-radius: $border-radius;\n$btn-border-radius-lg: $border-radius-lg;\n$btn-border-radius-sm: $border-radius-sm;\n\n$btn-border-width: 1px;\n\n// $btn-transition: $transition-base;\n$btn-transition: \"all 180ms linear\";\n// Forms\n\n$input-padding-y: $input-btn-padding-y;\n$input-padding-x: $input-btn-padding-x;\n$input-line-height: 1.5;\n\n$input-padding-y-sm: $input-btn-padding-y-sm;\n$input-padding-x-sm: $input-btn-padding-x-sm;\n$input-line-height-sm: 1.5;\n\n$input-padding-y-lg: $input-btn-padding-y-lg;\n$input-padding-x-lg: $input-btn-padding-x-lg;\n$input-line-height-lg: 1.5;\n\n$input-bg: $white;\n$input-disabled-bg: #f5f6f7;\n$input-color: $body-color;\n$input-border-color: #becad6;\n$input-box-shadow: $box-shadow-inset;\n$input-border-radius: $border-radius;\n$input-border-radius-sm: $border-radius-sm;\n$input-border-radius-lg: $border-radius-lg;\n\n$input-font-size: 0.95rem;\n\n$input-color: $gray-700;\n$input-border-color: $border-color;\n$input-btn-border-width: $border-width;\n$input-box-shadow: none;\n\n$input-border-width: $border-width;\n$input-border-radius: $border-radius;\n$input-border-radius-lg: $border-radius-lg;\n$input-border-radius-sm: $border-radius-sm;\n\n$input-focus-bg: $input-bg;\n$input-focus-border-color: theme-color(\"primary\");\n$input-focus-box-shadow: 0 0.313rem 0.719rem rgba(theme-color(\"primary\"), 0.1), 0 0.156rem 0.125rem rgba($black, 0.06);\n$input-focus-color: $input-color;\n\n$input-hover-border-color: darken(#becad6, 15);\n\n$input-placeholder-color: $gray-600;\n\n$input-height-border: $input-border-width * 2;\n\n$input-height-inner: calc($input-font-size * $input-line-height) + calc($input-padding-y * 2);\n$input-height: calc(#{$input-height-inner} + #{$input-height-border});\n\n$input-height-inner-sm: calc($font-size-sm * $input-line-height-sm) + calc($input-padding-y-sm * 2);\n$input-height-sm: calc(#{$input-height-inner-sm} + #{$input-height-border});\n\n$input-height-inner-lg: calc($font-size-lg * $input-line-height-lg) + calc($input-padding-y-lg * 2);\n$input-height-lg: calc(#{$input-height-inner-lg} + #{$input-height-border});\n\n$input-transition: box-shadow $transition-duration $ease-in-out-circ, border $transition-duration $ease-in-out-circ;\n\n$form-text-margin-top: 0.25rem;\n\n$form-check-input-gutter: 1.25rem;\n$form-check-input-margin-y: 0.313rem;\n$form-check-input-margin-x: 0.313rem;\n\n$form-check-inline-margin-x: 0.75rem;\n$form-check-inline-input-margin-x: 0.3125rem;\n\n$form-group-margin-bottom: 1rem;\n\n$input-group-padding-y: 12px;\n$input-group-padding-x: 14px;\n$input-group-addon-bg: lighten($input-border-color, 19%);\n$input-group-addon-border-color: $input-border-color;\n$input-group-addon-color: $input-frozen-color;\n\n$custom-control-gutter: 1.688rem;\n$custom-control-spacer-x: 1rem;\n\n$custom-control-indicator-size: 1.125rem;\n$custom-control-indicator-bg: $white;\n$custom-control-indicator-bg-size: 50% 50%;\n$custom-control-indicator-box-shadow: none;\n$custom-control-indicator-border: 1px solid $border-color;\n$custom-checkbox-indicator-transition: transform $transition-duration $ease-in-out-circ,\n  border $transition-duration $ease-in-out-circ;\n\n$custom-control-indicator-disabled-bg: $gray-200;\n$custom-control-description-disabled-color: $gray-600;\n\n$custom-control-indicator-checked-color: $white;\n$custom-control-indicator-checked-bg: theme-color(\"primary\");\n$custom-control-indicator-checked-box-shadow: none;\n\n$custom-control-indicator-focus-box-shadow: $input-focus-box-shadow;\n\n$custom-control-indicator-active-color: $white;\n$custom-control-indicator-active-bg: lighten(theme-color(\"primary\"), 35%);\n$custom-control-indicator-active-box-shadow: none;\n\n// Custom checkbox\n$custom-checkbox-indicator-border-radius: 2px;\n$custom-checkbox-indicator-icon-checked: none;\n$custom-checkbox-indicator-indeterminate-bg: theme-color(\"primary\");\n$custom-checkbox-indicator-indeterminate-color: $custom-control-indicator-checked-color;\n$custom-checkbox-indicator-icon-indeterminate: none;\n$custom-checkbox-indicator-indeterminate-box-shadow: none;\n\n// Custom radio\n$custom-radio-indicator-border-radius: 50%;\n\n// Custom select\n$custom-select-padding-y: 0.375rem;\n$custom-select-padding-x: 0.75rem;\n$custom-select-height: $input-height; // OK\n$custom-select-indicator-padding: 1rem; // Extra padding to account for the presence of the background-image based indicator\n$custom-select-line-height: 1.2;\n$custom-select-color: $input-color;\n$custom-select-disabled-color: $gray-600;\n$custom-select-bg: $white;\n$custom-select-disabled-bg: $gray-200;\n$custom-select-bg-size: 8px 10px; // In pixels because image dimensions\n$custom-select-indicator-color: #333;\n$custom-select-indicator: str-replace(\n  url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E\"),\n  \"#\",\n  \"%23\"\n);\n$custom-select-border-width: $input-btn-border-width;\n$custom-select-border-color: $input-border-color;\n$custom-select-border-radius: $border-radius;\n\n$custom-select-focus-border-color: $input-focus-border-color;\n$custom-select-focus-box-shadow: 0 0.313rem 0.719rem rgba(theme-color(\"primary\"), 0.1),\n  0 0.156rem 0.125rem rgba($black, 0.06);\n\n$custom-select-font-size-sm: 0.75rem;\n$custom-select-height-sm: $input-height-sm;\n\n$custom-select-height-lg: $input-height-lg;\n$custom-select-font-size-lg: 1.25rem;\n\n$custom-file-height: calc(2.428rem + 2px);\n$custom-file-width: 14rem;\n$custom-file-focus-box-shadow: $input-focus-box-shadow;\n$custom-file-focus-border-color: $input-focus-border-color;\n\n$custom-file-padding-y: 1rem;\n$custom-file-padding-x: 0.5rem;\n$custom-file-line-height: 1.5;\n$custom-file-color: $gray-700;\n$custom-file-bg: $white;\n$custom-file-border-width: $border-width;\n$custom-file-border-color: $input-border-color;\n$custom-file-border-radius: $border-radius;\n$custom-file-box-shadow: none;\n$custom-file-button-color: $custom-file-color;\n$custom-file-button-bg: $gray-200;\n$custom-file-text: (\n  en: \"Browse\",\n);\n\n// Custom switches (core)\n$custom-switch-padding-left: 2.25rem;\n\n// Form validation\n$form-feedback-margin-top: $form-text-margin-top;\n$form-feedback-font-size: $small-font-size;\n$form-feedback-valid-color: theme-color(\"success\");\n$form-feedback-invalid-color: theme-color(\"danger\");\n\n// Custom toggle\n$custom-toggle-width: 3.125rem;\n$custom-toggle-height: 1.75rem;\n$custom-toggle-border-width: 0.0625rem;\n$custom-toggle-border: $custom-toggle-border-width solid $input-border-color;\n$custom-toggle-background-color: $white;\n$custom-toggle-border-radius: 100px;\n\n$custom-toggle-focus-box-shadow: 0 0.313rem 0.719rem rgba(theme-color(\"success\"), 0.1),\n  0 0.156rem 0.125rem rgba($black, 0.06);\n\n$custom-toggle-checked-background: theme-color(\"success\");\n$custom-toggle-checked-border-color: $custom-toggle-checked-background;\n$custom-toggle-checked-knob-background: $white;\n\n$custom-toggle-knob-width: 1.25rem;\n$custom-toggle-knob-height: 1.25rem;\n$custom-toggle-knob-border-radius: 6.25rem;\n$custom-toggle-knob-active-width: 1.625rem;\n\n$custom-toggle-invalid-knob-background-color: #eb8c95;\n$custom-toggle-invalid-background-color: $white;\n\n$custom-toggle-width-sm: 2.1875rem;\n$custom-toggle-height-sm: 1.125rem;\n\n$custom-toggle-knob-width-sm: 0.75rem;\n$custom-toggle-knob-active-width-sm: 1rem;\n$custom-toggle-knob-height-sm: 0.75rem;\n\n// Form validation\n$form-feedback-valid-color: theme-color(\"success\");\n$form-feedback-invalid-color: theme-color(\"danger\");\n\n// Dropdowns\n//\n// Dropdown menu container and contents.\n\n$dropdown-bg: $white;\n$dropdown-min-width: 10rem;\n$dropdown-padding-y: 0.5rem;\n$dropdown-spacer: 0;\n$dropdown-border-color: rgba($black, 0.05);\n$dropdown-border-width: $border-width;\n$dropdown-divider-bg: $gray-200;\n$dropdown-border-radius: $border-radius;\n\n$dropdown-box-shadow: 0 0.5rem 4rem rgba(0, 0, 0, 0.11), 0 10px 20px rgba(0, 0, 0, 0.05), 0 2px 3px rgba(0, 0, 0, 0.06);\n\n$dropdown-link-color: $gray-900;\n$dropdown-link-hover-color: darken($gray-900, 5%);\n$dropdown-link-hover-bg: lighten($dark, 55%);\n$dropdown-link-active-color: $component-active-color;\n$dropdown-link-active-bg: lighten($dark, 40%);\n$dropdown-link-disabled-color: $gray-600;\n\n$dropdown-item-padding-y: 0.5rem;\n$dropdown-item-padding-x: 1.25rem;\n$dropdown-item-font-size: 0.9375rem;\n$dropdown-item-transition: background-color $transition-duration $ease-in-out-circ,\n  color $transition-duration $ease-in-out-circ;\n\n$dropdown-header-color: $gray-600;\n\n// Small dropdowns\n$dropdown-small-padding-y: 0.25rem;\n$dropdown-small-font-size: 0.813rem;\n$dropdown-small-box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.11), 0 3px 10px rgba(0, 0, 0, 0.05),\n  0 2px 3px rgba(0, 0, 0, 0.06);\n\n$dropdown-small-item-padding-y: 0.375rem;\n$dropdown-small-item-padding-x: 0.875rem;\n\n$dropdown-small-item-font-size: 0.813rem;\n\n$dropdown-small-divider-margin-x: 0;\n$dropdown-small-divider-margin-y: 0.25rem;\n\n// Z-index master list\n// Warning: Avoid customizing these values. They're used for a bird's eye view\n// of components dependent on the z-axis and are designed to all work together.\n\n$zindex-dropdown: 1000;\n$zindex-sticky: 1020;\n$zindex-fixed: 1030;\n$zindex-modal-backdrop: 1040;\n$zindex-modal: 1050;\n$zindex-popover: 1060;\n$zindex-tooltip: 1070;\n\n// Navs\n$navbar-height: 3.75rem;\n\n$nav-transition: $transition-base;\n$nav-font-family: $font-family-poppins-first;\n\n$nav-link-padding-y: 0.625rem;\n$nav-link-padding-x: 1.125rem;\n$nav-link-disabled-color: $gray-600;\n\n$nav-tabs-border-color: lighten($dark, 45%);\n$nav-tabs-border-width: $border-width;\n$nav-tabs-border-radius: $border-radius;\n$nav-tabs-link-hover-border-color: $gray-200;\n$nav-tabs-link-active-color: $gray-700;\n$nav-tabs-link-active-bg: $body-bg;\n$nav-tabs-link-active-border-color: #ddd;\n\n$nav-pills-border-radius: $border-radius;\n$nav-pills-link-active-color: $component-active-color;\n$nav-pills-link-active-bg: $component-active-bg;\n\n// Navbar nav\n$navbar-nav-link-padding-x: 0.625rem;\n\n// Navbar\n\n$navbar-padding-y: calc($spacer / 2);\n$navbar-padding-x: $spacer;\n\n$navbar-brand-font-size: 1rem;\n$navbar-icon-size: 1rem;\n\n$navbar-sidebar-width: 300px;\n\n// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link\n$nav-link-height: $navbar-brand-font-size * $line-height-base;\n$navbar-brand-height: ($font-size-base * $line-height-base + $nav-link-padding-y * 2);\n$navbar-brand-padding-y: calc(($navbar-brand-height - $nav-link-height) / 2);\n\n$navbar-font-family: $font-family-poppins-first;\n$navbar-toggler-padding-y: 0.5rem;\n$navbar-toggler-padding-x: 0.5rem;\n$navbar-toggler-font-size: 1rem;\n$navbar-toggler-border-radius: $btn-border-radius;\n\n$navbar-dark-color: rgba($white, 0.5);\n$navbar-dark-hover-color: rgba($white, 0.75);\n$navbar-dark-active-color: rgba($white, 1);\n$navbar-dark-disabled-color: rgba($white, 0.25);\n$navbar-dark-toggler-icon-bg: str-replace(\n  url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-dark-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\"),\n  \"#\",\n  \"%23\"\n);\n$navbar-dark-toggler-border-color: rgba($white, 0.1);\n\n$navbar-light-color: $gray-200;\n$navbar-light-hover-color: rgba($navbar-light-color, 0.7);\n$navbar-light-active-color: rgba($navbar-light-color, 0.9);\n$navbar-light-disabled-color: rgba($navbar-light-color, 0.3);\n$navbar-light-toggler-icon-bg: str-replace(\n  url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\"),\n  \"#\",\n  \"%23\"\n);\n$navbar-light-toggler-border-color: rgba($navbar-light-color, 0.1);\n\n// Pagination\n\n$pagination-padding-y: 0.5rem;\n$pagination-padding-x: 0.75rem;\n$pagination-padding-y-sm: 0.25rem;\n$pagination-padding-x-sm: 0.6875rem;\n$pagination-padding-y-lg: 0.9375rem;\n$pagination-padding-x-lg: 1.5625rem;\n$pagination-line-height: 1.25;\n$pagination-font-family: $font-family-poppins-first;\n$pagination-font-size: 0.875rem;\n$pagination-box-shadow: 0 0.125rem 0.9375rem rgba($dark, 0.1), 0 0.125rem 0.1875rem rgba($dark, 0.15);\n\n$pagination-color: $link-color;\n$pagination-bg: $white;\n\n$pagination-hover-color: $link-hover;\n$pagination-hover-bg: lighten($dark, 58%);\n$pagination-hover-border-color: lighten($dark, 50%);\n\n$pagination-active-color: $white;\n$pagination-active-bg: theme-color(\"primary\");\n$pagination-active-border-color: theme-color(\"primary\");\n\n$pagination-disabled-color: lighten($dark, 30%);\n$pagination-disabled-bg: $white;\n$pagination-disabled-border-color: lighten($dark, 50%);\n\n// Cards\n\n$card-spacer-y: 2.1875rem;\n$card-spacer-x: 1.875rem;\n\n$card-header-spacer-x: $card-spacer-x;\n$card-header-spacer-y: calc($card-spacer-y / 2);\n\n$card-footer-spacer-x: $card-spacer-x;\n$card-footer-spacer-y: calc($card-spacer-y / 2);\n\n$card-border-radius: 0.625rem;\n$card-inner-border-radius: $card-border-radius;\n\n$card-cap-bg: rgba($dark, 0.6);\n$card-bg: $gray-200;\n\n$card-title-font-weight: 500;\n$card-title-margin-bottom: 0.75rem;\n\n$card-link-font-family: $font-family-poppins-first;\n\n$card-paragraph-margin-bottom: 1.5625rem;\n\n$card-box-shadow: 0 0.46875rem 2.1875rem rgba($dark, 0.1), 0 0.9375rem 1.40625rem rgba($dark, 0.1),\n  0 0.25rem 0.53125rem rgba($dark, 0.12), 0 0.125rem 0.1875rem rgba($dark, 0.1);\n\n$card-img-overlay-padding: 1.875rem 2.1875rem;\n$card-deck-margin: 0.9375rem;\n\n$card-list-group-item-padding: 0.8125rem 1.875rem;\n$card-group-card-border: 1px solid lighten($dark, 53%);\n\n$card-columns-count: 3;\n$card-columns-gap: 1.25rem;\n$card-columns-margin: $card-spacer-y;\n\n$card-small-spacer-y: 1rem;\n$card-small-spacer-x: 1rem;\n$card-small-box-shadow: 0 2px 0 rgba($dark, 0.11), 0 4px 8px rgba($dark, 0.12), 0 10px 10px rgba($dark, 0.06),\n  0 7px 70px rgba($dark, 0.1);\n\n// Tooltips\n\n$tooltip-max-width: 200px;\n$tooltip-color: $dark;\n$tooltip-bg: $white;\n$tooltip-opacity: 1;\n$tooltip-padding-y: 7px;\n$tooltip-padding-x: 13px;\n$tooltip-margin: 0;\n$tooltip-font-size: $font-size-sm;\n$tooltip-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n$tooltip-arrow-width: 5px;\n$tooltip-arrow-height: 5px;\n$tooltip-arrow-color: $tooltip-bg;\n\n// Popovers\n\n$popover-inner-padding: 0;\n$popover-bg: $white;\n$popover-max-width: 276px;\n$popover-border-radius: $border-radius-lg;\n$popover-border-width: $border-width;\n$popover-border-color: transparent;\n$popover-font-size: $font-size-sm;\n$popover-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n$popover-header-bg: lighten($dark, 58%);\n$popover-header-color: $headings-color;\n$popover-header-padding-y: 14px;\n$popover-header-padding-x: 20px;\n$popover-header-line-height: 14px;\n\n$popover-body-color: $body-color;\n$popover-body-padding-y: 15px;\n$popover-body-padding-x: 20px;\n\n$popover-arrow-width: 1rem;\n$popover-arrow-height: 0.3rem;\n$popover-arrow-color: $popover-bg;\n\n$popover-arrow-outer-width: $popover-arrow-width;\n$popover-arrow-outer-color: fade-in($popover-border-color, 0.05);\n\n// Badges\n\n$badge-color: $white;\n$badge-font-size: 75%;\n$badge-font-weight: $font-weight-bold;\n$badge-padding-y: 0.375rem;\n$badge-padding-x: 0.5rem;\n$badge-font-family: $font-family-system-first;\n$badge-pill-border-radius: 10rem;\n$badge-border-radius: 0.375rem;\n$badge-pill-padding-x: $badge-padding-x;\n\n// Modals\n\n// Padding applied to the modal body\n$modal-inner-padding: 1.875rem 2.1875rem;\n$modal-footer-padding: 0.9375rem 2.1875rem;\n\n$modal-dialog-margin: 0.625rem;\n$modal-dialog-margin-y-sm-up: 1.875rem;\n\n$modal-title-line-height: $line-height-base;\n\n$modal-content-bg: $white;\n$modal-content-border-width: $border-width;\n$modal-content-box-shadow: $card-box-shadow;\n\n$modal-backdrop-bg: $dark;\n$modal-backdrop-opacity: 0.12;\n$modal-header-border-color: lighten($dark, 50%);\n$modal-footer-border-color: lighten($dark, 50%);\n$modal-header-border-width: $modal-content-border-width;\n$modal-footer-border-width: $modal-header-border-width;\n\n$modal-header-padding: 0.9375rem 2.1875rem;\n\n$modal-lg: 800px;\n$modal-md: 500px;\n$modal-sm: 300px;\n\n$modal-transition: transform 0.3s ease-out;\n\n// Alerts\n\n$alert-padding-y: 0.75rem;\n$alert-padding-x: 1.25rem;\n$alert-margin-bottom: 1rem;\n$alert-border-radius: 0;\n$alert-link-font-weight: $font-weight-bold;\n\n// Progress bars\n\n$progress-height: 0.625rem;\n$progress-font-size: 0.625rem;\n$progress-bg: lighten($dark, 58%);\n$progress-border-radius: 1.25rem;\n$progress-box-shadow: inset 0 0.1rem 0.1rem rgba($dark, 0.15);\n$progress-bar-color: $white;\n$progress-bar-bg: theme-color(\"primary\");\n$progress-bar-animation-timing: 1s linear infinite;\n$progress-bar-transition: width 0.6s ease;\n$progress-label-font-size: 0.8125rem;\n$progress-sm-height: 0.3125rem;\n$progress-lg-height: 0.9375rem;\n\n// List group\n\n$list-group-bg: $white;\n$list-group-border-color: rgba($black, 0.125);\n$list-group-border-width: $border-width;\n$list-group-border-radius: $border-radius;\n$list-group-transition: $transition-base;\n\n$list-group-item-padding-y: 0.75rem;\n$list-group-item-padding-x: 1.25rem;\n$list-group-sm-item-padding-y: 0.625rem;\n$list-group-sm-item-padding-x: 1rem;\n\n$list-group-sm-item-font-size: 0.8125rem;\n\n$list-group-hover-bg: lighten($dark, 59%);\n$list-group-active-color: $component-active-color;\n$list-group-active-bg: $component-active-bg;\n$list-group-active-border-color: $list-group-active-bg;\n\n$list-group-disabled-color: $gray-300;\n$list-group-disabled-bg: $list-group-bg;\n\n$list-group-action-color: $dark;\n$list-group-action-hover-color: $list-group-action-color;\n\n$list-group-action-active-color: $body-color;\n$list-group-action-active-bg: lighten($dark, 55%);\n\n// Image thumbnails\n$thumbnail-bg: $body-bg;\n$thumbnail-border: none;\n$thumbnail-padding: 0;\n$thumbnail-border-radius: $border-radius;\n$thumbnail-box-shadow: none;\n\n// Figures\n\n$figure-caption-font-size: 1rem;\n$figure-caption-color: $gray-600;\n\n// Close\n$close-font-size: $font-size-base * 1.5;\n$close-font-weight: $font-weight-bold;\n$close-color: lighten($dark, 20%);\n$close-text-shadow: none;\n\n// Code\n$code-font-size: 0.75rem;\n$code-line-height: 1.375rem;\n$code-padding-y: 0.1875rem;\n$code-padding-x: 0.8125rem;\n$code-background-color: rgba(19, 19, 19, 0.8);\n\n$kbd-font-size: 0.75rem;\n$kbd-border-radius: 0.625rem;\n$kbd-box-shadow: none;\n$kbd-padding-y: $code-padding-y;\n$kbd-padding-x: $code-padding-x;\n$kbd-color: $white;\n$kbd-bg: $gray-900;\n\n$nested-kbd-font-weight: $font-weight-bold;\n\n$pre-color: $gray-900;\n$pre-scrollable-max-height: 340px;\n$pre-code-border-radius: 4px;\n$pre-code-background-color: $gray-700;\n$pre-color: $gray-100;\n$pre-font-size: 0.9em;\n$pre-max-height: 460px;\n$pre-margin-bottom: 24px;\n$pre-padding: 16px;\n\n// Utils\n$positions: static, relative, absolute, fixed, sticky;\n$user-selects: all, auto, none;\n$link-shade-percentage: 20%;\n// Icon links\n// scss-docs-start icon-link-variables\n$icon-link-gap: 0.375rem;\n$icon-link-underline-offset: 0.25em;\n$icon-link-icon-size: 1em;\n$icon-link-icon-transition: 0.2s ease-in-out transform;\n$icon-link-icon-transform: translate3d(0.25em, 0, 0);\n$stretched-link-pseudo-element: after;\n$stretched-link-z-index: 1;\n// // Slider control (nouislider)\n// $slider-base-size: 5px;\n// $slider-base-box-shadow: inset 0 1px 2px rgba($dark, 0.1);\n// $slider-base-border-radius: 5px;\n// $slider-base-background: lighten($dark, 55%);\n// $slider-base-margin-top: 35px;\n\n// $slider-connect-color: theme-color(\"primary\");\n// $slider-pips-color: lighten($dark, 30%);\n\n// $slider-tooltip-padding: 5px 10px;\n// $slider-tooltip-font-size: 0.75rem;\n// $slider-tooltip-background: $white;\n// $slider-tooltip-border-radius: $border-radius;\n// $slider-tooltip-color: $dark;\n// $slider-tooltip-border-radius: 5px;\n// $slider-tooltip-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n// $slider-handle-transition: $transition-base;\n// $slider-handle-border: 1px solid lighten($dark, 53%);\n// $slider-handle-background: $white;\n// $slider-handle-disabled-background: lighten($dark, 57%);\n// $slider-handle-border-radius: 50%;\n// $slider-handle-width: 23px;\n// $slider-handle-height: 23px;\n\n// $slider-handle-box-shadow: 0 3px 15px rgba($dark, 0.1), 0 2px 3px rgba($dark, 0.2);\n\n// $slider-handle-focus-box-shadow: 0 0 8px rgba(theme-color(\"primary\"), 0.65), 0 3px 15px rgba($dark, 0.1),\n//   0 2px 3px rgba($dark, 0.2);\n\n// // Datepicker\n\n// $datepicker-border-radius: $card-border-radius;\n// $datepicker-dropdown-padding: 20px 22px;\n\n// $datepicker-cell-transition: $transition-base;\n// $datepicker-cell-hover-background: lighten($dark, 55%);\n// $datepicker-cell-border-radius: 50%;\n// $datepicker-cell-width: 36px;\n// $datepicker-cell-height: 36px;\n\n// $datepicker-disabled-cell-color: lighten($dark, 53%);\n// $datepicker-disabled-old-new-color: lighten($dark, 40%);\n\n// $datepicker-header-cell-border-radius: $border-radius;\n\n// $datepicker-active-color: $white;\n// $datepicker-active-background: theme-color(\"primary\");\n\n// $datepicker-range-background: theme-color(\"primary\");\n// $datepicker-range-cell-focused-background: darken($datepicker-range-background, 5%);\n// $datepicker-range-color: $white;\n// $datepicker-range-highlighted-bg: $gray-200;\n\n// $datepicker-dropdown-border: lighten($dark, 40%);\n// $datepicker-dropdown-bg: $white;\n// $datepicker-highlighted-bg: $datepicker-active-background;\n","//============================================================\n// COLOR SYSTEM\n//============================================================\n\n// scss-docs-start gray-color-variables\n$white: #fff !default;\n$gray-100: map.get($mono, 900) !default;\n$gray-200: map.get($mono, 800) !default;\n$gray-300: map.get($mono, 700) !default;\n$gray-400: map.get($mono, 600) !default;\n$gray-500: map.get($mono, 500) !default;\n$gray-600: map.get($mono, 400) !default;\n$gray-700: map.get($mono, 300) !default;\n$gray-800: map.get($mono, 200) !default;\n$gray-900: map.get($mono, 100) !default;\n$black: #000;\n// scss-docs-end gray-color-variables\n\n// scss-docs-start gray-colors-map\n$grays: (\n  '100': $gray-100,\n  '200': $gray-200,\n  '300': $gray-300,\n  '400': $gray-400,\n  '500': $gray-500,\n  '600': $gray-600,\n  '700': $gray-700,\n  '800': $gray-800,\n  '900': $gray-900,\n) !default;\n// scss-docs-end gray-colors-map\n\n// scss-docs-start color-variables\n$blue: map.get($mojo-blue, hex) !default;\n$indigo: map.get($mojo-violet, hex) !default;\n$purple: map.get($mojo-violet, light) !default;\n$pink: map.get($mojo-red, light) !default;\n$red: map.get($mojo-red, hex) !default;\n$orange: map.get($mojo-coral, hex) !default;\n$yellow: map.get($mojo-yellow, hex) !default;\n$green: map.get($mojo-green, hex) !default;\n$teal: map.get($mojo-ocean, hex) !default;\n$cyan: map.get($mojo-cyan, hex) !default;\n// scss-docs-end color-variables\n\n// scss-docs-start colors-map\n$colors: (\n  'blue': $blue,\n  'indigo': $indigo,\n  'purple': $purple,\n  'pink': $pink,\n  'red': $red,\n  'orange': $orange,\n  'yellow': $yellow,\n  'green': $green,\n  'teal': $teal,\n  'cyan': $cyan,\n  'black': $black,\n  'white': $white,\n  'gray': $gray-600,\n  'gray-dark': $gray-800,\n) !default;\n// scss-docs-end colors-map\n\n// scss-docs-start theme-color-variables\n$primary: map.get($mojo-violet, hex) !default;\n$secondary: map.get($mojo-ocean, hex) !default;\n$success: map.get($mojo-green, hex) !default;\n$info: map.get($mojo-cyan, hex) !default;\n$warning: map.get($mojo-yellow, hex) !default;\n$danger: map.get($mojo-red, hex) !default;\n$light: map.get($mono, 900) !default;\n$dark: map.get($mono, 100) !default;\n// scss-docs-end theme-color-variables\n\n$mojo-colors: (\n  'cyan': map.get($mojo-cyan, hex),\n  'ocean': map.get($mojo-ocean, hex),\n  'blue': map.get($mojo-blue, hex),\n  'violet': map.get($mojo-violet, hex),\n  'red': map.get($mojo-red, hex),\n  'coral': map.get($mojo-coral, hex),\n  'yellow': map.get($mojo-yellow, hex),\n  'green': map.get($mojo-green, hex),\n);\n\n$theme-colors: (\n  'primary': $primary,\n  'secondary': $secondary,\n  'success': $success,\n  'info': $info,\n  'warning': $warning,\n  'danger': $danger,\n  'light': $light,\n  'dark': $dark,\n);\n\n// scss-docs-start page-color-variables\n$heading: $gray-200;\n$heading-dark: $gray-800;\n$text: $light;\n$text-dark: $gray-100;\n$body: darken(map.get($mono, 100), 3);\n$body-dark: $gray-100;\n$link-color: map.get($mojo-blue, hex);\n$link-hover: map.get($mojo-blue, dark);\n$link-visited: map.get($mojo-violet, hex);\n$link-color-dark: map.get($mojo-blue, light);\n$link-hover-dark: map.get($mojo-ocean, light);\n$link-visited-dark: map.get($mojo-violet, light);\n$caption: $gray-500;\n$caption-dark: $gray-400;\n$code-body: $gray-700;\n$code-body-dark: map.get($mono, 700);\n$code-text: map.get($mono, 700);\n$code-text-dark: $gray-700;\n$navbar: map.get($mojo-violet, hex);\n$navbar-dark: $dark;\n$border: map.get($mono, 400);\n$border-dark: $gray-400;\n// scss-docs-end page-color-variables\n\n// Gradient\n//\n// The gradient which is added to components if `$enable-gradients` is `true`\n// This gradient is also added to elements with `.bg-gradient`\n// scss-docs-start variable-gradient\n$gradient: linear-gradient(180deg, rgba($gray-400, 0.15), rgba($gray-200, 0));\n\n//============================================================\n// FONT SYSTEM\n//============================================================\n\n$google-fonts-import: false !default;\n\n$PrimaryFont: (\n  family: 'Jost',\n  src: 'Jost/jost-variablefont_wght-webfont',\n  ext: 'woff',\n  weight: 400,\n  style: normal,\n  selector: 'html, body, p, li, b, i, strong, a, mark, td, th, button',\n  stack: $SansStack,\n  display: swap,\n);\n\n$HeadingFont: (\n  family: 'Saira',\n  src: 'Saira/saira-variablefont_wdthwght-webfont',\n  ext: 'woff',\n  weight: 700,\n  style: bold,\n  selector: 'h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6',\n  stack: $SansStack,\n  display: swap,\n);\n\n$CodeFont: (\n  family: 'Space Grotesk',\n  src: 'Space_Grotesk/spacegrotesk-variablefont_wght-webfont',\n  ext: 'woff',\n  weight: 400,\n  style: normal,\n  selector: 'code, pre, samp, kbd, caption, blockquote, cite, .code-block, .code-block p, aside, label, legend, .quote',\n  stack: $MonoStack,\n  display: swap,\n);\n\n//============================================================\n// UNIT SIZE SYSTEM\n//============================================================\n// Shortcuts to use along side or inplace of the 'toolbox/_rhythm.scss' code\n// Caution: Using a large number of various spacings will complicate having a\n// vertical or horizontal rhythm. consider adjusting the maps instead of trying\n// to keep track of what sizes are in play.\n$sz_1: 0.2rem; //1.6px\n$sz_2: 0.5rem; //8px\n$sz_3: 1rem; //16px\n$sz_4: 1.5rem; //24px\n$sz_5: 2rem; //32px\n$sz_6: 2.5rem;\n$sz_7: 3rem; //48px\n$sz_8: 3.5rem;\n$sz_9: 4rem; //64px\n$sz_10: 5rem; //80px\n$sz_11: 6rem; //96px\n$sz_12: 7rem;\n$sz_13: 8rem; //128px\n$sz_14: 9rem;\n$sz_15: 10rem; //160px\n$sz_20: 20rem; //320px\n$sz_30: 30rem; //480px\n$sz_40: 40rem; //640px\n$sz_50: 50rem; //800px\n$sz_60: 60rem; //960px\n$sz_70: 70rem; //1280px\n","@mixin hover {\n  &:hover {\n    @content;\n  }\n}\n\n@mixin hover-focus {\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin plain-hover-focus {\n  &,\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin hover-focus-active {\n  &:hover,\n  &:focus,\n  &:active {\n    @content;\n  }\n}\n","//   ______  __  __   ______  ______   ______   ______   ______   ______  __  __   __  __\n//  /\\__  _\\/\\ \\_\\ \\ /\\  == \\/\\  __ \\ /\\  ___\\ /\\  == \\ /\\  __ \\ /\\  == \\/\\ \\_\\ \\ /\\ \\_\\ \\\n//  \\/_/\\ \\/\\ \\____ \\\\ \\  _-/\\ \\ \\/\\ \\\\ \\ \\__ \\\\ \\  __< \\ \\  __ \\\\ \\  _-/\\ \\  __ \\\\ \\____ \\\n//     \\ \\_\\ \\/\\_____\\\\ \\_\\   \\ \\_____\\\\ \\_____\\\\ \\_\\ \\_\\\\ \\_\\ \\_\\\\ \\_\\   \\ \\_\\ \\_\\\\/\\_____\\\n//      \\/_/  \\/_____/ \\/_/    \\/_____/ \\/_____/ \\/_/ /_/ \\/_/\\/_/ \\/_/    \\/_/\\/_/ \\/_____/\n//\n//  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\  TEXT BASED MIXINS & FUNCTIONS  \\\\\\\\\\\\\\\\\\\\\\\\\n//\n//    This file concerns itself with the font-size and line-height and related functions.\n//    For things like, line length, or ellipses and word wrap, see text.scss\n//\n//\n\n// font(font-weight, font-size, letter-spacing)\n@mixin font($args...) {\n  @include apply-props($args, font-weight, font-size, letter-spacing);\n}\n\n@mixin rem-font-size($size) {\n  @if (unit($size) == \"rem\") {\n    font-size: rem_px($size);\n    font-size: $size;\n  } @else if (unit($size) == \"px\") {\n    font-size: $size;\n    font-size: px_rem($size);\n  } @else {\n    @error \"#{$size} is an invalid value for mixin `font-size`. Use `rem` or `px` only.\";\n  }\n}\n\n@mixin font-size-line-height($size, $important: false) {\n  @if map-has-key($font-sizes, $size) and map-has-key($font-line-sizes, $size) {\n    @if ($important == true) {\n      font-size: map.get($font-sizes, $size) !important;\n      line-height: map.get($font-line-sizes, $size) !important;\n    } @else {\n      font-size: map.get($font-sizes, $size);\n      line-height: map.get($font-line-sizes, $size);\n    }\n  } @else {\n    @error \"Invalid font line-height size: '#{$size}'.\";\n  }\n}\n\n// Shortcut to quickly grab the corresponding font size for a given key from the global font-size map\n@mixin getFontSize($size, $important: false) {\n  @if map-has-key($font-sizes, $size) {\n    @if ($important == true) {\n      font-size: map.get($font-sizes, $size) !important;\n    } @else {\n      font-size: map.get($font-sizes, $size);\n    }\n  } @else {\n    @error \"Invalid font size: '#{$size}'.\";\n  }\n}\n\n// TODO UPDATE THE DATA THIS IS GETTING\n@function getFontSize($size) {\n  @if map-has-key($font-sizes, $size) {\n    @return map.get($font-sizes, $size);\n  } @else {\n    @error \"Invalid font size: '#{$size}'.\";\n  }\n}\n\n@mixin getFontLineSize($size, $important: false) {\n  @if map-has-key($font-line-sizes, $size) {\n    @if ($important == true) {\n      line-height: map.get($font-line-sizes, $size) !important;\n    } @else {\n      line-height: map.get($font-line-sizes, $size);\n    }\n  } @else {\n    @error \"Invalid font line-height size: '#{$size}'.\";\n  }\n}\n\n@function getFontLineSize($size) {\n  @if map-has-key($font-line-sizes, $size) {\n    @return map.get($font-line-sizes, $size);\n  } @else {\n    @error \"Invalid font line-height size: '#{$size}'.\";\n  }\n}\n\n@function getLineScale($value) {\n  @return $value * $ModularRatio;\n}\n\n@function getFontFamily($fontType) {\n  $fam: \"\";\n\n  @if ($fontType == \"code\") or ($fontType == \"mono\") {\n    $fam: getfontdata($CodeFont);\n  } @else if ($fontType == \"heading\") {\n    $fam: getfontdata($HeadingFont);\n  } @else if ($fontType == \"primary\") {\n    $fam: getfontdata($PrimaryFont);\n  } @else {\n    @error \"Invalid font param sent: #{$fontType}\";\n  }\n\n  //@debug \"!!!! getFontFamily #{$fontType} to #{$fam}\";\n  @return $fam;\n}\n\n/// Quickly return any font item(s) from the global font token map.\n/// @param {*} $fontMap global fontmap ie PrimaryFont or HeadingFont map\n@function getFontData($fontMap, $element: family) {\n  $fontElement: map.get($fontMap, $element);\n  @return $fontElement;\n}\n\n//  BASIC @FONT-FACE MIXIN\n//  --------------------------------------------------\n//\n\n$fonts: () !default;\n\n// Generate a new fancy variable @font-face declaration\n// Also adds a standard font size for older browsers.\n@mixin fontFaceSelector($font-data, $cssVar) {\n  //\n  // The backup / standard way of including a custom @font-face\n  // NOTE: there are other ways to accomplish this that can do more if you want to load in multiple font files\n  //       for a single family. IE font.woff, font-bold.woff, font-light.woff etc.\n  //       however since this is a fallback for older browsers, I dont think asking them to load a bunch of fonts\n  //       is going to be a good experience on their admittedly older browser.\n  //\n\n  $selector: map.get($font-data, selector);\n  $family: map.get($font-data, family);\n  $stack: map.get($font-data, stack);\n  $style: map.get($font-data, style);\n  $weight: map.get($font-data, weight);\n  $file: map.get($font-data, src);\n  $ext: map.get($font-data, ext);\n  $display: swap;\n  @if (variable-exists(map.get($font-data, display))) {\n    $display: map.get($font-data, display);\n  }\n  @font-face {\n    font-family: $family;\n    font-style: $style;\n    font-weight: $weight;\n    // Add font types here\n    src: url($font-path + $file + \".\" + $ext) format(\"truetype\");\n    font-display: $display;\n  }\n  @include cssvars((#{unquote($cssVar)}: #{$family, $stack}));\n  #{$selector} {\n    font-family: $family, $stack;\n    font-family: cssvar(#{unquote($cssVar)});\n    font-style: $style;\n    font-weight: $weight;\n  }\n  @debug \"Loaded Font Family #{$family}\";\n}\n\n/// getMaxLineWidth : Optimal line width\n///\n/// Line widths that are too short or too long make it difficult to read.\n///\n/// @param {Number} $font-size Font size of the line (`rem`, `px`, `%`, or unitless)\n/// @param {Number} $line-height Line height of the line (`rem`, `px`, `%`, or unitless)\n/// @param {Number} $CPL or Character Per Line. 45-60 on average. (unitless)\n/// @return {Number} The optimal line width in `px`\n@function getMaxLineWidth($font-size, $line-height, $CPL: $MainContainerCPL) {\n  $line-height: strip_units($line-height);\n  $font-height: decimal_round(math.div($font-size, $line-height), 2);\n  $width: $CPL * $font-height;\n\n  $width_rem: _rem($width);\n\n  @debug \"Max Line Width PX computed as #{$width}\";\n  @debug \"Max Line Width REM computed as #{$width_rem}\";\n\n  @return $width;\n}\n\n// @title   placeholder\n// @details Form input placeholder text\n@mixin placeholder {\n  // scss-lint:disable VendorPrefix\n  &::placeholder {\n    @content;\n  } // Firefox 19+\n  &:input-placeholder {\n    @content;\n  } // IE 10+\n  &::input-placeholder {\n    @content;\n  } // Edge\n  &::input-placeholder {\n    @content;\n  } // Safari and Chrome\n}\n\n@mixin text-hide($height: false, $width: false) {\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0;\n  @if ($height != false) {\n    height: 0;\n  }\n  @if ($width != false) {\n    width: 0;\n  }\n}\n\n@mixin text-hyphen($type: none) {\n  hyphens: $type;\n}\n\n@mixin text-shadow($distance: 2px, $blur: 2px, $colour: fade-out(#000, .5), $angle: 0) {\n  text-shadow: $angle $distance $blur $colour;\n}\n\n@mixin text-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n  overflow-wrap: $wrap;\n  @if $wrap==break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n\n// whiteSpaceOverflow(white-space: nowrap, overflow: hidden, text-overflow: ellipsis, word-wrap: break-word)\n@mixin ellipsis-text($white-space: nowrap, $overflow: hidden, $text-overflow: ellipsis, $word-wrap: break-word) {\n  @include apply-props(\n    ($white-space, $overflow, $text-overflow, $word-wrap),\n    white-space,\n    overflow,\n    text-overflow,\n    word-wrap\n  );\n}\n\n// @title   text-overflow\n// @details Requires inline-block or block for proper styling\n@mixin text-overflow($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: normal;\n  white-space: nowrap;\n}\n\n@mixin reset-text() {\n  font-family: $font-family-base;\n  // We deliberately do NOT reset font-size or word-wrap.\n  font-style: normal;\n  font-weight: $font-weight-normal;\n  line-height: $line-height-base;\n  text-align: left; // Fallback for where `start` is not supported\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  letter-spacing: normal;\n  word-break: normal;\n  white-space: normal;\n  word-spacing: normal;\n  line-break: auto;\n}\n\n// =============================================================================\n// DROP CAPS\n// =============================================================================\n/// Make first letter a dropcap\n/// @param {String} $float-position [left] - Float dropcap so that it does not interupt vertical rhythm of paragraph\n/// @param {Number} $font-size [4em] - `font-size` for dropcap\n/// @param {String} $font-family [inherit] - `font-family` for dropcap\n/// @param {Number} $text-indent [0] - Text indent for dropcap\n/// @param {List} $margin [10px 10px 0 0] - `margin` for dropcap\n/// @param {List} $padding [0 20px] - `padding` for dropcap\n/// @param {Color} $color [inherit] - `color` fo dropcap\n/// @param {Number} $line-height [1] - `line-height` for dropcap\n/// @param {List} $bg [transparent] - `background` for dropcap\n/// @output Properties to create a dropcap\n@mixin Harmonic_Dropcap(\n  $float-position: left,\n  $font-size: 4rem,\n  $font-family: inherit,\n  $text-indent: 0,\n  $margin: 10px 10px 0 0,\n  $padding: 0 20px,\n  $color: inherit,\n  $line-height: 1,\n  $bg: transparent\n) {\n  &::first-letter {\n    float: $float-position;\n    padding: $padding;\n    margin: $margin;\n    font-family: $font-family;\n    line-height: $line-height;\n    color: $color;\n    text-indent: $text-indent;\n    background: $bg;\n    @include rem-font-size($font-size);\n  }\n}\n","// =============================================================================\n// GENERAL TYPOGRAPHY\n// =============================================================================\n\n/// TypographyBodyBase Loads the relative font size + line height combos\n/// for a given breakpoint.\n@mixin TypographyBodyBase($mMap) {\n  @debug \"Setting Font Base for #{map.get($mMap, name)}\";\n\n  $scale: map.get($mMap, scale);\n  $lH: map.get($mMap, lineHeight);\n  $lHpx: map.get($mMap, lineHeight_px);\n  $fS: map.get($mMap, fontSize);\n  $mt: map.get($mMap, vertical);\n  $whiteSpace: px_rem(($fS - $mt), strip-units($fS));\n  $leadSize: calc(strip-units($fS) + $mt) * $scale;\n  $lead: decimal_round(px_rem($leadSize * 1px, strip-units($fS)), 2);\n\n  html {\n    font-size: #{$fS};\n    line-height: #{$lHpx};\n  }\n\n  body,\n  .size-fluid {\n    font-size: px_rem($fS, strip-units($fS));\n    line-height: #{$lH * 1rem};\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: #{$lH * 1rem};\n\n    a {\n      margin-right: decimal_round(($whiteSpace * .5), 0);\n      //line-height: #{$lH + \"rem\"};\n      margin-left: decimal_round(($whiteSpace * .5), 0);\n    }\n\n    &.lead {\n      margin-top: vr-block(.5);\n      margin-bottom: vr-block(1);\n      font-size: $lead;\n      line-height: $lead-line-height;\n      letter-spacing: -.05rem;\n    }\n  }\n}\n\n// TODO Update This to actually work\n// @include cssvars(\n//   (\n//     paragraph-font-size: 1em,\n//     paragraph-margin-bottom: 24px,\n//     link-color: cssvar(primary-color),\n//     link-text-transform: none,\n//     link-text-decoration: none,\n//     link-font-weight: normal,\n//   )\n// );\n\n// HTML+BODY Font Styles\n$minBP: nth(map-keys($chords), 1);\n$firstMap: map.get($chords, $minBP);\n@include TypographyBodyBase($firstMap);\n\n//  Skip smallest breakpoint b/c size is 0.\n$maxBP: calc(length(map-keys($chords)) - 1);\n@debug \"Total Breakpoints: #{$maxBP + 1}\";\n@each $mapKey, $c in $chords {\n  @if (map.get($c, abrev) != $minBP) {\n    @include media-breakpoint-up(map.get($c, abrev)) {\n      @include TypographyBodyBase($c);\n    }\n  }\n}\n\n//\n//  HYPERLINKS\na {\n  color: $link-color;\n  text-decoration: none;\n  outline-style: none;\n  // @TODO Animate\n\n  &.underline {\n    text-decoration: underline;\n  }\n\n  &:hover {\n    color: $link-hover;\n    text-decoration: underline;\n    cursor: pointer;\n    @include animate-css(pulse);\n  }\n\n  &:link {\n    color: $link-color;\n  }\n\n  &:visited {\n    color: $link-visited;\n  }\n\n  small {\n    font-variant: small-caps;\n    text-decoration: none;\n  }\n}\n\n// Fix button stylings\na.btn {\n  text-decoration: none;\n  &:hover {\n    text-decoration: none;\n  }\n}\n\n//\n//  Paragraph Styles\np {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"onum\", \"pnum\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-numeric: oldstyle-nums, proportional-nums;\n  hyphens: none; // sets a minimum number of characters before and after the break\n  word-break: break-word; //non-standard css for webkit\n  word-wrap: break-word; // cleaning up the ragged lines and breaks\n  overflow-wrap: break-word;\n  -webkit-hyphenate-before: 2;\n  -webkit-hyphenate-after: 3;\n  hyphenate-lines: 3;\n  text-rendering: optimizelegibility;\n}\n\np abbr,\np span {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"onum\", \"pnum\", \"smcp\", \"c2sc\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-caps: all-small-caps;\n  font-variant-numeric: oldstyle-nums, proportional-nums;\n  text-rendering: optimizelegibility;\n}\n\np + p {\n  text-indent: $main-indent;\n\n  // No indent for drop caps\n  + .drop-cap {\n    text-indent: 0;\n  }\n}\n\nabbr {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"onum\", \"pnum\", \"smcp\", \"c2sc\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-caps: all-small-caps;\n  font-variant-numeric: oldstyle-nums, proportional-nums;\n  text-rendering: optimizelegibility;\n}\n\ntd {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"lnum\", \"tnum\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-numeric: lining-nums, tabular-nums;\n}\n\nstrong,\nb {\n  font-weight: 600;\n}\n\n// Highlight\nmark {\n  padding: 0 .2rem;\n  color: $dark;\n  background: $info;\n}\n\ndisabled {\n  color: rgba($dark, .5);\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max: breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","//\n//     █████████               ███                             █████\n//    ███░░░░░███             ░░░                             ░░███\n//   ░███    ░███  ████████   ████  █████████████    ██████   ███████    ██████\n//   ░███████████ ░░███░░███ ░░███ ░░███░░███░░███  ░░░░░███ ░░░███░    ███░░███\n//   ░███░░░░░███  ░███ ░███  ░███  ░███ ░███ ░███   ███████   ░███    ░███████\n//   ░███    ░███  ░███ ░███  ░███  ░███ ░███ ░███  ███░░███   ░███ ███░███░░░\n//   █████   █████ ████ █████ █████ █████░███ █████░░████████  ░░█████ ░░██████\n//  ░░░░░   ░░░░░ ░░░░ ░░░░░ ░░░░░ ░░░░░ ░░░ ░░░░░  ░░░░░░░░    ░░░░░   ░░░░░░\n//\n//  @credit: (Rocket-Propel)[https://github.com/chrishumboldt/Rocket-Propel]\n//\n\n// -----------------------------------------------------------------------\n//\n//     SCSS mixin based on Animate.css\n//\n//     Animate.css https://daneden.github.io/animate.css\n//     Licensed under the MIT license - https://opensource.org/licenses/MIT\n//     Copyright (c) 2015 Daniel Eden\n//\n// -----------------------------------------------------------------------\n//\n//     Syntax:\n//     @include animate-css($type, [$duration, $repeat]);\n//\n//     Requirements:  Autoprefixer\n//\n//     Notes:\n//     @keyframes will boubble why extend placeholders will\n//     cause keyframes to be printed – even if not used.\n//\n//     To avoid class dependencies the classes .animate and\n//     .infinite has been removed. .animate values comes\n//     with each include and .infinite can be set by passing\n//     $repeat: infinite\n//\n//     Type values:\n//     bounce\n//     flash\n//     pulse\n//     rubberBand\n//     shake\n//     headShake\n//     swing\n//     tada\n//     wobble\n//     jello\n//     bounceIn\n//     bounceInDown\n//     bounceInLeft\n//     bounceInRight\n//     bounceInUp\n//     bounceOut\n//     bounceOutDown\n//     bounceOutLeft\n//     bounceOutRight\n//     bounceOutUp\n//     fadeIn\n//     fadeInDown\n//     fadeInDownBig\n//     fadeInLeft\n//     fadeInLeftBig\n//     fadeInRight\n//     fadeInRightBig\n//     fadeInUp\n//     fadeInUpBig\n//     fadeOut\n//     fadeOutDown\n//     fadeOutDownBig\n//     fadeOutLeft\n//     fadeOutLeftBig\n//     fadeOutRight\n//     fadeOutRightBig\n//     fadeOutUp\n//     fadeOutUpBig\n//     flipInX\n//     flipInY\n//     flipOutX\n//     flipOutY\n//     lightSpeedIn\n//     lightSpeedOut\n//     rotateIn\n//     rotateInDownLeft\n//     rotateInDownRight\n//     rotateInUpLeft\n//     rotateInUpRight\n//     rotateOut\n//     rotateOutDownLeft\n//     rotateOutDownRight\n//     rotateOutUpLeft\n//     rotateOutUpRight\n//     hinge\n//     rollIn\n//     rollOut\n//     zoomIn\n//     zoomInDown\n//     zoomInLeft\n//     zoomInRight\n//     zoomInUp\n//     zoomOut\n//     zoomOutDown\n//     zoomOutLeft\n//     zoomOutRight\n//     zoomOutUp\n//     slideInDown\n//     slideInLeft\n//     slideInRight\n//     slideInUp\n//     slideOutDown\n//     slideOutLeft\n//     slideOutRight\n//     slideOutUp\n//\n// -----------------------------------------------------------------------\n@mixin animate-css($type, $duration: null, $repeat: null) {\n  //     Animation name prefix\n  $prefix: \"\";\n\n  //     Type\n  animation-name: unquote($prefix + $type);\n\n  //     Duration\n  $duration: if(not $duration and index(hinge, $type), 2s, $duration);\n  $duration: if(\n    not $duration and index(bouncein bounceout flipoutx flipouty, $type),\n    .75s,\n    $duration\n  );\n  animation-duration: $duration or 1s;\n\n  //     Repeat\n  animation-iteration-count: if($repeat == infinite, infinite, $repeat);\n\n  //    Fill mode\n  animation-fill-mode: both;\n\n  //    Custom\n  @if $type == bounce {\n    transform-origin: center bottom;\n  }\n  @if $type == headShake {\n    animation-timing-function: ease-in-out;\n  }\n  @if $type == swing {\n    transform-origin: top center;\n  }\n  @if $type == jello {\n    transform-origin: center;\n  }\n  @if $type == flip {\n    backface-visibility: visible;\n  }\n  @if $type == flipInX {\n    backface-visibility: visible !important;\n  }\n  @if $type == flipInY {\n    backface-visibility: visible !important;\n  }\n  @if $type == flipOutX {\n    backface-visibility: visible !important;\n  }\n  @if $type == flipOutY {\n    backface-visibility: visible !important;\n  }\n  @if $type == lightSpeedIn {\n    animation-timing-function: ease-out;\n  }\n  @if $type == lightSpeedOut {\n    animation-timing-function: ease-in;\n  }\n\n  //    Keyframes\n  $keyframerenderonce: if(\n    global-variable-exists(keyframerenderonce),\n    $keyframerenderonce,\n    ()\n  ) !global;\n  @if not index($keyframerenderonce, $type) {\n    $keyframerenderonce: append($keyframerenderonce, $type) !global;\n    @keyframes .#{$prefix + $type} {\n      //     Attention Seekers\n      @if $type == bounce {\n        20%,\n        53%,\n        80%,\n        0%,\n        100% {\n          transform: translate3d(0, 0, 0);\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        40%,\n        43% {\n          transform: translate3d(0, -30px, 0);\n          animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n        }\n        70% {\n          transform: translate3d(0, -15px, 0);\n          animation-timing-function: cubic-bezier(.755, .05, .855, .06);\n        }\n        90% {\n          transform: translate3d(0, -4px, 0);\n        }\n      }\n      @if $type == flash {\n        50%,\n        0%,\n        100% {\n          opacity: 1;\n        }\n        25%,\n        75% {\n          opacity: 0;\n        }\n      }\n      @if $type == pulse {\n        0% {\n          transform: scale3d(1, 1, 1);\n        }\n        50% {\n          transform: scale3d(1.05, 1.05, 1.05);\n        }\n        100% {\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == rubberBand {\n        0% {\n          transform: scale3d(1, 1, 1);\n        }\n        30% {\n          transform: scale3d(1.25, .75, 1);\n        }\n        40% {\n          transform: scale3d(.75, 1.25, 1);\n        }\n        50% {\n          transform: scale3d(1.15, .85, 1);\n        }\n        65% {\n          transform: scale3d(.95, 1.05, 1);\n        }\n        75% {\n          transform: scale3d(1.05, .95, 1);\n        }\n        100% {\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == shake {\n        0%,\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n        10%,\n        30%,\n        50%,\n        70%,\n        90% {\n          transform: translate3d(-10px, 0, 0);\n        }\n        20%,\n        40%,\n        60%,\n        80% {\n          transform: translate3d(10px, 0, 0);\n        }\n      }\n      @if $type == headShake {\n        0% {\n          transform: translateX(0);\n        }\n        6.5% {\n          transform: translateX(-6px) rotateY(-9deg);\n        }\n        18.5% {\n          transform: translateX(5px) rotateY(7deg);\n        }\n        31.5% {\n          transform: translateX(-3px) rotateY(-5deg);\n        }\n        43.5% {\n          transform: translateX(2px) rotateY(3deg);\n        }\n        50% {\n          transform: translateX(0);\n        }\n      }\n      @if $type == swing {\n        20% {\n          transform: rotate3d(0, 0, 1, 15deg);\n        }\n        40% {\n          transform: rotate3d(0, 0, 1, -10deg);\n        }\n        60% {\n          transform: rotate3d(0, 0, 1, 5deg);\n        }\n        80% {\n          transform: rotate3d(0, 0, 1, -5deg);\n        }\n        100% {\n          transform: rotate3d(0, 0, 1, 0deg);\n        }\n      }\n      @if $type == tada {\n        0% {\n          transform: scale3d(1, 1, 1);\n        }\n        10%,\n        20% {\n          transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);\n        }\n        30%,\n        50%,\n        70%,\n        90% {\n          transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\n        }\n        40%,\n        60%,\n        80% {\n          transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\n        }\n        100% {\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == wobble {\n        0% {\n          transform: none;\n        }\n        15% {\n          transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\n        }\n        30% {\n          transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\n        }\n        45% {\n          transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\n        }\n        60% {\n          transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\n        }\n        75% {\n          transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == jello {\n        11.1%,\n        0%,\n        100% {\n          transform: none;\n        }\n        22.2% {\n          transform: skewX(-12.5deg) skewY(-12.5deg);\n        }\n        33.3% {\n          transform: skewX(6.25deg) skewY(6.25deg);\n        }\n        44.4% {\n          transform: skewX(-3.125deg) skewY(-3.125deg);\n        }\n        55.5% {\n          transform: skewX(1.5625deg) skewY(1.5625deg);\n        }\n        66.6% {\n          transform: skewX(-.78125deg) skewY(-.78125deg);\n        }\n        77.7% {\n          transform: skewX(.390625deg) skewY(.390625deg);\n        }\n        88.8% {\n          transform: skewX(-.1953125deg) skewY(-.1953125deg);\n        }\n      }\n      //     Bouncing Entrances\n      @if $type == bounceIn {\n        20%,\n        40%,\n        60%,\n        80%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n        20% {\n          transform: scale3d(1.1, 1.1, 1.1);\n        }\n        40% {\n          transform: scale3d(.9, .9, .9);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(1.03, 1.03, 1.03);\n        }\n        80% {\n          transform: scale3d(.97, .97, .97);\n        }\n        100% {\n          opacity: 1;\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      @if $type == bounceInDown {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(0, -3000px, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(0, 25px, 0);\n        }\n        75% {\n          transform: translate3d(0, -10px, 0);\n        }\n        90% {\n          transform: translate3d(0, 5px, 0);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == bounceInLeft {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(-3000px, 0, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(25px, 0, 0);\n        }\n        75% {\n          transform: translate3d(-10px, 0, 0);\n        }\n        90% {\n          transform: translate3d(5px, 0, 0);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == bounceInRight {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(3000px, 0, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(-25px, 0, 0);\n        }\n        75% {\n          transform: translate3d(10px, 0, 0);\n        }\n        90% {\n          transform: translate3d(-5px, 0, 0);\n        }\n        100% {\n          transform: none;\n        }\n      }\n      @if $type == bounceInUp {\n        60%,\n        75%,\n        90%,\n        0%,\n        100% {\n          animation-timing-function: cubic-bezier(.215, .61, .355, 1);\n        }\n        0% {\n          opacity: 0;\n          transform: translate3d(0, 3000px, 0);\n        }\n        60% {\n          opacity: 1;\n          transform: translate3d(0, -20px, 0);\n        }\n        75% {\n          transform: translate3d(0, 10px, 0);\n        }\n        90% {\n          transform: translate3d(0, -5px, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      //     Bouncing Exits\n      @if $type == bounceOut {\n        20% {\n          transform: scale3d(.9, .9, .9);\n        }\n        50%,\n        55% {\n          opacity: 1;\n          transform: scale3d(1.1, 1.1, 1.1);\n        }\n        100% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n      }\n      @if $type == bounceOutDown {\n        20% {\n          transform: translate3d(0, 10px, 0);\n        }\n        40%,\n        45% {\n          opacity: 1;\n          transform: translate3d(0, -20px, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 2000px, 0);\n        }\n      }\n\n      @if $type == bounceOutLeft {\n        20% {\n          opacity: 1;\n          transform: translate3d(20px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(-2000px, 0, 0);\n        }\n      }\n      @if $type == bounceOutRight {\n        20% {\n          opacity: 1;\n          transform: translate3d(-20px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(2000px, 0, 0);\n        }\n      }\n      @if $type == bounceOutUp {\n        20% {\n          transform: translate3d(0, -10px, 0);\n        }\n        40%,\n        45% {\n          opacity: 1;\n          transform: translate3d(0, 20px, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, -2000px, 0);\n        }\n      }\n      //     Fading Entrances\n      @if $type == fadeIn {\n        0% {\n          opacity: 0;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n      @if $type == fadeInDown {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, -100%, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInDownBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, -2000px, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInLeft {\n        0% {\n          opacity: 0;\n          transform: translate3d(-100%, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInLeftBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(-2000px, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInRight {\n        0% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInRightBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(2000px, 0, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInUp {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, 100%, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == fadeInUpBig {\n        0% {\n          opacity: 0;\n          transform: translate3d(0, 2000px, 0);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      //    Fading Exits\n      @if $type == fadeOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n      @if $type == fadeOutDown {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 100%, 0);\n        }\n      }\n      @if $type == fadeOutDownBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 2000px, 0);\n        }\n      }\n      @if $type == fadeOutLeft {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(-100%, 0, 0);\n        }\n      }\n      @if $type == fadeOutLeftBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(-2000px, 0, 0);\n        }\n      }\n      @if $type == fadeOutRight {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0);\n        }\n      }\n      @if $type == fadeOutRightBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(2000px, 0, 0);\n        }\n      }\n      @if $type == fadeOutUp {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, -100%, 0);\n        }\n      }\n      @if $type == fadeOutUpBig {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, -2000px, 0);\n        }\n      }\n      //    Flippers\n      @if $type == flip {\n        0% {\n          transform: perspective(400px) rotate3d(0, 1, 0, -360deg);\n          animation-timing-function: ease-out;\n        }\n        40% {\n          transform:\n            perspective(400px)\n            translate3d(0, 0, 150px)\n            rotate3d(0, 1, 0, -190deg);\n          animation-timing-function: ease-out;\n        }\n        50% {\n          transform:\n            perspective(400px)\n            translate3d(0, 0, 150px)\n            rotate3d(0, 1, 0, -170deg);\n          animation-timing-function: ease-in;\n        }\n        80% {\n          transform: perspective(400px) scale3d(.95, .95, .95);\n          animation-timing-function: ease-in;\n        }\n        100% {\n          transform: perspective(400px);\n          animation-timing-function: ease-in;\n        }\n      }\n      @if $type == flipInX {\n        0% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n          animation-timing-function: ease-in;\n        }\n        40% {\n          transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n          animation-timing-function: ease-in;\n        }\n        60% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\n        }\n        80% {\n          transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\n        }\n        100% {\n          transform: perspective(400px);\n        }\n      }\n      @if $type == flipInY {\n        0% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n          animation-timing-function: ease-in;\n        }\n        40% {\n          transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\n          animation-timing-function: ease-in;\n        }\n        60% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\n        }\n        80% {\n          transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\n        }\n        100% {\n          transform: perspective(400px);\n        }\n      }\n      @if $type == flipOutX {\n        0% {\n          transform: perspective(400px);\n        }\n        30% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n        }\n        100% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n        }\n      }\n      @if $type == flipOutY {\n        0% {\n          transform: perspective(400px);\n        }\n        30% {\n          opacity: 1;\n          transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\n        }\n        100% {\n          opacity: 0;\n          transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n        }\n      }\n      //     Lightspeed\n      @if $type == lightSpeedIn {\n        0% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0) skewX(-30deg);\n        }\n        60% {\n          opacity: 1;\n          transform: skewX(20deg);\n        }\n        80% {\n          opacity: 1;\n          transform: skewX(-5deg);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == lightSpeedOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0) skewX(30deg);\n        }\n      }\n      //     Rotating Entrances\n      @if $type == rotateIn {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -200deg);\n          transform-origin: center;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: center;\n        }\n      }\n      @if $type == rotateInDownLeft {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -45deg);\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateInDownRight {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 45deg);\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: right bottom;\n        }\n      }\n      @if $type == rotateInUpLeft {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 45deg);\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateInUpRight {\n        0% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -90deg);\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n          transform-origin: right bottom;\n        }\n      }\n      //     Rotating Exits\n      @if $type == rotateOut {\n        0% {\n          opacity: 1;\n          transform-origin: center;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 200deg);\n          transform-origin: center;\n        }\n      }\n      @if $type == rotateOutDownLeft {\n        0% {\n          opacity: 1;\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 45deg);\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateOutDownRight {\n        0% {\n          opacity: 1;\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -45deg);\n          transform-origin: right bottom;\n        }\n      }\n      @if $type == rotateOutUpLeft {\n        0% {\n          opacity: 1;\n          transform-origin: left bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, -45deg);\n          transform-origin: left bottom;\n        }\n      }\n      @if $type == rotateOutUpRight {\n        0% {\n          opacity: 1;\n          transform-origin: right bottom;\n        }\n        100% {\n          opacity: 0;\n          transform: rotate3d(0, 0, 1, 90deg);\n          transform-origin: right bottom;\n        }\n      }\n      //     Sliding Entrances\n      @if $type == slideInDown {\n        0% {\n          visibility: visible;\n          transform: translate3d(0, -100%, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      @if $type == slideInLeft {\n        0% {\n          visibility: visible;\n          transform: translate3d(-100%, 0, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      @if $type == slideInRight {\n        0% {\n          visibility: visible;\n          transform: translate3d(100%, 0, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      @if $type == slideInUp {\n        0% {\n          visibility: visible;\n          transform: translate3d(0, 100%, 0);\n        }\n        100% {\n          transform: translate3d(0, 0, 0);\n        }\n      }\n      //     Sliding Exits\n      @if $type == slideOutUp {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(0, -100%, 0);\n        }\n      }\n      @if $type == slideOutDown {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(0, 100%, 0);\n        }\n      }\n      @if $type == slideOutLeft {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(-100%, 0, 0);\n        }\n      }\n      @if $type == slideOutRight {\n        0% {\n          transform: translate3d(0, 0, 0);\n        }\n        100% {\n          visibility: hidden;\n          transform: translate3d(1800%, 0, 0);\n        }\n      }\n      //    Zoom Entrances\n      @if $type == zoomIn {\n        0% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n        50% {\n          opacity: 1;\n        }\n      }\n      @if $type == zoomInDown {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomInLeft {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomInRight {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomInUp {\n        0% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        60% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      //    Zoom Exits\n      @if $type == zoomOut {\n        0% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0;\n          transform: scale3d(.3, .3, .3);\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n      @if $type == zoomOutDown {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        100% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\n          transform-origin: center bottom;\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      @if $type == zoomOutLeft {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: scale(.1) translate3d(-2000px, 0, 0);\n          transform-origin: left center;\n        }\n      }\n      @if $type == zoomOutRight {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);\n        }\n        100% {\n          opacity: 0;\n          transform: scale(.1) translate3d(2000px, 0, 0);\n          transform-origin: right center;\n        }\n      }\n      @if $type == zoomOutUp {\n        40% {\n          opacity: 1;\n          transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\n          animation-timing-function: cubic-bezier(.55, .055, .675, .19);\n        }\n        100% {\n          opacity: 0;\n          transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\n          transform-origin: center bottom;\n          animation-timing-function: cubic-bezier(.175, .885, .32, 1);\n        }\n      }\n      //    Specials\n      @if $type == hinge {\n        0% {\n          transform-origin: top left;\n          animation-timing-function: ease-in-out;\n        }\n        20%,\n        60% {\n          transform: rotate3d(0, 0, 1, 80deg);\n          transform-origin: top left;\n          animation-timing-function: ease-in-out;\n        }\n        40%,\n        80% {\n          opacity: 1;\n          transform: rotate3d(0, 0, 1, 60deg);\n          transform-origin: top left;\n          animation-timing-function: ease-in-out;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(0, 700px, 0);\n        }\n      }\n      @if $type == rollIn {\n        0% {\n          opacity: 0;\n          transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\n        }\n        100% {\n          opacity: 1;\n          transform: none;\n        }\n      }\n      @if $type == rollOut {\n        0% {\n          opacity: 1;\n        }\n        100% {\n          opacity: 0;\n          transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);\n        }\n      }\n    }\n  }\n}\n","//\n//    ┳ ┳┳━┓┳━┓┏┏┓┏━┓o┏━┓  ┏┓┓┓ ┳┳━┓┏━┓┏━┓┳━┓┳━┓┳━┓┳ ┳┓ ┳\n//    ┃━┫┃━┫┃┳┛┃┃┃┃ ┃┃┃     ┃ ┗┏┛┃━┛┃ ┃┃ ┳┃┳┛┃━┫┃━┛┃━┫┗┏┛\n//    ┇ ┻┛ ┇┇┗┛┛ ┇┛━┛┇┗━┛   ┇  ┇ ┇  ┛━┛┇━┛┇┗┛┛ ┇┇  ┇ ┻ ┇\n//    --==xxXX  VERTICAL RHYTHM & MODULAR SCALE  XXxx==--\n//\n/// @author Derek Scott\n/// @group typography\n/// This file is nearly identical to the type.scss file. The former is used in the library while the latter is used to develope the typography portion of the library.\n/// TODO: find someone to not repeat code between this and type.scss\n//\n//\n\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:meta';\n@use 'sass:string';\n\n@import 'framework';\n@include mojoBanner('Harmonic Typography', '0.6.0');\n@import 'root';\n@import 'normalize/normalize';\n@import 'kick-off';\n\n@if global-variable-exists(PrimaryFont) {\n  @include fontFaceSelector($PrimaryFont, 'paragraph-font-family');\n}\n\n@if global-variable-exists(HeadingFont) {\n  @include fontFaceSelector($HeadingFont, 'headings-font-family');\n}\n\n@if global-variable-exists(CodeFont) {\n  @include fontFaceSelector($CodeFont, 'code-font-family');\n}\n// @import \"harmony\";\n@import 'harmony/base';\n\n/** Harmonious Heading Sizes */\n@import 'harmony/headings';\n@include Harmonic_Headings_Core();\n@include Harmonic_Headings_Breakpoints();\n@import 'harmony/title';\n\n/** Typography Extras */\n@import 'harmony/typesetting';\n// @import \"harmony/quotes\"; TODO: This needs HTML docs / examples to confirm working\n@import 'harmony/code';\n@import 'harmony/content';\n@import 'harmony/hero';\n","// TODO possible to do font-size in rems & line height in ems...\n// URL: https://github.com/du5rte/typoRhythm\n// h1 {\n//   font-size: 2.9375rem;\n//   margin-bottom: 0.51064em;\n//   line-height: 1.02128[em];\n// }\n\n// @import \"../_frmwrk-config/index\";\n// @import \"../_frmwrk/index\";\n\n$headingSelectors: h1, h2, h3, h4, h5, h6, \".h1\", \".h2\", \".h3\", \".h4\", \".h5\", \".h6\" !default;\n\n// =============================================================================\n// HARMONIC RESPONSIVE HEADINGS\n// =============================================================================\n\n/// This function adds in the basic stylings that are common across all H[1-6] elements\n@mixin Harmonic_Headings_Core() {\n  #{$headingSelectors} {\n    @if global-variable-exists(HeadingFont) {\n      font-family: map.get($HeadingFont, \"family\");\n    }\n    font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"dlig\";\n    font-kerning: normal;\n    font-variant-ligatures: common-ligatures, contextual, discretionary-ligatures;\n    word-break: break-word;\n    font-smoothing: antialiased;\n    text-rendering: optimizelegibility;\n\n    /* <small> subheadings */\n    small,\n    .small,\n    .subtitle {\n      display: block;\n      font-size: 76% !important;\n      line-height: .6 !important;\n    }\n\n    /* very cool link effect */\n    a {\n      text-decoration: underline;\n    }\n  }\n}\n\n/// Mojo_headings_breakpoints has the difficult job of getting all the requirements together\n/// for calling the main `makeHeadings` function that actually prints out the generated CSS.\n@mixin Harmonic_Headings_Breakpoints($debugStyles: false) {\n  // DYNAMIC WEIGHTS\n  // -----------------------------\n  // TODO Put this in the docs\n  //\n  // We divide the total number of breakpoints by the total amount of weights.\n  // Example: 5 breakpoints / 3 weights = 1.67 (rounded up to 2)\n  //\n  // So Every 2 Loops, we advance the current weight.\n  // Example: Breakpoint 576 and 768 have a weight of 300. Then 1024 and 1366 get 500 etc etc.\n  //\n  // With this logic our heading weights scale up and down nicely.\n  //\n  $counter: 0;\n  $weights: 300, 500, 700;\n  // $weightAdjust: computedynamicweight(length($chords), length($weights));\n  $weightAdjust: decimal_round(math.div(6, 3), 0, ceil);\n  @debug \"Every #{$weightAdjust} breakpoints, increase font weight\";\n  $weightNthCounter: 1;\n  $weightCurrent: 0;\n  $weightNth: nth($weights, $weightNthCounter);\n\n  $minBP: nth(map-keys($chords), 1);\n  $minMap: nth(map-values($chords), 1);\n\n  //@include breakpoint(#{$minBP}, max) {\n  $headingFontMap: map.get($minMap, \"headings_px\");\n  $headingLineMap: map.get($minMap, \"headingsLine_px\");\n  $bpLH: map.get($minMap, \"lineHeight_px\");\n  $bpFS: map.get($minMap, \"fontSize\");\n  @include MainLine_heading_compute($headingFontMap, $headingLineMap, 300, $bpFS, $bpLH, true, $debugStyles);\n  //}\n\n  $maxBP: calc(length(map-keys($chords)) - 1);\n  $hLC: 0;\n\n  @each $hKey, $hMap in $chords {\n    $weightNth: nth($weights, $weightNthCounter);\n    $headingFontMap: map.get($hMap, \"headings_px\");\n    $headingLineMap: map.get($hMap, \"headingsLine_px\");\n    $bpLH: map.get($hMap, \"lineHeight_px\");\n    $bpFS: map.get($minMap, \"fontSize\");\n\n    //  Skip smallest breakpoint b/c size is 0.\n    $minBP: nth(map-keys($chords), 1);\n    @if ($hKey != $minBP) {\n      @include media-breakpoint-up(#{$hKey}) {\n        @include MainLine_heading_compute(\n          $headingFontMap,\n          $headingLineMap,\n          $weightNth,\n          $bpFS,\n          $bpLH,\n          true,\n          $debugStyles\n        );\n      }\n    }\n\n    $counter: $counter + 1;\n    $hLC: $hLC + 1;\n    @if ($counter >= $weightAdjust) {\n      @debug \"Advancing Weight Counter\";\n      $weightNthCounter: $weightNthCounter + 1;\n      $counter: 0;\n    }\n  }\n}\n\n// HEADING HELPER UTILS\n// =============================================================================\n\n/// Weights scale down with the screen size\n@function computeDynamicWeight($totalBreaks, $totalWeights) {\n  $span: decimal_round(math.div($totalBreaks, $totalWeights), 0, ceil);\n  @return $span;\n}\n\n/// Basically the first headings need more imporantance and that drops off as they continue in number\n/// the ratio of spaces between them and the content is attempting to find the right \"balance\" of white space based on a number of factors.\n/// In addition the font weight is dynamic, so that certain viewpoints have increased readability (ie Mobile screens dont do bold letters very well)\n@mixin MainLine_heading_compute(\n  $headingFontMap,\n  $headingLineMap,\n  $dynamicFontWeight,\n  $bpFontSize,\n  $bpLineHeight,\n  $silent: true,\n  $debugStyles: false\n) {\n  @if ($silent == false) or ($debug == true) {\n    @debug \"Creating Headings w/ weight #{$dynamicFontWeight}\";\n    @if ($debugStyles != false) {\n      @debug \"Loading Harmonic Headings.... Debug Status: #{$debugStyles}\";\n    }\n  }\n\n  $hLC: 1;\n\n  @each $hfk, $hfm in $headingFontMap {\n    $top: 0;\n    $btm: .25;\n\n    // prettier-ignore\n    @if ($hfk == \"h1\"){ $top: 1; $btm: 2; }\n    // prettier-ignore\n    @if ($hfk == \"h2\"){ $top: 1; $btm: 1; }\n    // prettier-ignore\n    @if ($hfk == \"h3\"){ $top: 0; $btm: 1; }\n    // prettier-ignore\n    @if ($hfk == \"h4\"){ $top: 0; $btm: .5; }\n\n    $HLH: nth(map-values($headingLineMap), $hLC);\n    $HTOP: $top * $bpLineHeight;\n    $HBTM: $btm * $bpLineHeight;\n\n    // IMPORTANT: Resolve to line height to the nearest multiple! Creates a sexy flow.\n    $RhythmHeight: resolve($HLH);\n    $stripBFS: strip-units($bpFontSize);\n\n    @if ($silent == false) {\n      @debug \"Stripped Size: #{$stripBFS}\";\n    }\n\n    $HMarginTop: px_rem($HTOP, $stripBFS);\n    $HMarginBtm: px_rem($HBTM, $stripBFS);\n    $HFontSize: px_rem(decimal_round($hfm, 0), strip-units($bpFontSize), 2);\n    $HLineHeight: px_rem(decimal_round($HLH, 0), strip-units($bpFontSize), 2);\n\n    #{$hfk},\n    .#{$hfk} {\n      @if ($debugStyles != true) {\n        /* test: #{$RhythmHeight} */\n        font-size: decimal_round($hfm, 1);\n        font-size: $HFontSize;\n        line-height: decimal_round(resolve($HLH), 2);\n        line-height: decimal_round(px_rem(resolve($HLH), strip-units($bpFontSize)), 2);\n        font-weight: $dynamicFontWeight;\n        margin-top: $HTOP;\n        margin-bottom: $HBTM;\n        padding: 0;\n      } @else {\n        @include mojo_jolly-margins($HMarginTop, $HMarginBtm, $hfm);\n      }\n    }\n\n    $hLC: $hLC + 1;\n  }\n}\n","$title-color: $heading;\n$title-family: getfontfamily(\"heading\");\n$title-strong-color: $heading-dark;\n$subtitle-color: $gray-400;\n$subtitle-family: getfontfamily(\"primary\");\n$subtitle-strong-color: $gray-500;\n$title-line-height: $modular-ratio;\n$subtitle-line-height: $line-height-base;\n\n.title,\n.subtitle {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"dlig\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual, discretionary-ligatures;\n  word-break: break-word;\n  text-rendering: optimizelegibility;\n\n  em,\n  span {\n    font-weight: inherit;\n  }\n\n  sub {\n    font-size: 75%;\n  }\n\n  sup {\n    font-size: 75%;\n  }\n\n  .tag {\n    vertical-align: middle;\n  }\n}\n\n.title {\n\n  font-size: $title-size;\n  font-weight: $title-weight;\n  line-height: $title-line-height;\n  color: $title-color;\n  letter-spacing: .5px;\n\n  @if $title-family {\n    font-family: $title-family;\n  }\n\n  strong {\n    font-weight: $title-strong-weight;\n    color: $title-strong-color;\n    letter-spacing: .75px;\n  }\n\n  // Sizes\n  @each $key, $size in $font-sizes {\n    $modSize: $title-size + $size - $block-spacing;\n    $newTitleSize: control-scale($modSize, $size);\n    &.title-#{$key} {\n      font-size: $newTitleSize;\n    }\n  }\n}\n\n.subtitle {\n  margin-top: -#{strip_units($subtitle-line-height) * 1rem};\n\n  font-size: $subtitle-size;\n  font-weight: $subtitle-weight;\n  line-height: $subtitle-line-height;\n  color: $subtitle-color;\n  letter-spacing: 2px;\n\n  &.make-spaced {\n    margin-top: $sz_2;\n    letter-spacing: 3.5px;\n  }\n\n  @if $subtitle-family {\n    font-family: $subtitle-family;\n  }\n\n  strong {\n    font-weight: $subtitle-strong-weight;\n    color: $subtitle-strong-color;\n  }\n\n  // Sizes\n  @each $key, $size in $font-sizes {\n    $modSize: $subtitle-size + $size - $block-spacing;\n    $newTitleSize: control-scale($modSize, $size);\n    &.title-#{$key} {\n      font-size: $newTitleSize;\n    }\n  }\n}\n\n// [class^=\"display-*\"] {\n//   font-family: $display-font-family;\n//   font-style:  $display-font-style;\n//   font-weight: $display-font-weight;\n//   line-height: $display-line-height;\n// }\n\n@if ($enable-display-sizes) {\n  //$dTarget: \"\";\n  $base-multi: 1;\n  $multiplier: 0;\n  $count: 0;\n  $total: length($display-font-sizes);\n  @each $name, $width in $grid-breakpoints {\n    $multiplier: if($count > 0, ($count * .1) + $base-multi, 1);\n    @include media-breakpoint-up($name, $grid-breakpoints) {\n      @each $display, $font-size in $display-font-sizes {\n        //@debug \"#{$multiplier} times #{$font-size}\";\n        .display#{breakpoint-infix($name, $grid-breakpoints)}-#{$display} {\n          $resp-font-size: #{$font-size * $multiplier};\n          @include font-size($resp-font-size);\n        }\n        // $dTarget: $dTarget +\n        //   \".display#{breakpoint-infix($name, $grid-breakpoints)}-#{$display},\";\n      }\n    }\n    $count: $count + 1;\n  }\n\n  // #{unquote($dTarget)} {\n  //   font-family: $display-font-family;\n  //   font-style: $display-font-style;\n  //   font-weight: $display-font-weight;\n  //   line-height: $display-line-height;\n  // }\n  [class^=\"display-*\"] {\n    font-family: $display-font-family;\n    font-style: $display-font-style;\n    font-weight: $display-font-weight;\n    line-height: $display-line-height;\n  }\n}\n// // Type display classes\n// @each $display, $font-size in $display-font-sizes {\n//   .display-#{$display} {\n//     @include font-size($font-size);\n//     font-family: $display-font-family;\n//     font-style: $display-font-style;\n//     font-weight: $display-font-weight;\n//     line-height: $display-line-height;\n//   }\n// }\n","//\n//   HUEMENT PRESENTS:\n//   ┏━┓┳  ┏━┓┳━┓┳━┓┳  ┓━┓\n//   ┃ ┳┃  ┃ ┃┃━┃┃━┫┃  ┗━┓\n//   ┇━┛┇━┛┛━┛┇━┛┛ ┇┇━┛━━┛\n//\n\n//============================================================\n// Ratios\n//============================================================\n$MINOR_SECOND: 1.067 !default;\n$MAJOR_SECOND: 1.125 !default;\n$MINOR_THIRD: 1.2 !default;\n$MAJOR_THIRD: 1.25 !default;\n$PERFECT_FOURTH: 1.333 !default;\n$AUGMENTED_FOURTH: 1.414 !default;\n$PERFECT_FIFTH: 1.5 !default;\n$MINOR_SIXTH: 1.6 !default;\n$GOLDEN_SECTION: 1.618 !default;\n$MAJOR_SIXTH: 1.667 !default;\n$MINOR_SEVENTH: 1.778 !default;\n$MAJOR_SEVENTH: 1.875 !default;\n$OCTAVE: 2 !default;\n$MAJOR_TENTH: 2.5 !default;\n$MAJOR_ELEVENTH: 2.667 !default;\n$MAJOR_TWELFTH: 3 !default;\n$DOUBLE_OCTAVE: 4 !default;\n\n$aspect-ratios: (\n  \"1x1\": 100%,\n  \"4x3\": calc(3 / 4 * 100%),\n  \"16x9\": calc(9 / 16 * 100%),\n  \"21x9\": calc(9 / 21 * 100%),\n);\n\n$position-values: (\n  0: 0,\n  50: 50%,\n  100: 100%,\n);\n\n//============================================================\n// Fonts\n//============================================================\n// prettier-ignore\n$SansStack:  -apple-system, blinkmacsystemfont, \"Segoe UI\", roboto, helvetica, arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\" !default;\n\n// prettier-ignore\n$MonoStack: sfmono-regular, menlo, monaco, consolas, \"Andale Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace !default;\n\n// prettier-ignore\n$SerifStack: \"Iowan Old Style\", \"Apple Garamond\", baskerville, \"Times New Roman\", \"Droid Serif\", times, \"Source Serif Pro\", serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\" !default;\n\n$not-integer-txt: \" value breaks vertical rhythm. Use an integer (whole number) for $lines.\" !default;\n\n// Social Media Colorcodes\n$SocialColors: (\n  adn: #504e54,\n  apple: #aeb5c5,\n  android: #a5c63b,\n  bitbucket: #036,\n  bitcoin: #f7931a,\n  css3: #1572b7,\n  dribbble: #f46899,\n  dropbox: #018bd3,\n  facebook: #3c599f,\n  flickr: #ff0084,\n  foursquare: #0086be,\n  github: #070709,\n  google: #cf3d2e,\n  html5: #e54d26,\n  instagram: #a1755c,\n  linkedin: #0085ae,\n  linux: #fbc002,\n  maxcdn: #f6ae1c,\n  pagelines: #241e20,\n  pinterest: #cc2127,\n  renren: #025dac,\n  skype: #01aef2,\n  stack-exchange: #245590,\n  stack-overflow: #ff7300,\n  trello: #265a7f,\n  tumblr: #314e6c,\n  twitter: #32ccfe,\n  vimeo: #229acc,\n  vk: #375474,\n  weibo: #d72b2b,\n  windows: #12b6f3,\n  xing: #00555c,\n  youtube: #c52f30,\n) !default;\n\n//============================================================\n// UI Requires\n//============================================================\n\n// Z-index master list\n//\n// Warning: Avoid customizing these values. They're used for a bird's eye view\n// of components dependent on the z-axis and are designed to all work together.\n\n// scss-docs-start zindex-stack\n$zindex-0: 1 !default;\n$zindex-1: 100 !default;\n$zindex-2: 200 !default;\n$zindex-3: 300 !default;\n$zindex-4: 400 !default;\n$zindex-dropdown: 1000;\n$zindex-sticky: 1020;\n$zindex-fixed: 1030;\n$zindex-offcanvas-backdrop: 1040;\n$zindex-offcanvas: 1045;\n$zindex-modal-backdrop: 1050;\n$zindex-modal: 1055;\n$zindex-navbar: 600 !default;\n$zindex-popover: 1070;\n$zindex-toast: 1090;\n$zindex-tooltip: 1080;\n$zindex-sticky: 900 !default;\n// scss-docs-end zindex-stack\n\n// scss-docs-start zindex-levels-map\n$zindex-levels: (\n  n1: -1,\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n);\n// scss-docs-end zindex-levels-map\n\n// =======================================================================\n// Extras\n// =======================================================================\n$debug: false !default;\n","// =============================================================================\n// TYPESET PLUGIN\n// =============================================================================\n\n.fraction {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"frac\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-numeric: diagonal-fractions;\n}\n\n.fn {\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\", \"subs\";\n  font-kerning: normal;\n  font-variant-ligatures: common-ligatures, contextual;\n  font-variant-position: sub;\n}\n\n.text-break {\n  word-break: break-word !important; // Deprecated, but avoids issues with flex containers\n  word-wrap: break-word !important; // Used instead of `overflow-wrap` for IE & Edge Legacy\n}\n\n// Small caps\n.small-caps {\n  font-variant: small-cap;\n}\n\n// Double quote (\") marks\n.pull-double {\n  margin-left: -.46em;\n}\n\n.push-double {\n  margin-right: .46em;\n}\n\n// Single quote (') marks\n.pull-single {\n  margin-left: -.27em;\n}\n\n.push-single {\n  margin-right: .27em;\n}\n\n.pull-double,\n.push-double,\n.pull-single,\n.push-single {\n  display: inline-block;\n}\n\n// Optical margin alignment for particular letters\n.pull-T,\n.pull-V,\n.pull-W,\n.pull-Y {\n  margin-left: -.07em;\n}\n\n.push-T,\n.push-V,\n.push-W,\n.push-Y {\n  margin-right: .07em;\n}\n\n.pull-O,\n.pull-C,\n.pull-o,\n.pull-c {\n  margin-left: -.04em;\n}\n\n.push-O,\n.push-C,\n.push-o,\n.push-c {\n  margin-right: .04em;\n}\n\n.pull-A {\n  margin-left: -.03em;\n}\n\n.push-A {\n  margin-right: .03em;\n}\n\n.drop-cap {\n  @include Harmonic_Dropcap();\n}\n\n/* TODO: Fix $caption; */\n.caption {\n  //color: $caption;\n  color: #4f4f4f;\n}\n\n.upper {\n  text-transform: uppercase;\n  letter-spacing: .1rem;\n}\n\n.small-caps {\n  font-feature-settings: \"smcp\" 1, \"kern\" 1;\n  letter-spacing: .1rem;\n}\n\n.lining-numerals {\n  font-feature-settings: \"lnum\" 1, \"kern\" 1;\n}\n\n.oldstyle-numerals {\n  font-feature-settings: \"onum\" 1, \"kern\" 1;\n}\n","// Code Styling Adjustments\ncode {\n  display: inline;\n  padding: $code-padding-y $code-padding-x;\n  overflow: auto;\n  font-size: $code-font-size;\n  color: $secondary;\n  white-space: inherit;\n  background-color: $code-background-color;\n  border: 1px solid $secondary;\n  border-radius: $pre-code-border-radius;\n}\n\n// Blocks of code\npre {\n  position: relative;\n  display: block;\n  width: 100%;\n  max-height: $pre-max-height;\n  padding: $pre-padding;\n\n  margin-bottom: $pre-margin-bottom;\n  overflow: auto;\n  font-size: $code-font-size;\n  line-height: $code-line-height;\n  color: $pre-color;\n  word-wrap: break-word;\n  white-space: pre;\n  background-color: $pre-code-background-color;\n  @include border-radius($border-radius);\n\n  code {\n    padding: 0;\n    color: inherit;\n    background-color: transparent;\n    border: none;\n  }\n}\n\n// Inline and block code styles\ncode,\nkbd,\npre,\nsamp {\n  font-family: $font-family-monospace;\n}\n\n// Inline code\ncode {\n}\n\n// User input typically entered via keyboard\nkbd {\n  padding: $kbd-padding-y $kbd-padding-x;\n  font-size: $kbd-font-size;\n  color: $kbd-color;\n  background-color: $kbd-bg;\n  @include border-radius($kbd-border-radius);\n  @include box-shadow($kbd-box-shadow);\n\n  kbd {\n    font-weight: $nested-kbd-font-weight;\n  }\n}\n\n// Scrollable blocks of code\n.pre-scrollable {\n  max-height: $pre-scrollable-max-height;\n}\n","// stylelint-disable property-disallowed-list\n// Single side border-radius\n\n// Helper function to replace negative values with 0\n@function valid-radius($radius) {\n  $return: ();\n  @each $value in $radius {\n    @if type-of($value) == number {\n      $return: append($return, max($value, 0));\n    } @else {\n      $return: append($return, $value);\n    }\n  }\n  @return $return;\n}\n\n// scss-docs-start border-radius-mixins\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: valid-radius($radius);\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n// scss-docs-end border-radius-mixins\n","@mixin box-shadow($shadow...) {\n  @if $enable-shadows {\n    box-shadow: $shadow;\n  }\n}\n","$tile-breakpoint: getbreakpoint($break-point-limit) !default;\n\n.empty {\n  padding: $sz_20 $sz_10;\n  color: $caption;\n  text-align: center;\n  background: $body;\n  border-radius: $border-radius;\n\n  .empty-icon {\n    margin-bottom: $sz_12;\n  }\n\n  .empty-title,\n  .empty-subtitle {\n    margin: $sz_8 auto;\n  }\n\n  .empty-action {\n    margin-top: $sz_12;\n  }\n}\n\n//\n// Vertical Rhythm Spacing Block Base\n.vr-block {\n  position: relative;\n  display: block;\n  width: auto;\n  min-width: 1px;\n}\n\n.tile {\n  display: block;\n  flex-basis: 0;\n  flex-grow: 1;\n  flex-shrink: 1;\n  align-items: stretch;\n  min-height: min-content;\n\n  // Modifiers\n  &.tile-ancestor {\n    margin-top: $tile-spacing * -1;\n    margin-right: $tile-spacing * -1;\n    margin-left: $tile-spacing * -1;\n\n    &:last-child {\n      margin-bottom: $tile-spacing * -1;\n    }\n\n    &:not(:last-child) {\n      margin-bottom: $tile-spacing;\n    }\n  }\n\n  &.tile-child {\n    margin: 0 !important;\n  }\n\n  &.tile-parent {\n    padding: $tile-spacing;\n  }\n\n  &.tile-vertical {\n    flex-direction: column;\n\n    > .tile.tile-child:not(:last-child) {\n      margin-bottom: 1.5rem !important;\n    }\n  }\n\n  // Responsiveness\n  @media screen and (min-width: $tile-breakpoint) {\n    &:not(.tile-child) {\n      display: flex;\n    }\n\n    @for $i from 1 through 12 {\n      &.tile-#{$i} {\n        flex: none;\n        width: math.div($i, 12) * 100%;\n      }\n    }\n  }\n}\n\n// Images Adjustments\n\n// Image thumbnails\n.img-thumbnail {\n  padding: $thumbnail-padding;\n  background-color: $thumbnail-bg;\n  border: $thumbnail-border;\n\n  @include border-radius($thumbnail-border-radius);\n  @include box-shadow($thumbnail-box-shadow);\n}\n\n.img-center {\n  position: relative;\n  display: block;\n  margin: 0 auto;\n}\n\n//\n// Figures\n//\n\n.figure-img {\n  margin-bottom: calc($spacer / 2);\n}\n\n.figure-caption {\n  font-size: $figure-caption-font-size;\n  color: $figure-caption-color;\n}\n","//\n// HERO : Mojo's standin for the old Jumbotron component\n//        Borrowed heavinly from Bulma's 0.9ish library\n\n$hero-body-padding: 3rem 1.5rem !default;\n$hero-body-padding-tablet: 3rem 3rem !default;\n$hero-body-padding-small: 2rem 1.5rem !default;\n$hero-body-padding-medium: 9rem 4.5rem !default;\n$hero-body-padding-large: 18rem 6rem !default;\n\n$hero-title: 3.5rem !default;\n$hero-subtitle: 2.8rem !default;\n$hero-subtitle-sm: 2.4rem !default;\n\n$desktop: map-get($grid-breakpoints, \"lg\");\n$tablet: map-get($grid-breakpoints, \"md\");\n$mobile: map-get($grid-breakpoints, \"sm\");\n\n// Hero\n.hero {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: space-between;\n\n  .navbar {\n    background: none;\n  }\n\n  .tabs {\n    ul {\n      border-bottom: none;\n    }\n  }\n\n  .title,\n  .subtitle {\n    @include block ();\n\n    sub {\n      font-size: .75em;\n    }\n\n    sup {\n      font-size: .75em;\n    }\n\n    .tag {\n      vertical-align: middle;\n    }\n  }\n\n  .title {\n    @include rfs($hero-title);\n  }\n\n  .subtitle {\n    @include rfs($hero-subtitle);\n\n    &.subtitle-sm {\n      @include rfs($hero-subtitle-sm);\n    }\n  }\n\n  // Sizes\n  &.hero-small {\n    .hero-body {\n      padding: $hero-body-padding-small;\n\n      .title {\n        padding-top: $sz_2;\n        font-size: $sz_5;\n      }\n\n      .subtitle {\n        font-size: $sz_4;\n      }\n    }\n  }\n\n  &.hero-medium {\n    .hero-body {\n      .title {\n        font-size: $sz_6;\n      }\n\n      .subtitle {\n        font-size: $sz_5;\n      }\n    }\n\n    @media screen and (min-width: $tablet), print {\n      .hero-body {\n        padding: $hero-body-padding-medium;\n      }\n    }\n  }\n\n  &.hero-large {\n    @media screen and (min-width: $tablet), print {\n      .hero-body {\n        padding: $hero-body-padding-large;\n      }\n    }\n  }\n\n  &.hero-halfheight,\n  &.hero-fullheight,\n  &.hero-fullheight-with-navbar {\n    .hero-body {\n      display: flex;\n      align-items: center;\n\n      > .container {\n        flex-grow: 1;\n        flex-shrink: 1;\n      }\n    }\n  }\n\n  &.hero-halfheight {\n    min-height: 50vh;\n  }\n\n  &.hero-fullheight {\n    min-height: 100vh;\n  }\n}\n\n// Components\n\n.hero-video {\n  @include overlay ();\n\n  overflow: hidden;\n\n  video {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    min-width: 100%;\n    min-height: 100%;\n    transform: translate3d(-50%, -50%, 0);\n  }\n\n  // Modifiers\n  &.video-transparent {\n    opacity: .3;\n  }\n\n  // Responsiveness\n  @media screen and (max-width: $tablet - 1px) {\n    display: none;\n  }\n}\n\n.hero-buttons {\n  margin-top: 1.5rem;\n\n  // Responsiveness\n  @media screen and (max-width: $tablet - 1px) {\n    .button {\n      display: flex;\n\n      &:not(:last-child) {\n        margin-bottom: .75rem;\n      }\n    }\n  }\n\n  @media screen and (min-width: $tablet), print {\n    display: flex;\n    justify-content: center;\n\n    .button:not(:last-child) {\n      margin-right: 1.5rem;\n    }\n  }\n}\n\n// Containers\n\n.hero-head,\n.hero-foot {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.hero-body {\n  flex-grow: 1;\n  flex-shrink: 0;\n  padding: cssvar(hero-body-padding);\n\n  @media screen and (min-width: $tablet), print {\n    padding: $hero-body-padding-tablet;\n  }\n}\n","// Responsive images (ensure images don't scale beyond their parents)\n\n// Responsive image\n//\n// Keep images from scaling beyond the width of their parents.\n\n@mixin img-fluid($display: inline) {\n  display: $display;\n  // Part 1: Set a maximum relative to the parent\n  max-width: 100%;\n  // Part 2: Override the height to auto, otherwise images will be stretched\n  // when setting a width and height attribute on the img element.\n  height: auto;\n}\n\n// Retina image\n//\n// Short retina mixin for setting background-image and -size.\n\n// stylelint-disable indentation, media-query-list-comma-newline-after\n@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {\n  background-image: url($file-1x);\n\n  // Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,\n  // but doesn't convert dppx=>dpi.\n  // There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.\n  // Compatibility info: https://caniuse.com/#feat=css-media-resolution\n  @media only screen and (min-resolution: 192dpi) {\n    background-image: url($file-2x);\n    background-size: $width-1x $height-1x;\n  }\n}\n\n@mixin img-center {\n  position: relative;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n@mixin reset {\n  padding: 0;\n  margin: 0;\n  font-family: inherit;\n  font-size: 1em;\n  color: currentcolor;\n  appearance: none;\n  background: none;\n  border: none;\n}\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  user-select: none;\n}\n\n@mixin arrow($color: transparent) {\n  position: absolute;\n  top: 50%;\n  display: block;\n  width: .625em;\n  height: .625em;\n  margin-top: -.4375em;\n  pointer-events: none;\n  content: \" \";\n  border: 3px solid $color;\n  border-top: 0;\n  border-right: 0;\n  border-radius: 2px;\n  transform: rotate(-45deg);\n  transform-origin: center;\n}\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing;\n  }\n}\n\n@mixin block-center {\n  position: relative;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n@mixin block-box($marginTop: 0, $marginBtm: 0) {\n  position: relative;\n  display: block;\n  width: 100%;\n  height: auto;\n  padding: 0;\n  margin: $marginTop auto $marginBtm auto;\n}\n\n@mixin delete {\n  @include unselectable ();\n  position: relative;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  width: 20px;\n  min-width: 20px;\n  max-width: 20px;\n  height: 20px;\n  min-height: 20px;\n  max-height: 20px;\n  font-size: 0;\n  vertical-align: top;\n  appearance: none;\n  pointer-events: auto;\n  cursor: pointer;\n  background-color: validrgba($dark, .2);\n  border: none;\n  border-radius: $border-radius-lg;\n  outline: none;\n\n  &::before,\n  &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    display: block;\n    content: \"\";\n    background-color: $light_white;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center;\n  }\n\n  &::before {\n    width: 50%;\n    height: 2px;\n  }\n\n  &::after {\n    width: 2px;\n    height: 50%;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: validrgba($dark, .3);\n  }\n\n  &:active {\n    background-color: validrgba($dark, .4);\n  }\n\n  // Sizes\n  &.is-small {\n    width: 16px;\n    min-width: 16px;\n    max-width: 16px;\n    height: 16px;\n    min-height: 16px;\n    max-height: 16px;\n  }\n\n  &.is-medium {\n    width: 24px;\n    min-width: 24px;\n    max-width: 24px;\n    height: 24px;\n    min-height: 24px;\n    max-height: 24px;\n  }\n\n  &.is-large {\n    width: 32px;\n    min-width: 32px;\n    max-width: 32px;\n    height: 32px;\n    min-height: 32px;\n    max-height: 32px;\n  }\n}\n\n@mixin loader {\n  position: relative;\n  display: block;\n  width: 1em;\n  height: 1em;\n  content: \"\";\n  border: 2px solid $medium_light;\n  border-top-color: transparent;\n  border-right-color: transparent;\n  border-radius: $border-radius-lg;\n  animation: spinAround 500ms infinite linear;\n}\n\n@mixin overlay($offset: 0) {\n  position: absolute;\n  top: $offset;\n  right: $offset;\n  bottom: $offset;\n  left: $offset;\n}\n\n@mixin list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch;\n}\n\n@mixin placeholder {\n  $placeholders: \":-moz\" \":-webkit-input\" \"-moz\" \"-ms-input\";\n\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * .5));\n    top: calc(50% - (#{$height} * .5));\n  } @else {\n    left: calc(50% - (#{$width} * .5));\n    top: calc(50% - (#{$width} * .5));\n  }\n}\n"]}